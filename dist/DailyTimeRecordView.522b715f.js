import{a as Rt,d as JE,w as Lv,o as YE,s as zv,q as QE,A as e$,I as t$,b as Wu,l as Mm,i as mt,t as Na,h as Po,c as Pv,e as Kd,m as Xd,f as Zd,v as Bv,W as n$,D as r$,E as a$}from"./index.dc23916b.js";import{_ as s$}from"./logo.c6f18b48.js";import{u as i$}from"./timeLogStore.5ef7adea.js";import{B as o$}from"./BaseTable.2f4a9c82.js";import{_ as l$}from"./NotificationBar.14b0a4e0.js";import{_ as u$}from"./SectionTitleLineWithButton.67256f40.js";import{_ as p$}from"./CardBox.562f4397.js";import{_ as d$}from"./BaseButton.e90b5b96.js";import{p as h$,v as c$,c as m$}from"./mdi.aa269c9f.js";import{_ as f$}from"./_plugin-vue_export-helper.c27b6911.js";import"./index.07eee4a2.js";import"./TableCheckboxCell.a1c98b2b.js";import"./BaseButtons.809b34dd.js";import"./BaseIcon.0daa2018.js";import"./BaseLevel.03004d95.js";var g$=Object.defineProperty,y$=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof require<"u"?require:t)[n]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),ug=(e,t)=>{for(var n in t)g$(e,n,{get:t[n],enumerable:!0})},b$={};ug(b$,{Abs:()=>gl,Acos:()=>si,Acosh:()=>ii,AdadeltaOptimizer:()=>Ey,AdagradOptimizer:()=>$y,AdamOptimizer:()=>Ay,AdamaxOptimizer:()=>Fy,Add:()=>rs,AddN:()=>oi,All:()=>yl,Any:()=>bl,ArgMax:()=>xl,ArgMin:()=>vl,Asin:()=>li,Asinh:()=>ui,Atan:()=>pi,Atan2:()=>hi,Atanh:()=>di,AvgPool:()=>ci,AvgPool3D:()=>wl,AvgPool3DGrad:()=>Ap,AvgPoolGrad:()=>$p,BackendWasm:()=>OC,BatchMatMul:()=>mi,BatchToSpaceND:()=>kl,Bincount:()=>Il,BitwiseAnd:()=>Sl,BroadcastArgs:()=>Fp,BroadcastTo:()=>V0,Callback:()=>MS,CallbackList:()=>CI,Cast:()=>fi,Ceil:()=>gi,ClipByValue:()=>as,Complex:()=>ac,ComplexAbs:()=>Rp,Concat:()=>Nl,Conv2D:()=>yi,Conv2DBackpropFilter:()=>sc,Conv2DBackpropInput:()=>bi,Conv3D:()=>xi,Conv3DBackpropFilterV2:()=>Tl,Conv3DBackpropInputV2:()=>_l,Cos:()=>vi,Cosh:()=>wi,CropAndResize:()=>El,Cumprod:()=>Cl,Cumsum:()=>ki,CustomCallback:()=>$I,DataStorage:()=>tc,DenseBincount:()=>Dp,DepthToSpace:()=>$l,DepthwiseConv2dNative:()=>Ii,DepthwiseConv2dNativeBackpropFilter:()=>ic,DepthwiseConv2dNativeBackpropInput:()=>oc,Diag:()=>Mp,Dilation2D:()=>Si,Dilation2DBackpropFilter:()=>Qo,Dilation2DBackpropInput:()=>Yo,Draw:()=>lc,ENV:()=>mg,EarlyStopping:()=>OS,Einsum:()=>uc,Elu:()=>Ti,EluGrad:()=>Al,Environment:()=>B0,Equal:()=>Fl,Erf:()=>_i,Exp:()=>Ci,ExpandDims:()=>Rl,Expm1:()=>Ei,FFT:()=>pc,Fill:()=>Op,FlipLeftRight:()=>Dl,Floor:()=>$i,FloorDiv:()=>Ai,FromPixels:()=>Th,FusedBatchNorm:()=>Fi,FusedConv2D:()=>Ps,FusedDepthwiseConv2D:()=>Bs,GPGPUContext:()=>wh,GatherNd:()=>Ol,GatherV2:()=>Ml,GraphModel:()=>bx,Greater:()=>Ll,GreaterEqual:()=>Ri,History:()=>EI,IFFT:()=>dc,Identity:()=>Di,Imag:()=>hc,InputSpec:()=>Mt,IsFinite:()=>Mi,IsInf:()=>Oi,IsNan:()=>Li,KernelBackend:()=>Cp,LRN:()=>Wi,LRNGrad:()=>Gl,LayerVariable:()=>vI,LayersModel:()=>da,LeakyRelu:()=>zi,Less:()=>zl,LessEqual:()=>Pl,LinSpace:()=>Bl,Log:()=>Pi,Log1p:()=>Bi,LogSoftmax:()=>G0,LogicalAnd:()=>Wl,LogicalNot:()=>Vl,LogicalOr:()=>Ul,LogicalXor:()=>U0,LowerBound:()=>uA,MathBackendCPU:()=>wx,MathBackendWebGL:()=>Xx,MatrixBandPart:()=>pA,Max:()=>Vi,MaxPool:()=>Gi,MaxPool3D:()=>Hl,MaxPool3DGrad:()=>zp,MaxPoolGrad:()=>Lp,MaxPoolWithArgmax:()=>Pp,Maximum:()=>Ui,Mean:()=>Hi,Min:()=>ji,Minimum:()=>qi,MirrorPad:()=>Ki,Mod:()=>Xi,MomentumOptimizer:()=>Ry,Multinomial:()=>jl,Multiply:()=>Zi,Neg:()=>ql,NonMaxSuppressionV3:()=>Xl,NonMaxSuppressionV4:()=>Zl,NonMaxSuppressionV5:()=>Jl,NotEqual:()=>Kl,OP_SCOPE_SUFFIX:()=>xg,OneHot:()=>Ji,OnesLike:()=>Yl,Optimizer:()=>va,OptimizerConstructors:()=>Qk,Pack:()=>Ql,PadV2:()=>Yi,Pool:()=>dA,Pow:()=>Qi,Prelu:()=>eo,Prod:()=>to,RMSPropOptimizer:()=>Dy,RNN:()=>wa,RaggedGather:()=>cc,RaggedRange:()=>mc,RaggedTensorToTensor:()=>fc,Range:()=>Bp,Rank:()=>rf,Real:()=>gc,RealDiv:()=>Ni,Reciprocal:()=>no,Reduction:()=>xn,Relu:()=>ro,Relu6:()=>io,Reshape:()=>eu,ResizeBilinear:()=>so,ResizeBilinearGrad:()=>nu,ResizeNearestNeighbor:()=>ao,ResizeNearestNeighborGrad:()=>tu,Reverse:()=>oo,RotateWithOffset:()=>yu,Round:()=>lo,Rsqrt:()=>uo,SGDOptimizer:()=>Yc,ScatterNd:()=>ru,SearchSorted:()=>su,Select:()=>iu,Selu:()=>po,Sequential:()=>dm,Sigmoid:()=>fo,Sign:()=>mo,Sin:()=>ho,Sinh:()=>co,Slice:()=>ou,Softmax:()=>xo,Softplus:()=>go,SpaceToBatchND:()=>lu,SparseFillEmptyRows:()=>Wp,SparseReshape:()=>pu,SparseSegmentMean:()=>Vp,SparseSegmentSum:()=>Up,SparseToDense:()=>du,SplitV:()=>uu,Sqrt:()=>yo,Square:()=>Gp,SquaredDifference:()=>vo,StaticRegexReplace:()=>Hp,Step:()=>is,StridedSlice:()=>hu,StringNGrams:()=>jp,StringSplit:()=>qp,StringToHashBucketFast:()=>Kp,Sub:()=>wo,Sum:()=>bo,SymbolicTensor:()=>Fr,Tan:()=>ko,Tanh:()=>Io,Tensor:()=>Ge,TensorBuffer:()=>Ot,TensorScatterUpdate:()=>au,Tile:()=>ss,TopK:()=>cu,Transform:()=>mu,Transpose:()=>pa,Unique:()=>Xp,Unpack:()=>fu,UnsortedSegmentSum:()=>Zp,UpperBound:()=>hA,Variable:()=>Ws,ZerosLike:()=>gu,_FusedMatMul:()=>zs,abs:()=>Dt,acos:()=>Sg,acosh:()=>Ng,add:()=>J,addN:()=>b1,all:()=>wc,any:()=>cp,argMax:()=>Hs,argMin:()=>Tg,asin:()=>_g,asinh:()=>Cg,atan:()=>Eg,atan2:()=>$g,atanh:()=>Ag,avgPool:()=>ya,avgPool3d:()=>Rg,backend:()=>vg,backend_util:()=>T,basicLSTMCell:()=>k1,batchNorm:()=>So,batchNorm2d:()=>Dg,batchNorm3d:()=>Mg,batchNorm4d:()=>Og,batchToSpaceND:()=>rd,bincount:()=>Lg,bitwiseAnd:()=>I1,booleanMaskAsync:()=>hk,broadcastArgs:()=>S1,broadcastTo:()=>Rs,broadcast_util:()=>bu,browser:()=>gd,buffer:()=>Ve,callbacks:()=>oG,cast:()=>ie,ceil:()=>zg,clipByValue:()=>cn,clone:()=>jr,complex:()=>ca,concat:()=>dt,concat1d:()=>Pg,concat2d:()=>Bg,concat3d:()=>Wg,concat4d:()=>Vg,constraints:()=>SI,conv1d:()=>kc,conv2d:()=>kn,conv2dTranspose:()=>Ic,conv3d:()=>Gg,conv3dTranspose:()=>Hg,copyRegisteredKernels:()=>gA,cos:()=>ad,cosh:()=>Sc,cosineWindow:()=>qc,cumprod:()=>gp,cumsum:()=>Nc,customGrad:()=>Jr,data:()=>iN,denseBincount:()=>$h,deprecationWarn:()=>a1,depthToSpace:()=>jg,depthwiseConv2d:()=>No,deregisterOp:()=>pG,device_util:()=>ed,diag:()=>T1,dilation2d:()=>qg,disableDeprecationWarnings:()=>jA,dispose:()=>Re,disposeVariables:()=>qA,div:()=>ye,divNoNan:()=>Kg,dot:()=>Xg,dropout:()=>Sy,einsum:()=>_s,elu:()=>xu,enableDebugMode:()=>HA,enableProdMode:()=>GA,enclosingPowerOfTwo:()=>Ny,engine:()=>fr,ensureShape:()=>C1,env:()=>H,equal:()=>Hn,erf:()=>Tc,euclideanNorm:()=>Yg,exp:()=>mn,expandDims:()=>Qt,expm1:()=>Qg,eye:()=>_c,fft:()=>md,fill:()=>Gn,findBackend:()=>QA,findBackendFactory:()=>eF,floor:()=>wu,floorDiv:()=>vc,forceHalfFloat:()=>$T,fused:()=>ol,gather:()=>ku,gatherND:()=>gk,gather_util:()=>Ly,getBackend:()=>s1,getGradient:()=>tf,getKernel:()=>pp,getKernelsForBackend:()=>_h,getThreadsCount:()=>mde,gpgpu_util:()=>oT,grad:()=>FD,grads:()=>RD,greater:()=>_n,greaterEqual:()=>ba,ifft:()=>il,imag:()=>sd,image:()=>nr,inTopKAsync:()=>yk,initializers:()=>NI,input:()=>GI,io:()=>pn,irfft:()=>Bc,isFinite:()=>ey,isInf:()=>ty,isNaN:()=>ny,keep:()=>Vt,kernel_impls:()=>ta,layers:()=>TI,leakyRelu:()=>id,less:()=>nl,lessEqual:()=>ls,linalg:()=>Cy,linspace:()=>R1,loadGraphModel:()=>gH,loadGraphModelSync:()=>yH,loadLayersModel:()=>nV,localResponseNormalization:()=>ry,log:()=>jn,log1p:()=>od,logSigmoid:()=>ay,logSoftmax:()=>Ec,logSumExp:()=>ld,logicalAnd:()=>br,logicalNot:()=>ud,logicalOr:()=>$c,logicalXor:()=>sy,losses:()=>Ek,lowerBound:()=>M1,matMul:()=>Be,math:()=>Bk,max:()=>ir,maxPool:()=>Zt,maxPool3d:()=>iy,maxPoolWithArgmax:()=>O1,maximum:()=>ea,mean:()=>St,memory:()=>Eh,meshgrid:()=>L1,metrics:()=>FS,min:()=>tl,minimum:()=>qa,mirrorPad:()=>oy,mod:()=>ly,model:()=>sV,models:()=>RS,moments:()=>pd,movingAverage:()=>ck,mul:()=>z,multiRNNCell:()=>z1,multinomial:()=>P1,neg:()=>bt,nextFrame:()=>zy,norm:()=>vu,notEqual:()=>Ks,oneHot:()=>rl,ones:()=>$n,onesLike:()=>qn,op:()=>L,outerProduct:()=>B1,pad:()=>Dr,pad1d:()=>W1,pad2d:()=>V1,pad3d:()=>U1,pad4d:()=>G1,pool:()=>uy,pow:()=>Zr,prelu:()=>hd,print:()=>Ig,prod:()=>py,profile:()=>KA,raggedGather:()=>H1,raggedRange:()=>j1,raggedTensorToTensor:()=>q1,rand:()=>K1,randomGamma:()=>Y1,randomNormal:()=>Fc,randomStandardNormal:()=>Q1,randomUniform:()=>us,randomUniformInt:()=>ek,range:()=>Xs,ready:()=>JA,real:()=>al,reciprocal:()=>fy,registerBackend:()=>xc,registerCallbackConstructor:()=>oV,registerGradient:()=>H0,registerKernel:()=>Jp,registerOp:()=>uG,regularizers:()=>DS,relu:()=>it,relu6:()=>Rc,removeBackend:()=>YA,reshape:()=>B,reverse:()=>ur,reverse1d:()=>tk,reverse2d:()=>nk,reverse3d:()=>rk,reverse4d:()=>ak,rfft:()=>fd,round:()=>Dc,rsqrt:()=>Mc,scalar:()=>Se,scatterND:()=>mk,scatter_util:()=>Uc,searchSorted:()=>Ac,selu:()=>Oc,separableConv2d:()=>Iu,sequential:()=>iV,serialization:()=>ne,setBackend:()=>ZA,setPlatform:()=>tF,setThreadsCount:()=>cde,setWasmPath:()=>dde,setWasmPaths:()=>hde,setWebGLContext:()=>A2,setdiff1dAsync:()=>sk,shared:()=>kx,sigmoid:()=>yr,sign:()=>gy,signal:()=>Ck,sin:()=>Lc,sinh:()=>zc,slice:()=>Ze,slice1d:()=>cd,slice2d:()=>Pc,slice3d:()=>Su,slice4d:()=>sl,slice_util:()=>Gt,softmax:()=>ps,softplus:()=>To,spaceToBatchND:()=>dd,sparse:()=>$k,sparseToDense:()=>fk,spectral:()=>_k,split:()=>An,sqrt:()=>nn,square:()=>pt,squaredDifference:()=>Wc,squeeze:()=>ds,stack:()=>Lt,step:()=>_o,stridedSlice:()=>yy,string:()=>Ak,sub:()=>fe,sum:()=>xe,sumOutType:()=>bc,tan:()=>by,tanh:()=>ja,tensor:()=>wn,tensor1d:()=>at,tensor2d:()=>qr,tensor3d:()=>Vc,tensor4d:()=>Ka,tensor5d:()=>ik,tensor6d:()=>ok,tensorScatterUpdate:()=>uk,tensor_util:()=>_r,test_util:()=>X1,tidy:()=>W,tile:()=>Un,time:()=>XA,topk:()=>vy,train:()=>Ss,transpose:()=>We,truncatedNormal:()=>Hc,unique:()=>wy,unregisterGradient:()=>fA,unregisterKernel:()=>mA,unsortedSegmentSum:()=>jc,unstack:()=>Et,upcastType:()=>or,upperBound:()=>pk,util:()=>w,valueAndGrad:()=>DD,valueAndGrads:()=>MD,variable:()=>ky,variableGrads:()=>D1,version:()=>wde,version_converter:()=>xH,version_core:()=>sz,version_cpu:()=>vj,version_layers:()=>ob,version_wasm:()=>fde,version_webgl:()=>uJ,webgl:()=>pJ,webgl_util:()=>$2,where:()=>tn,whereAsync:()=>Iy,zeros:()=>Nt,zerosLike:()=>Je});var x$=Object.create,pg=Object.defineProperty,v$=Object.getOwnPropertyDescriptor,w$=Object.getOwnPropertyNames,k$=Object.getPrototypeOf,I$=Object.prototype.hasOwnProperty,Pt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),De=(e,t)=>{for(var n in t)pg(e,n,{get:t[n],enumerable:!0})},S$=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of w$(t))!I$.call(e,a)&&a!==n&&pg(e,a,{get:()=>t[a],enumerable:!(r=v$(t,a))||r.enumerable});return e},ns=(e,t,n)=>(n=e!=null?x$(k$(e)):{},S$(t||!e||!e.__esModule?pg(n,"default",{value:e,enumerable:!0}):n,e)),N$=Pt((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(S,D,P){this.low=S|0,this.high=D|0,this.unsigned=!!P}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function a(S){return(S&&S.__isLong__)===!0}r.isLong=a;var s={},i={};function o(S,D){var P,U,G;return D?(S>>>=0,(G=0<=S&&S<256)&&(U=i[S],U)?U:(P=p(S,(S|0)<0?-1:0,!0),G&&(i[S]=P),P)):(S|=0,(G=-128<=S&&S<128)&&(U=s[S],U)?U:(P=p(S,S<0?-1:0,!1),G&&(s[S]=P),P))}r.fromInt=o;function l(S,D){if(isNaN(S))return D?v:x;if(D){if(S<0)return v;if(S>=g)return A}else{if(S<=-y)return R;if(S+1>=y)return E}return S<0?l(-S,D).neg():p(S%f|0,S/f|0,D)}r.fromNumber=l;function p(S,D,P){return new r(S,D,P)}r.fromBits=p;var u=Math.pow;function d(S,D,P){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return x;if(typeof D=="number"?(P=D,D=!1):D=!!D,P=P||10,P<2||36<P)throw RangeError("radix");var U;if((U=S.indexOf("-"))>0)throw Error("interior hyphen");if(U===0)return d(S.substring(1),D,P).neg();for(var G=l(u(P,8)),K=x,j=0;j<S.length;j+=8){var Z=Math.min(8,S.length-j),ee=parseInt(S.substring(j,j+Z),P);if(Z<8){var X=l(u(P,Z));K=K.mul(X).add(l(ee))}else K=K.mul(G),K=K.add(l(ee))}return K.unsigned=D,K}r.fromString=d;function h(S,D){return typeof S=="number"?l(S,D):typeof S=="string"?d(S,D):p(S.low,S.high,typeof D=="boolean"?D:S.unsigned)}r.fromValue=h;var c=65536,m=1<<24,f=c*c,g=f*f,y=g/2,b=o(m),x=o(0);r.ZERO=x;var v=o(0,!0);r.UZERO=v;var I=o(1);r.ONE=I;var N=o(1,!0);r.UONE=N;var C=o(-1);r.NEG_ONE=C;var E=p(-1,2147483647,!1);r.MAX_VALUE=E;var A=p(-1,-1,!0);r.MAX_UNSIGNED_VALUE=A;var R=p(0,-2147483648,!1);r.MIN_VALUE=R;var F=r.prototype;F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},F.toString=function(S){if(S=S||10,S<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(R)){var D=l(S),P=this.div(D),U=P.mul(D).sub(this);return P.toString(S)+U.toInt().toString(S)}else return"-"+this.neg().toString(S);for(var G=l(u(S,6),this.unsigned),K=this,j="";;){var Z=K.div(G),ee=K.sub(Z.mul(G)).toInt()>>>0,X=ee.toString(S);if(K=Z,K.isZero())return X+j;for(;X.length<6;)X="0"+X;j=""+X+j}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(R)?64:this.neg().getNumBitsAbs();for(var S=this.high!=0?this.high:this.low,D=31;D>0&&!(S&1<<D);D--);return this.high!=0?D+33:D+1},F.isZero=function(){return this.high===0&&this.low===0},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return(this.low&1)===1},F.isEven=function(){return(this.low&1)===0},F.equals=function(S){return a(S)||(S=h(S)),this.unsigned!==S.unsigned&&this.high>>>31===1&&S.high>>>31===1?!1:this.high===S.high&&this.low===S.low},F.eq=F.equals,F.notEquals=function(S){return!this.eq(S)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(S){return this.comp(S)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(S){return this.comp(S)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(S){return this.comp(S)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(S){return this.comp(S)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(S){if(a(S)||(S=h(S)),this.eq(S))return 0;var D=this.isNegative(),P=S.isNegative();return D&&!P?-1:!D&&P?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(R)?R:this.not().add(I)},F.neg=F.negate,F.add=function(S){a(S)||(S=h(S));var D=this.high>>>16,P=this.high&65535,U=this.low>>>16,G=this.low&65535,K=S.high>>>16,j=S.high&65535,Z=S.low>>>16,ee=S.low&65535,X=0,re=0,te=0,ae=0;return ae+=G+ee,te+=ae>>>16,ae&=65535,te+=U+Z,re+=te>>>16,te&=65535,re+=P+j,X+=re>>>16,re&=65535,X+=D+K,X&=65535,p(te<<16|ae,X<<16|re,this.unsigned)},F.subtract=function(S){return a(S)||(S=h(S)),this.add(S.neg())},F.sub=F.subtract,F.multiply=function(S){if(this.isZero())return x;if(a(S)||(S=h(S)),n){var D=n.mul(this.low,this.high,S.low,S.high);return p(D,n.get_high(),this.unsigned)}if(S.isZero())return x;if(this.eq(R))return S.isOdd()?R:x;if(S.eq(R))return this.isOdd()?R:x;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(b)&&S.lt(b))return l(this.toNumber()*S.toNumber(),this.unsigned);var P=this.high>>>16,U=this.high&65535,G=this.low>>>16,K=this.low&65535,j=S.high>>>16,Z=S.high&65535,ee=S.low>>>16,X=S.low&65535,re=0,te=0,ae=0,oe=0;return oe+=K*X,ae+=oe>>>16,oe&=65535,ae+=G*X,te+=ae>>>16,ae&=65535,ae+=K*ee,te+=ae>>>16,ae&=65535,te+=U*X,re+=te>>>16,te&=65535,te+=G*ee,re+=te>>>16,te&=65535,te+=K*Z,re+=te>>>16,te&=65535,re+=P*X+U*ee+G*Z+K*j,re&=65535,p(ae<<16|oe,re<<16|te,this.unsigned)},F.mul=F.multiply,F.divide=function(S){if(a(S)||(S=h(S)),S.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&S.low===-1&&S.high===-1)return this;var D=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,S.low,S.high);return p(D,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?v:x;var P,U,G;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return v;if(S.gt(this.shru(1)))return N;G=v}else{if(this.eq(R)){if(S.eq(I)||S.eq(C))return R;if(S.eq(R))return I;var K=this.shr(1);return P=K.div(S).shl(1),P.eq(x)?S.isNegative()?I:C:(U=this.sub(S.mul(P)),G=P.add(U.div(S)),G)}else if(S.eq(R))return this.unsigned?v:x;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();G=x}for(U=this;U.gte(S);){P=Math.max(1,Math.floor(U.toNumber()/S.toNumber()));for(var j=Math.ceil(Math.log(P)/Math.LN2),Z=j<=48?1:u(2,j-48),ee=l(P),X=ee.mul(S);X.isNegative()||X.gt(U);)P-=Z,ee=l(P,this.unsigned),X=ee.mul(S);ee.isZero()&&(ee=I),G=G.add(ee),U=U.sub(X)}return G},F.div=F.divide,F.modulo=function(S){if(a(S)||(S=h(S)),n){var D=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,S.low,S.high);return p(D,n.get_high(),this.unsigned)}return this.sub(this.div(S).mul(S))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return p(~this.low,~this.high,this.unsigned)},F.and=function(S){return a(S)||(S=h(S)),p(this.low&S.low,this.high&S.high,this.unsigned)},F.or=function(S){return a(S)||(S=h(S)),p(this.low|S.low,this.high|S.high,this.unsigned)},F.xor=function(S){return a(S)||(S=h(S)),p(this.low^S.low,this.high^S.high,this.unsigned)},F.shiftLeft=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?p(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):p(0,this.low<<S-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?p(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):p(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(S){if(a(S)&&(S=S.toInt()),S&=63,S===0)return this;var D=this.high;if(S<32){var P=this.low;return p(P>>>S|D<<32-S,D>>>S,this.unsigned)}else return S===32?p(D,0,this.unsigned):p(D>>>S-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?p(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:p(this.low,this.high,!0)},F.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var S=this.high,D=this.low;return[D&255,D>>>8&255,D>>>16&255,D>>>24,S&255,S>>>8&255,S>>>16&255,S>>>24]},F.toBytesBE=function(){var S=this.high,D=this.low;return[S>>>24,S>>>16&255,S>>>8&255,S&255,D>>>24,D>>>16&255,D>>>8&255,D&255]},r.fromBytes=function(S,D,P){return P?r.fromBytesLE(S,D):r.fromBytesBE(S,D)},r.fromBytesLE=function(S,D){return new r(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,D)},r.fromBytesBE=function(S,D){return new r(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],D)}}),T$=Pt(()=>{}),_$=Pt(()=>{}),C$=Pt((e,t)=>{(function(n,r,a){function s(p){var u=this,d=l();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(p),u.s0<0&&(u.s0+=1),u.s1-=d(p),u.s1<0&&(u.s1+=1),u.s2-=d(p),u.s2<0&&(u.s2+=1),d=null}function i(p,u){return u.c=p.c,u.s0=p.s0,u.s1=p.s1,u.s2=p.s2,u}function o(p,u){var d=new s(p),h=u&&u.state,c=d.next;return c.int32=function(){return d.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,h&&(typeof h=="object"&&i(h,d),c.state=function(){return i(d,{})}),c}function l(){var p=4022871197,u=function(d){d=String(d);for(var h=0;h<d.length;h++){p+=d.charCodeAt(h);var c=.02519603282416938*p;p=c>>>0,c-=p,c*=p,p=c>>>0,c-=p,p+=c*4294967296}return(p>>>0)*23283064365386963e-26};return u}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),E$=Pt((e,t)=>{(function(n,r,a){function s(l){var p=this,u="";p.x=0,p.y=0,p.z=0,p.w=0,p.next=function(){var h=p.x^p.x<<11;return p.x=p.y,p.y=p.z,p.z=p.w,p.w^=p.w>>>19^h^h>>>8},l===(l|0)?p.x=l:u+=l;for(var d=0;d<u.length+64;d++)p.x^=u.charCodeAt(d)|0,p.next()}function i(l,p){return p.x=l.x,p.y=l.y,p.z=l.z,p.w=l.w,p}function o(l,p){var u=new s(l),d=p&&p.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,d&&(typeof d=="object"&&i(d,u),h.state=function(){return i(u,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),$$=Pt((e,t)=>{(function(n,r,a){function s(l){var p=this,u="";p.next=function(){var h=p.x^p.x>>>2;return p.x=p.y,p.y=p.z,p.z=p.w,p.w=p.v,(p.d=p.d+362437|0)+(p.v=p.v^p.v<<4^(h^h<<1))|0},p.x=0,p.y=0,p.z=0,p.w=0,p.v=0,l===(l|0)?p.x=l:u+=l;for(var d=0;d<u.length+64;d++)p.x^=u.charCodeAt(d)|0,d==u.length&&(p.d=p.x<<10^p.x>>>4),p.next()}function i(l,p){return p.x=l.x,p.y=l.y,p.z=l.z,p.w=l.w,p.v=l.v,p.d=l.d,p}function o(l,p){var u=new s(l),d=p&&p.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,d&&(typeof d=="object"&&i(d,u),h.state=function(){return i(u,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),A$=Pt((e,t)=>{(function(n,r,a){function s(l){var p=this;p.next=function(){var d=p.x,h=p.i,c,m;return c=d[h],c^=c>>>7,m=c^c<<24,c=d[h+1&7],m^=c^c>>>10,c=d[h+3&7],m^=c^c>>>3,c=d[h+4&7],m^=c^c<<7,c=d[h+7&7],c=c^c<<13,m^=c^c<<9,d[h]=m,p.i=h+1&7,m};function u(d,h){var c,m=[];if(h===(h|0))m[0]=h;else for(h=""+h,c=0;c<h.length;++c)m[c&7]=m[c&7]<<15^h.charCodeAt(c)+m[c+1&7]<<13;for(;m.length<8;)m.push(0);for(c=0;c<8&&m[c]===0;++c);for(c==8?m[7]=-1:m[c],d.x=m,d.i=0,c=256;c>0;--c)d.next()}u(p,l)}function i(l,p){return p.x=l.x.slice(),p.i=l.i,p}function o(l,p){l==null&&(l=+new Date);var u=new s(l),d=p&&p.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,d&&(d.x&&i(d,u),h.state=function(){return i(u,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),F$=Pt((e,t)=>{(function(n,r,a){function s(l){var p=this;p.next=function(){var d=p.w,h=p.X,c=p.i,m,f;return p.w=d=d+1640531527|0,f=h[c+34&127],m=h[c=c+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=h[c]=f^m,p.i=c,f+(d^d>>>16)|0};function u(d,h){var c,m,f,g,y,b=[],x=128;for(h===(h|0)?(m=h,h=null):(h=h+"\0",m=0,x=Math.max(x,h.length)),f=0,g=-32;g<x;++g)h&&(m^=h.charCodeAt((g+32)%h.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,c=b[g&127]^=m+y,f=c==0?f+1:0);for(f>=128&&(b[(h&&h.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],c=b[f=f+1&127],m^=m<<13,c^=c<<17,m^=m>>>15,c^=c>>>12,b[f]=m^c;d.w=y,d.X=b,d.i=f}u(p,l)}function i(l,p){return p.i=l.i,p.w=l.w,p.X=l.X.slice(),p}function o(l,p){l==null&&(l=+new Date);var u=new s(l),d=p&&p.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,d&&(d.X&&i(d,u),h.state=function(){return i(u,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),R$=Pt((e,t)=>{(function(n,r,a){function s(l){var p=this,u="";p.next=function(){var h=p.b,c=p.c,m=p.d,f=p.a;return h=h<<25^h>>>7^c,c=c-m|0,m=m<<24^m>>>8^f,f=f-h|0,p.b=h=h<<20^h>>>12^c,p.c=c=c-m|0,p.d=m<<16^c>>>16^f,p.a=f-h|0},p.a=0,p.b=0,p.c=-1640531527,p.d=1367130551,l===Math.floor(l)?(p.a=l/4294967296|0,p.b=l|0):u+=l;for(var d=0;d<u.length+20;d++)p.b^=u.charCodeAt(d)|0,p.next()}function i(l,p){return p.a=l.a,p.b=l.b,p.c=l.c,p.d=l.d,p}function o(l,p){var u=new s(l),d=p&&p.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,d&&(typeof d=="object"&&i(d,u),h.state=function(){return i(u,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),D$=Pt(()=>{}),M$=Pt((e,t)=>{(function(n,r,a){var s=256,i=6,o=52,l="random",p=a.pow(s,i),u=a.pow(2,o),d=u*2,h=s-1,c;function m(I,N,C){var E=[];N=N==!0?{entropy:!0}:N||{};var A=b(y(N.entropy?[I,v(r)]:I??x(),3),E),R=new f(E),F=function(){for(var S=R.g(i),D=p,P=0;S<u;)S=(S+P)*s,D*=s,P=R.g(1);for(;S>=d;)S/=2,D/=2,P>>>=1;return(S+P)/D};return F.int32=function(){return R.g(4)|0},F.quick=function(){return R.g(4)/4294967296},F.double=F,b(v(R.S),r),(N.pass||C||function(S,D,P,U){return U&&(U.S&&g(U,R),S.state=function(){return g(R,{})}),P?(a[l]=S,D):S})(F,A,"global"in N?N.global:this==a,N.state)}function f(I){var N,C=I.length,E=this,A=0,R=E.i=E.j=0,F=E.S=[];for(C||(I=[C++]);A<s;)F[A]=A++;for(A=0;A<s;A++)F[A]=F[R=h&R+I[A%C]+(N=F[A])],F[R]=N;(E.g=function(S){for(var D,P=0,U=E.i,G=E.j,K=E.S;S--;)D=K[U=h&U+1],P=P*s+K[h&(K[U]=K[G=h&G+D])+(K[G]=D)];return E.i=U,E.j=G,P})(s)}function g(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function y(I,N){var C=[],E=typeof I,A;if(N&&E=="object")for(A in I)try{C.push(y(I[A],N-1))}catch{}return C.length?C:E=="string"?I:I+"\0"}function b(I,N){for(var C=I+"",E,A=0;A<C.length;)N[h&A]=h&(E^=N[h&A]*19)+C.charCodeAt(A++);return v(N)}function x(){try{var I;return c&&(I=c.randomBytes)?I=I(s):(I=new Uint8Array(s),(n.crypto||n.msCrypto).getRandomValues(I)),v(I)}catch{var N=n.navigator,C=N&&N.plugins;return[+new Date,n,C,n.screen,v(r)]}}function v(I){return String.fromCharCode.apply(0,I)}if(b(a.random(),r),typeof t=="object"&&t.exports){t.exports=m;try{c=D$()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):a["seed"+l]=m})(typeof self<"u"?self:e,[],Math)}),ec=Pt((e,t)=>{var n=C$(),r=E$(),a=$$(),s=A$(),i=F$(),o=R$(),l=M$();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),C0=Pt(()=>{}),dg=Pt(()=>{}),E0=Pt(()=>{}),O$=Pt(()=>{}),L$=Pt(()=>{}),z$=Pt(()=>{}),P$=Pt((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};function s(){return j.buffer!=ce&&Me(j.buffer),Te}function i(){return j.buffer!=ce&&Me(j.buffer),Ee}function o(){return j.buffer!=ce&&Me(j.buffer),se}function l(){return j.buffer!=ce&&Me(j.buffer),ue}function p(){return j.buffer!=ce&&Me(j.buffer),Le}var u=typeof a<"u"?a:{},d,h;u.ready=new Promise(function(M,q){d=M,h=q});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var m=Object.assign({},u),f=(M,q)=>{throw q},g=typeof window=="object",y=typeof importScripts=="function",b=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=u.ENVIRONMENT_IS_PTHREAD||!1,v="";function I(M){return u.locateFile?u.locateFile(M,v):v+M}var N,C,E;function A(M){M instanceof ra||U("exiting due to exception: "+M)}if(b){var R=dg(),F=E0();y?v=F.dirname(v)+"/":v=__dirname+"/",N=(q,pe)=>(q=hr(q)?new URL(q):F.normalize(q),R.readFileSync(q,pe?void 0:"utf8")),E=q=>{var pe=N(q,!0);return pe.buffer||(pe=new Uint8Array(pe)),pe},C=(q,pe,$e)=>{q=hr(q)?new URL(q):F.normalize(q),R.readFile(q,function(Oe,Pe){Oe?$e(Oe):pe(Pe.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(q){if(!(q instanceof ra))throw q}),process.on("unhandledRejection",function(q){throw q}),f=(q,pe)=>{if(Ne())throw process.exitCode=q,pe;A(pe),process.exit(q)},u.inspect=function(){return"[Emscripten Module object]"};let M;try{M=O$()}catch(q){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),q}global.Worker=M.Worker}else(g||y)&&(y?v=self.location.href:typeof document<"u"&&document.currentScript&&(v=document.currentScript.src),typeof r<"u"&&r&&(v=r),v.indexOf("blob:")!==0?v=v.substr(0,v.replace(/[?#].*/,"").lastIndexOf("/")+1):v="",b||(N=M=>{var q=new XMLHttpRequest;return q.open("GET",M,!1),q.send(null),q.responseText},y&&(E=M=>{var q=new XMLHttpRequest;return q.open("GET",M,!1),q.responseType="arraybuffer",q.send(null),new Uint8Array(q.response)}),C=(M,q,pe)=>{var $e=new XMLHttpRequest;$e.open("GET",M,!0),$e.responseType="arraybuffer",$e.onload=()=>{if($e.status==200||$e.status==0&&$e.response){q($e.response);return}pe()},$e.onerror=pe,$e.send(null)}));b&&typeof performance>"u"&&(global.performance=L$().performance);var S=console.log.bind(console),D=console.warn.bind(console);b&&(S=M=>R.writeSync(1,M+`
`),D=M=>R.writeSync(2,M+`
`));var P=u.print||S,U=u.printErr||D;Object.assign(u,m),m=null,u.arguments&&u.arguments,u.thisProgram&&u.thisProgram,u.quit&&(f=u.quit);var G;u.wasmBinary&&(G=u.wasmBinary);var K=u.noExitRuntime||!0;typeof WebAssembly!="object"&&dr("no native wasm support detected");var j,Z,ee=!1,X;function re(M,q){M||dr(q)}var te=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function ae(M,q,pe){q>>>=0;for(var $e=q+pe,Oe=q;M[Oe]&&!(Oe>=$e);)++Oe;if(Oe-q>16&&M.buffer&&te)return te.decode(M.buffer instanceof SharedArrayBuffer?M.slice(q,Oe):M.subarray(q,Oe));for(var Pe="";q<Oe;){var be=M[q++];if(!(be&128)){Pe+=String.fromCharCode(be);continue}var _e=M[q++]&63;if((be&224)==192){Pe+=String.fromCharCode((be&31)<<6|_e);continue}var It=M[q++]&63;if((be&240)==224?be=(be&15)<<12|_e<<6|It:be=(be&7)<<18|_e<<12|It<<6|M[q++]&63,be<65536)Pe+=String.fromCharCode(be);else{var Qn=be-65536;Pe+=String.fromCharCode(55296|Qn>>10,56320|Qn&1023)}}return Pe}function oe(M,q){return M>>>=0,M?ae(i(),M,q):""}function we(M,q,pe,$e){if(pe>>>=0,!($e>0))return 0;for(var Oe=pe,Pe=pe+$e-1,be=0;be<M.length;++be){var _e=M.charCodeAt(be);if(_e>=55296&&_e<=57343){var It=M.charCodeAt(++be);_e=65536+((_e&1023)<<10)|It&1023}if(_e<=127){if(pe>=Pe)break;q[pe++>>>0]=_e}else if(_e<=2047){if(pe+1>=Pe)break;q[pe++>>>0]=192|_e>>6,q[pe++>>>0]=128|_e&63}else if(_e<=65535){if(pe+2>=Pe)break;q[pe++>>>0]=224|_e>>12,q[pe++>>>0]=128|_e>>6&63,q[pe++>>>0]=128|_e&63}else{if(pe+3>=Pe)break;q[pe++>>>0]=240|_e>>18,q[pe++>>>0]=128|_e>>12&63,q[pe++>>>0]=128|_e>>6&63,q[pe++>>>0]=128|_e&63}}return q[pe>>>0]=0,pe-Oe}function ve(M,q,pe){return we(M,i(),q,pe)}var ce,Te,Ee,se,ue,Le;x&&(ce=u.buffer);function Me(M){ce=M,u.HEAP8=Te=new Int8Array(M),u.HEAP16=new Int16Array(M),u.HEAP32=se=new Int32Array(M),u.HEAPU8=Ee=new Uint8Array(M),u.HEAPU16=new Uint16Array(M),u.HEAPU32=ue=new Uint32Array(M),u.HEAPF32=new Float32Array(M),u.HEAPF64=Le=new Float64Array(M)}var qe=u.INITIAL_MEMORY||16777216;if(x)j=u.wasmMemory,ce=u.buffer;else if(u.wasmMemory)j=u.wasmMemory;else if(j=new WebAssembly.Memory({initial:qe/65536,maximum:65536,shared:!0}),!(j.buffer instanceof SharedArrayBuffer))throw U("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&U("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");j&&(ce=j.buffer),qe=ce.byteLength,Me(ce);var Fe,Ye=[],Xe=[],Kt=[];function Ne(){return K}function de(){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)Zn(u.preRun.shift());gt(Ye)}function Wt(){!x&&gt(Xe)}function hn(){if(!x){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)Ue(u.postRun.shift());gt(Kt)}}function Zn(M){Ye.unshift(M)}function rt(M){Xe.unshift(M)}function Ue(M){Kt.unshift(M)}var Ct=0,sn=null;function Jn(M){Ct++,u.monitorRunDependencies&&u.monitorRunDependencies(Ct)}function Or(M){if(Ct--,u.monitorRunDependencies&&u.monitorRunDependencies(Ct),Ct==0&&sn){var q=sn;sn=null,q()}}function dr(M){u.onAbort&&u.onAbort(M),M="Aborted("+M+")",U(M),ee=!0,X=1,M+=". Build with -sASSERTIONS for more info.";var q=new WebAssembly.RuntimeError(M);throw h(q),q}var Ia="data:application/octet-stream;base64,";function Ln(M){return M.startsWith(Ia)}function hr(M){return M.startsWith("file://")}var on;on="tfjs-backend-wasm-threaded-simd.wasm",Ln(on)||(on=I(on));function Rd(M){try{if(M==on&&G)return new Uint8Array(G);if(E)return E(M);throw"both async and sync fetching of the wasm failed"}catch(q){dr(q)}}function Dd(){if(!G&&(g||y)){if(typeof fetch=="function"&&!hr(on))return fetch(on,{credentials:"same-origin"}).then(function(M){if(!M.ok)throw"failed to load wasm binary file at '"+on+"'";return M.arrayBuffer()}).catch(function(){return Rd(on)});if(C)return new Promise(function(M,q){C(on,function(pe){M(new Uint8Array(pe))},q)})}return Promise.resolve().then(function(){return Rd(on)})}function Md(){var M={env:Cv,wasi_snapshot_preview1:Cv};function q(be,_e){var It=be.exports;if(u.asm=It,aa(u.asm._emscripten_tls_init),Fe=u.asm.__indirect_function_table,rt(u.asm.__wasm_call_ctors),Z=_e,!x){var Qn=ge.unusedWorkers.length;ge.unusedWorkers.forEach(function(sa){ge.loadWasmModuleToWorker(sa,function(){--Qn||Or()})})}}x||Jn();function pe(be){q(be.instance,be.module)}function $e(be){return Dd().then(function(_e){return WebAssembly.instantiate(_e,M)}).then(function(_e){return _e}).then(be,function(_e){U("failed to asynchronously prepare wasm: "+_e),dr(_e)})}function Oe(){return!G&&typeof WebAssembly.instantiateStreaming=="function"&&!Ln(on)&&!hr(on)&&!b&&typeof fetch=="function"?fetch(on,{credentials:"same-origin"}).then(function(be){var _e=WebAssembly.instantiateStreaming(be,M);return _e.then(pe,function(It){return U("wasm streaming compile failed: "+It),U("falling back to ArrayBuffer instantiation"),$e(pe)})}):$e(pe)}if(u.instantiateWasm)try{var Pe=u.instantiateWasm(M,q);return Pe}catch(be){U("Module.instantiateWasm callback failed with error: "+be),h(be)}return Oe().catch(h),{}}var Od={};function ra(M){this.name="ExitStatus",this.message="Program terminated with exit("+M+")",this.status=M}function Oo(M){var q=ge.pthreads[M];delete ge.pthreads[M],q.terminate(),Fm(M),ge.runningWorkers.splice(ge.runningWorkers.indexOf(q),1),q.pthread_ptr=0}function Ld(M){var q=ge.pthreads[M];q.postMessage({cmd:"cancel"})}function xs(M){var q=ge.pthreads[M];re(q),ge.returnWorkerToPool(q)}function vs(M){var q=ge.getNewWorker();if(!q)return 6;ge.runningWorkers.push(q),ge.pthreads[M.pthread_ptr]=q,q.pthread_ptr=M.pthread_ptr;var pe={cmd:"run",start_routine:M.startRoutine,arg:M.arg,pthread_ptr:M.pthread_ptr};return q.runPthread=()=>{b&&q.ref(),q.postMessage(pe,M.transferList),delete q.runPthread},q.loaded&&q.runPthread(),0}function zd(M){if(x)return Lo(1,1,M);X=M,Ne()||(ge.terminateAllThreads(),u.onExit&&u.onExit(M),ee=!0),f(M,new ra(M))}function Q(M,q){if(X=M,!q&&x)throw Ke(M),"unwind";zd(M)}var le=Q;function Ce(M){if(M instanceof ra||M=="unwind")return X;f(1,M)}var ge={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){x?ge.initWorker():ge.initMainThread()},initMainThread:function(){for(var M=8;M--;)ge.allocateUnusedWorker()},initWorker:function(){K=!1},setExitStatus:function(M){X=M},terminateAllThreads:function(){for(var M of Object.values(ge.pthreads))ge.returnWorkerToPool(M);for(var M of ge.unusedWorkers)M.terminate();ge.unusedWorkers=[]},returnWorkerToPool:function(M){var q=M.pthread_ptr;delete ge.pthreads[q],ge.unusedWorkers.push(M),ge.runningWorkers.splice(ge.runningWorkers.indexOf(M),1),M.pthread_ptr=0,b&&M.unref(),Fm(q)},receiveObjectTransfer:function(M){},threadInitTLS:function(){ge.tlsInitFunctions.forEach(M=>M())},loadWasmModuleToWorker:function(M,q){M.onmessage=Pe=>{var be=Pe.data,_e=be.cmd;if(M.pthread_ptr&&(ge.currentProxiedOperationCallerThread=M.pthread_ptr),be.targetThread&&be.targetThread!=Vd()){var It=ge.pthreads[be.targetThread];It?It.postMessage(be,be.transferList):U('Internal error! Worker sent a message "'+_e+'" to target pthread '+be.targetThread+", but that thread no longer exists!"),ge.currentProxiedOperationCallerThread=void 0;return}_e==="processProxyingQueue"?Em(be.queue):_e==="spawnThread"?vs(be):_e==="cleanupThread"?xs(be.thread):_e==="killThread"?Oo(be.thread):_e==="cancelThread"?Ld(be.thread):_e==="loaded"?(M.loaded=!0,b&&M.unref(),q&&q(M),M.runPthread&&M.runPthread()):_e==="print"?P("Thread "+be.threadId+": "+be.text):_e==="printErr"?U("Thread "+be.threadId+": "+be.text):_e==="alert"?alert("Thread "+be.threadId+": "+be.text):be.target==="setimmediate"?M.postMessage(be):_e==="callHandler"?u[be.handler](...be.args):_e&&U("worker sent an unknown command "+_e),ge.currentProxiedOperationCallerThread=void 0},M.onerror=Pe=>{var be="worker sent an error!";throw U(be+" "+Pe.filename+":"+Pe.lineno+": "+Pe.message),Pe},b&&(M.on("message",function(Pe){M.onmessage({data:Pe})}),M.on("error",function(Pe){M.onerror(Pe)}),M.on("detachedExit",function(){}));var pe=[],$e=["onExit","onAbort","print","printErr"];for(var Oe of $e)u.hasOwnProperty(Oe)&&pe.push(Oe);M.postMessage({cmd:"load",handlers:pe,urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:j,wasmModule:Z})},allocateUnusedWorker:function(){var M,q=I("tfjs-backend-wasm-threaded-simd.worker.js");M=new Worker(q),ge.unusedWorkers.push(M)},getNewWorker:function(){return ge.unusedWorkers.length==0&&(ge.allocateUnusedWorker(),ge.loadWasmModuleToWorker(ge.unusedWorkers[0])),ge.unusedWorkers.pop()}};u.PThread=ge;function gt(M){for(;M.length>0;)M.shift()(u)}function vt(){var M=Vd(),q=o()[M+52>>>2],pe=o()[M+56>>>2],$e=q-pe;Rv(q,$e),Ud(q)}u.establishStackSpace=vt;function Ke(M){if(x)return Lo(2,0,M);try{le(M)}catch(q){Ce(q)}}var ze=[];function Ft(M){var q=ze[M];return q||(M>=ze.length&&(ze.length=M+1),ze[M]=q=Fe.get(M)),q}function Yn(M,q){var pe=Ft(M)(q);Ne()?ge.setExitStatus(pe):Fv(pe)}u.invokeEntryPoint=Yn;function aa(M){ge.tlsInitFunctions.push(M)}function Pd(M){Ev(M,!y,1,!g),ge.threadInitTLS()}function Pu(M){x?postMessage({cmd:"cleanupThread",thread:M}):xs(M)}function Bd(M,q,pe,$e){return x?Lo(3,1,M,q,pe,$e):yn(M,q,pe,$e)}function yn(M,q,pe,$e){if(typeof SharedArrayBuffer>"u")return U("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Oe=[],Pe=0;if(x&&(Oe.length===0||Pe))return Bd(M,q,pe,$e);var be={startRoutine:pe,pthread_ptr:M,arg:$e,transferList:Oe};return x?(be.cmd="spawnThread",postMessage(be,Oe),0):vs(be)}function Sa(){return 65536}var Wd=!0;function EE(){return Wd}function Em(M){Atomics.store(o(),M>>2,1),Vd()&&Av(M),Atomics.compareExchange(o(),M>>2,1,0)}u.executeNotifiedProxyingQueue=Em;function $E(M,q,pe,$e){if(M==q)setTimeout(()=>Em($e));else if(x)postMessage({targetThread:M,cmd:"processProxyingQueue",queue:$e});else{var Oe=ge.pthreads[M];if(!Oe)return;Oe.postMessage({cmd:"processProxyingQueue",queue:$e})}return 1}function AE(M,q,pe){return-1}function FE(){dr("")}function Bu(M){Bu.shown||(Bu.shown={}),Bu.shown[M]||(Bu.shown[M]=1,b&&(M="warning: "+M),U(M))}function RE(){b||y||Bu("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function DE(){return Date.now()}function Iv(){return 4294901760}function ME(){return Iv()}var $m;b?$m=()=>{var M=process.hrtime();return M[0]*1e3+M[1]/1e6}:$m=()=>performance.timeOrigin+performance.now();function OE(M,q,pe){i().copyWithin(M>>>0,q>>>0,q+pe>>>0)}function LE(){return b?z$().cpus().length:navigator.hardwareConcurrency}function zE(M){var q=Rm(),pe=M();return Ud(q),pe}function Lo(M,q){var pe=arguments.length-2,$e=arguments;return zE(()=>{for(var Oe=pe,Pe=Gd(Oe*8),be=Pe>>3,_e=0;_e<pe;_e++){var It=$e[2+_e];p()[be+_e>>>0]=It}return $v(M,Oe,Pe,q)})}var Am=[];function PE(M,q,pe){Am.length=q;for(var $e=pe>>3,Oe=0;Oe<q;Oe++)Am[Oe]=p()[$e+Oe>>>0];var Pe=M<0,be=Pe?Od[-M-1]:KE[M];return be.apply(null,Am)}function BE(M){try{return j.grow(M-ce.byteLength+65535>>>16),Me(j.buffer),1}catch{}}function WE(M){var q=i().length;if(M=M>>>0,M<=q)return!1;var pe=Iv();if(M>pe)return!1;let $e=(It,Qn)=>It+(Qn-It%Qn)%Qn;for(var Oe=1;Oe<=4;Oe*=2){var Pe=q*(1+.2/Oe);Pe=Math.min(Pe,M+100663296);var be=Math.min(pe,$e(Math.max(M,Pe),65536)),_e=BE(be);if(_e)return!0}return!1}function VE(){throw"unwind"}function Sv(M){return x?Lo(4,1,M):52}function Nv(M,q,pe,$e,Oe){return x?Lo(5,1,M,q,pe,$e,Oe):70}var UE=[null,[],[]];function GE(M,q){var pe=UE[M];q===0||q===10?((M===1?P:U)(ae(pe,0)),pe.length=0):pe.push(q)}function Tv(M,q,pe,$e){if(x)return Lo(6,1,M,q,pe,$e);for(var Oe=0,Pe=0;Pe<pe;Pe++){var be=l()[q>>>2],_e=l()[q+4>>>2];q+=8;for(var It=0;It<_e;It++)GE(M,i()[be+It>>>0]);Oe+=_e}return l()[$e>>>2]=Oe,0}function _v(M){var q=u["_"+M];return q}function HE(M,q){s().set(M,q>>>0)}function jE(M,q,pe,$e,Oe){var Pe={string:er=>{var zo=0;if(er!=null&&er!==0){var Ov=(er.length<<2)+1;zo=Gd(Ov),ve(er,zo,Ov)}return zo},array:er=>{var zo=Gd(er.length);return HE(er,zo),zo}};function be(er){return q==="string"?oe(er):q==="boolean"?!!er:er}var _e=_v(M),It=[],Qn=0;if($e)for(var sa=0;sa<$e.length;sa++){var Mv=Pe[pe[sa]];Mv?(Qn===0&&(Qn=Rm()),It[sa]=Mv($e[sa])):It[sa]=$e[sa]}var Dm=_e.apply(null,It);function ZE(er){return Qn!==0&&Ud(Qn),be(er)}return Dm=ZE(Dm),Dm}function qE(M,q,pe,$e){pe=pe||[];var Oe=pe.every(be=>be==="number"||be==="boolean"),Pe=q!=="string";return Pe&&Oe&&!$e?_v(M):function(){return jE(M,q,pe,arguments)}}ge.init();var KE=[null,zd,Ke,Bd,Sv,Nv,Tv],Cv={__emscripten_init_main_thread_js:Pd,__emscripten_thread_cleanup:Pu,__pthread_create_js:yn,_emscripten_default_pthread_stack_size:Sa,_emscripten_get_now_is_monotonic:EE,_emscripten_notify_task_queue:$E,_emscripten_set_offscreencanvas_size:AE,abort:FE,emscripten_check_blocking_allowed:RE,emscripten_date_now:DE,emscripten_get_heap_max:ME,emscripten_get_now:$m,emscripten_memcpy_big:OE,emscripten_num_logical_cores:LE,emscripten_receive_on_main_thread_js:PE,emscripten_resize_heap:WE,emscripten_unwind_to_js_event_loop:VE,exit:le,fd_close:Sv,fd_seek:Nv,fd_write:Tv,memory:j||u.wasmMemory};Md(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Acos=function(){return(u._Acos=u.asm.Acos).apply(null,arguments)},u._Acosh=function(){return(u._Acosh=u.asm.Acosh).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._ArgMin=function(){return(u._ArgMin=u.asm.ArgMin).apply(null,arguments)},u._Asin=function(){return(u._Asin=u.asm.Asin).apply(null,arguments)},u._Asinh=function(){return(u._Asinh=u.asm.Asinh).apply(null,arguments)},u._Atan=function(){return(u._Atan=u.asm.Atan).apply(null,arguments)},u._Atan2=function(){return(u._Atan2=u.asm.Atan2).apply(null,arguments)},u._Atanh=function(){return(u._Atanh=u.asm.Atanh).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._AvgPool3D=function(){return(u._AvgPool3D=u.asm.AvgPool3D).apply(null,arguments)},u._AvgPool3DGrad=function(){return(u._AvgPool3DGrad=u.asm.AvgPool3DGrad).apply(null,arguments)},u._AvgPoolGrad=function(){return(u._AvgPoolGrad=u.asm.AvgPoolGrad).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Bincount=function(){return(u._Bincount=u.asm.Bincount).apply(null,arguments)},u._BitwiseAnd=function(){return(u._BitwiseAnd=u.asm.BitwiseAnd).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Conv3D=function(){return(u._Conv3D=u.asm.Conv3D).apply(null,arguments)},u._Conv3DBackpropFilterV2=function(){return(u._Conv3DBackpropFilterV2=u.asm.Conv3DBackpropFilterV2).apply(null,arguments)},u._Conv3DBackpropInputV2=function(){return(u._Conv3DBackpropInputV2=u.asm.Conv3DBackpropInputV2).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DenseBincount=function(){return(u._DenseBincount=u.asm.DenseBincount).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Diag=function(){return(u._Diag=u.asm.Diag).apply(null,arguments)},u._Dilation2D=function(){return(u._Dilation2D=u.asm.Dilation2D).apply(null,arguments)},u._Dilation2DBackpropFilter=function(){return(u._Dilation2DBackpropFilter=u.asm.Dilation2DBackpropFilter).apply(null,arguments)},u._Dilation2DBackpropInput=function(){return(u._Dilation2DBackpropInput=u.asm.Dilation2DBackpropInput).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._EluGrad=function(){return(u._EluGrad=u.asm.EluGrad).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Erf=function(){return(u._Erf=u.asm.Erf).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._Expm1=function(){return(u._Expm1=u.asm.Expm1).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._IsFinite=function(){return(u._IsFinite=u.asm.IsFinite).apply(null,arguments)},u._IsInf=function(){return(u._IsInf=u.asm.IsInf).apply(null,arguments)},u._IsNan=function(){return(u._IsNan=u.asm.IsNan).apply(null,arguments)},u._LRN=function(){return(u._LRN=u.asm.LRN).apply(null,arguments)},u._LRNGrad=function(){return(u._LRNGrad=u.asm.LRNGrad).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._LinSpace=function(){return(u._LinSpace=u.asm.LinSpace).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._Log1p=function(){return(u._Log1p=u.asm.Log1p).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._LogicalNot=function(){return(u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},u._LogicalOr=function(){return(u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},u._LogicalXor=function(){return(u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._MaxPool3D=function(){return(u._MaxPool3D=u.asm.MaxPool3D).apply(null,arguments)},u._MaxPool3DGrad=function(){return(u._MaxPool3DGrad=u.asm.MaxPool3DGrad).apply(null,arguments)},u._MaxPoolGrad=function(){return(u._MaxPoolGrad=u.asm.MaxPoolGrad).apply(null,arguments)},u._MaxPoolWithArgmax=function(){return(u._MaxPoolWithArgmax=u.asm.MaxPoolWithArgmax).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Mod=function(){return(u._Mod=u.asm.Mod).apply(null,arguments)},u._Multinomial=function(){return(u._Multinomial=u.asm.Multinomial).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Reciprocal=function(){return(u._Reciprocal=u.asm.Reciprocal).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._ResizeBilinearGrad=function(){return(u._ResizeBilinearGrad=u.asm.ResizeBilinearGrad).apply(null,arguments)},u._ResizeNearestNeighbor=function(){return(u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},u._ResizeNearestNeighborGrad=function(){return(u._ResizeNearestNeighborGrad=u.asm.ResizeNearestNeighborGrad).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SearchSorted=function(){return(u._SearchSorted=u.asm.SearchSorted).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Selu=function(){return(u._Selu=u.asm.Selu).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sign=function(){return(u._Sign=u.asm.Sign).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Sinh=function(){return(u._Sinh=u.asm.Sinh).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._Softplus=function(){return(u._Softplus=u.asm.Softplus).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._SparseToDense=function(){return(u._SparseToDense=u.asm.SparseToDense).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._TensorScatterUpdate=function(){return(u._TensorScatterUpdate=u.asm.TensorScatterUpdate).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(u._malloc=u.asm.malloc).apply(null,arguments)},u._free=function(){return(u._free=u.asm.free).apply(null,arguments)},u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm._emscripten_tls_init).apply(null,arguments)};var Vd=u._pthread_self=function(){return(Vd=u._pthread_self=u.asm.pthread_self).apply(null,arguments)};u.___errno_location=function(){return(u.___errno_location=u.asm.__errno_location).apply(null,arguments)};var Ev=u.__emscripten_thread_init=function(){return(Ev=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u._emscripten_main_thread_process_queued_calls=function(){return(u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var $v=u._emscripten_run_in_main_runtime_thread_js=function(){return($v=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};u._emscripten_dispatch_to_thread_=function(){return(u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var Av=u.__emscripten_proxy_execute_task_queue=function(){return(Av=u.__emscripten_proxy_execute_task_queue=u.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Fm=u.__emscripten_thread_free_data=function(){return(Fm=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},Fv=u.__emscripten_thread_exit=function(){return(Fv=u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},Rv=u._emscripten_stack_set_limits=function(){return(Rv=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)},Rm=u.stackSave=function(){return(Rm=u.stackSave=u.asm.stackSave).apply(null,arguments)},Ud=u.stackRestore=function(){return(Ud=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},Gd=u.stackAlloc=function(){return(Gd=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)};u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.keepRuntimeAlive=Ne,u.wasmMemory=j,u.cwrap=qE,u.ExitStatus=ra,u.PThread=ge;var Hd;sn=function M(){Hd||Dv(),Hd||(sn=M)};function Dv(M){if(Ct>0)return;if(x){d(u),Wt(),startWorker(u);return}if(de(),Ct>0)return;function q(){Hd||(Hd=!0,u.calledRun=!0,!ee&&(Wt(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),hn()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),q()},1)):q()}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();Dv();var jd;c&&(jd={uncaughtException:process.listeners("uncaughtException").filter(function(M){return!c.uncaughtException.indexOf(M)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(M){return!c.unhandledRejection.indexOf(M)>-1})});var qd;if(typeof WasmBackendModule<"u")qd=WasmBackendModule;else if(typeof a<"u")qd=a;else throw new Error("Could not find wasm module in post.js");if(jd){var XE=qd._dispose;qd._dispose=function(){XE(),jd.uncaughtException.forEach(function(M){process.removeListener("uncaughtException",M)}),jd.unhandledRejection.forEach(function(M){process.removeListener("unhandledRejection",M)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}),B$=Pt((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),W$=Pt((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};var s=typeof a<"u"?a:{},i,o;s.ready=new Promise(function(Q,le){i=Q,o=le});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p=Object.assign({},s),u=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",c="";function m(Q){return s.locateFile?s.locateFile(Q,c):c+Q}var f,g,y;if(h){var b=dg(),x=E0();d?c=x.dirname(c)+"/":c=__dirname+"/",f=(Q,le)=>(Q=qe(Q)?new URL(Q):x.normalize(Q),b.readFileSync(Q,le?void 0:"utf8")),y=Q=>{var le=f(Q,!0);return le.buffer||(le=new Uint8Array(le)),le},g=(Q,le,Ce)=>{Q=qe(Q)?new URL(Q):x.normalize(Q),b.readFile(Q,function(ge,gt){ge?Ce(ge):le(gt.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(Q){if(!(Q instanceof Ne))throw Q}),process.on("unhandledRejection",function(Q){throw Q}),s.inspect=function(){return"[Emscripten Module object]"}}else(u||d)&&(d?c=self.location.href:typeof document<"u"&&document.currentScript&&(c=document.currentScript.src),r&&(c=r),c.indexOf("blob:")!==0?c=c.substr(0,c.replace(/[?#].*/,"").lastIndexOf("/")+1):c="",f=Q=>{var le=new XMLHttpRequest;return le.open("GET",Q,!1),le.send(null),le.responseText},d&&(y=Q=>{var le=new XMLHttpRequest;return le.open("GET",Q,!1),le.responseType="arraybuffer",le.send(null),new Uint8Array(le.response)}),g=(Q,le,Ce)=>{var ge=new XMLHttpRequest;ge.open("GET",Q,!0),ge.responseType="arraybuffer",ge.onload=()=>{if(ge.status==200||ge.status==0&&ge.response){le(ge.response);return}Ce()},ge.onerror=Ce,ge.send(null)});var v=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);Object.assign(s,p),p=null,s.arguments&&s.arguments,s.thisProgram&&s.thisProgram,s.quit&&s.quit;var N;s.wasmBinary&&(N=s.wasmBinary),s.noExitRuntime,typeof WebAssembly!="object"&&ue("no native wasm support detected");var C,E=!1,A=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function R(Q,le,Ce){le>>>=0;for(var ge=le+Ce,gt=le;Q[gt]&&!(gt>=ge);)++gt;if(gt-le>16&&Q.buffer&&A)return A.decode(Q.subarray(le,gt));for(var vt="";le<gt;){var Ke=Q[le++];if(!(Ke&128)){vt+=String.fromCharCode(Ke);continue}var ze=Q[le++]&63;if((Ke&224)==192){vt+=String.fromCharCode((Ke&31)<<6|ze);continue}var Ft=Q[le++]&63;if((Ke&240)==224?Ke=(Ke&15)<<12|ze<<6|Ft:Ke=(Ke&7)<<18|ze<<12|Ft<<6|Q[le++]&63,Ke<65536)vt+=String.fromCharCode(Ke);else{var Yn=Ke-65536;vt+=String.fromCharCode(55296|Yn>>10,56320|Yn&1023)}}return vt}function F(Q,le){return Q>>>=0,Q?R(G,Q,le):""}function S(Q,le,Ce,ge){if(Ce>>>=0,!(ge>0))return 0;for(var gt=Ce,vt=Ce+ge-1,Ke=0;Ke<Q.length;++Ke){var ze=Q.charCodeAt(Ke);if(ze>=55296&&ze<=57343){var Ft=Q.charCodeAt(++Ke);ze=65536+((ze&1023)<<10)|Ft&1023}if(ze<=127){if(Ce>=vt)break;le[Ce++>>>0]=ze}else if(ze<=2047){if(Ce+1>=vt)break;le[Ce++>>>0]=192|ze>>6,le[Ce++>>>0]=128|ze&63}else if(ze<=65535){if(Ce+2>=vt)break;le[Ce++>>>0]=224|ze>>12,le[Ce++>>>0]=128|ze>>6&63,le[Ce++>>>0]=128|ze&63}else{if(Ce+3>=vt)break;le[Ce++>>>0]=240|ze>>18,le[Ce++>>>0]=128|ze>>12&63,le[Ce++>>>0]=128|ze>>6&63,le[Ce++>>>0]=128|ze&63}}return le[Ce>>>0]=0,Ce-gt}function D(Q,le,Ce){return S(Q,G,le,Ce)}var P,U,G,K;function j(Q){P=Q,s.HEAP8=U=new Int8Array(Q),s.HEAP16=new Int16Array(Q),s.HEAP32=new Int32Array(Q),s.HEAPU8=G=new Uint8Array(Q),s.HEAPU16=new Uint16Array(Q),s.HEAPU32=K=new Uint32Array(Q),s.HEAPF32=new Float32Array(Q),s.HEAPF64=new Float64Array(Q)}s.INITIAL_MEMORY;var Z=[],ee=[],X=[];function re(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)oe(s.preRun.shift());de(Z)}function te(){de(ee)}function ae(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)ve(s.postRun.shift());de(X)}function oe(Q){Z.unshift(Q)}function we(Q){ee.unshift(Q)}function ve(Q){X.unshift(Q)}var ce=0,Te=null;function Ee(Q){ce++,s.monitorRunDependencies&&s.monitorRunDependencies(ce)}function se(Q){if(ce--,s.monitorRunDependencies&&s.monitorRunDependencies(ce),ce==0&&Te){var le=Te;Te=null,le()}}function ue(Q){s.onAbort&&s.onAbort(Q),Q="Aborted("+Q+")",I(Q),E=!0,Q+=". Build with -sASSERTIONS for more info.";var le=new WebAssembly.RuntimeError(Q);throw o(le),le}var Le="data:application/octet-stream;base64,";function Me(Q){return Q.startsWith(Le)}function qe(Q){return Q.startsWith("file://")}var Fe;Fe="tfjs-backend-wasm.wasm",Me(Fe)||(Fe=m(Fe));function Ye(Q){try{if(Q==Fe&&N)return new Uint8Array(N);if(y)return y(Q);throw"both async and sync fetching of the wasm failed"}catch(le){ue(le)}}function Xe(){if(!N&&(u||d)){if(typeof fetch=="function"&&!qe(Fe))return fetch(Fe,{credentials:"same-origin"}).then(function(Q){if(!Q.ok)throw"failed to load wasm binary file at '"+Fe+"'";return Q.arrayBuffer()}).catch(function(){return Ye(Fe)});if(g)return new Promise(function(Q,le){g(Fe,function(Ce){Q(new Uint8Array(Ce))},le)})}return Promise.resolve().then(function(){return Ye(Fe)})}function Kt(){var Q={env:Dd,wasi_snapshot_preview1:Dd};function le(Ke,ze){var Ft=Ke.exports;s.asm=Ft,C=s.asm.memory,j(C.buffer),s.asm.__indirect_function_table,we(s.asm.__wasm_call_ctors),se()}Ee();function Ce(Ke){le(Ke.instance)}function ge(Ke){return Xe().then(function(ze){return WebAssembly.instantiate(ze,Q)}).then(function(ze){return ze}).then(Ke,function(ze){I("failed to asynchronously prepare wasm: "+ze),ue(ze)})}function gt(){return!N&&typeof WebAssembly.instantiateStreaming=="function"&&!Me(Fe)&&!qe(Fe)&&!h&&typeof fetch=="function"?fetch(Fe,{credentials:"same-origin"}).then(function(Ke){var ze=WebAssembly.instantiateStreaming(Ke,Q);return ze.then(Ce,function(Ft){return I("wasm streaming compile failed: "+Ft),I("falling back to ArrayBuffer instantiation"),ge(Ce)})}):ge(Ce)}if(s.instantiateWasm)try{var vt=s.instantiateWasm(Q,le);return vt}catch(Ke){I("Module.instantiateWasm callback failed with error: "+Ke),o(Ke)}return gt().catch(o),{}}function Ne(Q){this.name="ExitStatus",this.message="Program terminated with exit("+Q+")",this.status=Q}function de(Q){for(;Q.length>0;)Q.shift()(s)}function Wt(){ue("")}function hn(){return 4294901760}function Zn(){return hn()}function rt(Q,le,Ce){G.copyWithin(Q>>>0,le>>>0,le+Ce>>>0)}function Ue(Q){try{return C.grow(Q-P.byteLength+65535>>>16),j(C.buffer),1}catch{}}function Ct(Q){var le=G.length;Q=Q>>>0;var Ce=hn();if(Q>Ce)return!1;let ge=(Ft,Yn)=>Ft+(Yn-Ft%Yn)%Yn;for(var gt=1;gt<=4;gt*=2){var vt=le*(1+.2/gt);vt=Math.min(vt,Q+100663296);var Ke=Math.min(Ce,ge(Math.max(Q,vt),65536)),ze=Ue(Ke);if(ze)return!0}return!1}function sn(Q){return 52}function Jn(Q,le,Ce,ge,gt){return 70}var Or=[null,[],[]];function dr(Q,le){var Ce=Or[Q];le===0||le===10?((Q===1?v:I)(R(Ce,0)),Ce.length=0):Ce.push(le)}function Ia(Q,le,Ce,ge){for(var gt=0,vt=0;vt<Ce;vt++){var Ke=K[le>>>2],ze=K[le+4>>>2];le+=8;for(var Ft=0;Ft<ze;Ft++)dr(Q,G[Ke+Ft>>>0]);gt+=ze}return K[ge>>>2]=gt,0}function Ln(Q){var le=s["_"+Q];return le}function hr(Q,le){U.set(Q,le>>>0)}function on(Q,le,Ce,ge,gt){var vt={string:yn=>{var Sa=0;if(yn!=null&&yn!==0){var Wd=(yn.length<<2)+1;Sa=ra(Wd),D(yn,Sa,Wd)}return Sa},array:yn=>{var Sa=ra(yn.length);return hr(yn,Sa),Sa}};function Ke(yn){return le==="string"?F(yn):le==="boolean"?!!yn:yn}var ze=Ln(Q),Ft=[],Yn=0;if(ge)for(var aa=0;aa<ge.length;aa++){var Pd=vt[Ce[aa]];Pd?(Yn===0&&(Yn=Md()),Ft[aa]=Pd(ge[aa])):Ft[aa]=ge[aa]}var Pu=ze.apply(null,Ft);function Bd(yn){return Yn!==0&&Od(Yn),Ke(yn)}return Pu=Bd(Pu),Pu}function Rd(Q,le,Ce,ge){Ce=Ce||[];var gt=Ce.every(Ke=>Ke==="number"||Ke==="boolean"),vt=le!=="string";return vt&&gt&&!ge?Ln(Q):function(){return on(Q,le,Ce,arguments)}}var Dd={abort:Wt,emscripten_get_heap_max:Zn,emscripten_memcpy_big:rt,emscripten_resize_heap:Ct,fd_close:sn,fd_seek:Jn,fd_write:Ia};Kt(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Acos=function(){return(s._Acos=s.asm.Acos).apply(null,arguments)},s._Acosh=function(){return(s._Acosh=s.asm.Acosh).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._ArgMin=function(){return(s._ArgMin=s.asm.ArgMin).apply(null,arguments)},s._Asin=function(){return(s._Asin=s.asm.Asin).apply(null,arguments)},s._Asinh=function(){return(s._Asinh=s.asm.Asinh).apply(null,arguments)},s._Atan=function(){return(s._Atan=s.asm.Atan).apply(null,arguments)},s._Atan2=function(){return(s._Atan2=s.asm.Atan2).apply(null,arguments)},s._Atanh=function(){return(s._Atanh=s.asm.Atanh).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._AvgPool3D=function(){return(s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},s._AvgPool3DGrad=function(){return(s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},s._AvgPoolGrad=function(){return(s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Bincount=function(){return(s._Bincount=s.asm.Bincount).apply(null,arguments)},s._BitwiseAnd=function(){return(s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Conv3D=function(){return(s._Conv3D=s.asm.Conv3D).apply(null,arguments)},s._Conv3DBackpropFilterV2=function(){return(s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},s._Conv3DBackpropInputV2=function(){return(s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DenseBincount=function(){return(s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Diag=function(){return(s._Diag=s.asm.Diag).apply(null,arguments)},s._Dilation2D=function(){return(s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},s._Dilation2DBackpropFilter=function(){return(s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},s._Dilation2DBackpropInput=function(){return(s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._EluGrad=function(){return(s._EluGrad=s.asm.EluGrad).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Erf=function(){return(s._Erf=s.asm.Erf).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._Expm1=function(){return(s._Expm1=s.asm.Expm1).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsFinite=function(){return(s._IsFinite=s.asm.IsFinite).apply(null,arguments)},s._IsInf=function(){return(s._IsInf=s.asm.IsInf).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LRN=function(){return(s._LRN=s.asm.LRN).apply(null,arguments)},s._LRNGrad=function(){return(s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._LinSpace=function(){return(s._LinSpace=s.asm.LinSpace).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._Log1p=function(){return(s._Log1p=s.asm.Log1p).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._MaxPool3D=function(){return(s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},s._MaxPool3DGrad=function(){return(s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},s._MaxPoolGrad=function(){return(s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},s._MaxPoolWithArgmax=function(){return(s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Mod=function(){return(s._Mod=s.asm.Mod).apply(null,arguments)},s._Multinomial=function(){return(s._Multinomial=s.asm.Multinomial).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeBilinearGrad=function(){return(s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._ResizeNearestNeighborGrad=function(){return(s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SearchSorted=function(){return(s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Selu=function(){return(s._Selu=s.asm.Selu).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sign=function(){return(s._Sign=s.asm.Sign).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Sinh=function(){return(s._Sinh=s.asm.Sinh).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Softplus=function(){return(s._Softplus=s.asm.Softplus).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._SparseToDense=function(){return(s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._TensorScatterUpdate=function(){return(s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)};var Md=s.stackSave=function(){return(Md=s.stackSave=s.asm.stackSave).apply(null,arguments)},Od=s.stackRestore=function(){return(Od=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},ra=s.stackAlloc=function(){return(ra=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=Rd;var Oo;Te=function Q(){Oo||Ld(),Oo||(Te=Q)};function Ld(Q){if(ce>0||(re(),ce>0))return;function le(){Oo||(Oo=!0,s.calledRun=!0,!E&&(te(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),ae()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),le()},1)):le()}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();Ld();var xs;l&&(xs={uncaughtException:process.listeners("uncaughtException").filter(function(Q){return!l.uncaughtException.indexOf(Q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Q){return!l.unhandledRejection.indexOf(Q)>-1})});var vs;if(typeof a<"u")vs=a;else if(typeof WasmBackendModuleThreadedSimd<"u")vs=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(xs){var zd=vs._dispose;vs._dispose=function(){zd(),xs.uncaughtException.forEach(function(Q){process.removeListener("uncaughtException",Q)}),xs.unhandledRejection.forEach(function(Q){process.removeListener("unhandledRejection",Q)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}),tc=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Cp=class{refCount(e){return zn("refCount")}incRef(e){return zn("incRef")}timerAvailable(){return!0}time(e){return zn("time")}read(e){return zn("read")}readSync(e){return zn("readSync")}readToGPU(e,t){return zn("readToGPU")}numDataIds(){return zn("numDataIds")}disposeData(e,t){return zn("disposeData")}write(e,t,n){return zn("write")}move(e,t,n,r,a){return zn("move")}createTensorFromGPUData(e,t,n){return zn("createTensorFromGPUData")}memory(){return zn("memory")}floatPrecision(){return zn("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return zn("dispose")}};function zn(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function $0(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Ih(e,t,n)}function V$(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Ih(e,n,r),Ih(t,n,r)}function lp(e,t,n){return Math.max(e,Math.min(t,n))}function U$(e){return e%2===0?e:e+1}function Ih(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function G$(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function H$(e,t){let n=Math.random();return t*n+(1-n)*e}function j$(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function $(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Nn(e,t,n=""){$(fa(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function ai(e){$(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ot(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function q$(e){return e.length===0}function A0(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==null&&t[n]!==null&&e[n]!==t[n])return!1;return!0}function fa(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Jo(e){return e%1===0}function K$(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function X$(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Z$(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return $0(t),t}function rp(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function J$(e,t=a=>0,n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}i++;let l=t(i);if(n!=null&&i>=n){s();return}r!=null?r(o,l):setTimeout(o,l)};o()})}function Y$(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(e[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function vr(e,t){let n=t.length;return e=e==null?t.map((r,a)=>a):[].concat(e),$(e.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),$(e.every(r=>Jo(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function F0(e,t){let n=[],r=[],a=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||a?null:vr(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function R0(e,t){return hg(e,t)}function hg(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function D0(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function M0(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function Q$(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function Sh(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function O0(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Da(e){return typeof e=="string"||e instanceof String}function L0(e){return typeof e=="boolean"}function z0(e){return typeof e=="number"}function Ep(e){return Array.isArray(e)?Ep(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":z0(e)?"float32":Da(e)?"string":L0(e)?"bool":"float32"}function Wa(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Nh(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function fl(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function P0(e,t,n,r=!1){let a=new Array;if(t.length===1){let s=t[0]*(r?2:1);for(let i=0;i<s;i++)a[i]=n[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,p)=>l*p)*(r?2:1);for(let l=0;l<s;l++)a[l]=P0(e+l*o,i,n,r)}return a}function qo(e,t,n=!1){if(e.length===0)return t[0];let r=e.reduce((a,s)=>a*s)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return P0(0,e,t,n)}function eA(e,t){if(Array.isArray(e))return e;if(t==="float32")return e instanceof Float32Array?e:new Float32Array(e);if(t==="int32")return e instanceof Int32Array?e:new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function cg(e,t){let n=nc(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function nc(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function tA(e,t){let n=e.reduce((r,a)=>r*a,1);if(t==null||t==="float32")return qo(e,new Float32Array(n));if(t==="int32")return qo(e,new Int32Array(n));if(t==="bool")return qo(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Xn(e){e.forEach(t=>{$(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function nA(e,t,n){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function rA(e,t,n){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function rc(e){return e&&e.then&&typeof e.then=="function"}var Wv="tfjsflags",B0=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=aA,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let r=this.urlFlags[e];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(rc(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);Wv in e&&e[Wv].split(",").forEach(t=>{let[n,r]=t.split(":");this.urlFlags[n]=iA(n,r)})}};function aA(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(sA(t,r[0],r[1]),r.join("="))),t}function sA(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function iA(e,t){let n=t.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:t}function H(){return mg}var mg=null;function oA(e){mg=e}var Om;function W0(){if(Om==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");Om=e}return Om}function lA(){let e=W0();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function fg(e,t){let n=lA();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var gl="Abs",si="Acos",ii="Acosh",rs="Add",oi="AddN",yl="All",bl="Any",xl="ArgMax",vl="ArgMin",li="Asin",ui="Asinh",pi="Atan",di="Atanh",hi="Atan2",ci="AvgPool",$p="AvgPoolGrad",wl="AvgPool3D",Ap="AvgPool3DGrad",mi="BatchMatMul",kl="BatchToSpaceND",Il="Bincount",Sl="BitwiseAnd",V0="BroadcastTo",Fp="BroadcastArgs",fi="Cast",gi="Ceil",as="ClipByValue",ac="Complex",Rp="ComplexAbs",Nl="Concat",yi="Conv2D",sc="Conv2DBackpropFilter",bi="Conv2DBackpropInput",xi="Conv3D",Tl="Conv3DBackpropFilterV2",_l="Conv3DBackpropInputV2",vi="Cos",wi="Cosh",Cl="Cumprod",ki="Cumsum",El="CropAndResize",Dp="DenseBincount",$l="DepthToSpace",Ii="DepthwiseConv2dNative",ic="DepthwiseConv2dNativeBackpropFilter",oc="DepthwiseConv2dNativeBackpropInput",Mp="Diag",Si="Dilation2D",Yo="Dilation2DBackpropInput",Qo="Dilation2DBackpropFilter",lc="Draw",Ni="RealDiv",uc="Einsum",Ti="Elu",Al="EluGrad",_i="Erf",Fl="Equal",Ci="Exp",Rl="ExpandDims",Ei="Expm1",pc="FFT",Op="Fill",Dl="FlipLeftRight",$i="Floor",Ai="FloorDiv",Fi="FusedBatchNorm",Ml="GatherV2",Ol="GatherNd",Ll="Greater",Ri="GreaterEqual",Di="Identity",dc="IFFT",hc="Imag",Mi="IsFinite",Oi="IsInf",Li="IsNan",zi="LeakyRelu",zl="Less",Pl="LessEqual",Bl="LinSpace",Pi="Log",Bi="Log1p",Wl="LogicalAnd",Vl="LogicalNot",Ul="LogicalOr",U0="LogicalXor",G0="LogSoftmax",uA="LowerBound",Wi="LRN",Gl="LRNGrad",pA="MatrixBandPart",Vi="Max",Ui="Maximum",Gi="MaxPool",Lp="MaxPoolGrad",Hl="MaxPool3D",zp="MaxPool3DGrad",Pp="MaxPoolWithArgmax",Hi="Mean",ji="Min",qi="Minimum",Ki="MirrorPad",Xi="Mod",jl="Multinomial",Zi="Multiply",ql="Neg",Kl="NotEqual",Xl="NonMaxSuppressionV3",Zl="NonMaxSuppressionV4",Jl="NonMaxSuppressionV5",Yl="OnesLike",Ji="OneHot",Ql="Pack",Yi="PadV2",dA="Pool",Qi="Pow",eo="Prelu",to="Prod",cc="RaggedGather",mc="RaggedRange",fc="RaggedTensorToTensor",Bp="Range",gc="Real",no="Reciprocal",ro="Relu",eu="Reshape",ao="ResizeNearestNeighbor",tu="ResizeNearestNeighborGrad",so="ResizeBilinear",nu="ResizeBilinearGrad",io="Relu6",oo="Reverse",lo="Round",uo="Rsqrt",ru="ScatterNd",au="TensorScatterUpdate",su="SearchSorted",iu="Select",po="Selu",ou="Slice",ho="Sin",co="Sinh",mo="Sign",fo="Sigmoid",go="Softplus",yo="Sqrt",bo="Sum",lu="SpaceToBatchND",uu="SplitV",xo="Softmax",Wp="SparseFillEmptyRows",pu="SparseReshape",Vp="SparseSegmentMean",Up="SparseSegmentSum",du="SparseToDense",vo="SquaredDifference",Gp="Square",Hp="StaticRegexReplace",hu="StridedSlice",jp="StringNGrams",qp="StringSplit",Kp="StringToHashBucketFast",wo="Sub",ko="Tan",Io="Tanh",ss="Tile",cu="TopK",mu="Transform",pa="Transpose",Xp="Unique",fu="Unpack",Zp="UnsortedSegmentSum",hA="UpperBound",gu="ZerosLike",is="Step",Th="FromPixels",yu="RotateWithOffset",zs="_FusedMatMul",Ps="FusedConv2D",Bs="FusedDepthwiseConv2D";function Ra(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...e)}function cA(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...e)}var el=fg("kernelRegistry",()=>new Map),up=fg("gradRegistry",()=>new Map);function pp(e,t){let n=gg(e,t);return el.get(n)}function tf(e){return up.get(e)}function _h(e){let t=el.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Jp(e){let{kernelName:t,backendName:n}=e,r=gg(t,n);el.has(r)&&Ra(`The kernel '${t}' for backend '${n}' is already registered`),el.set(r,e)}function H0(e){let{kernelName:t}=e;up.has(t)&&H().getBool("DEBUG")&&Ra(`Overriding the gradient for '${t}'`),up.set(t,e)}function mA(e,t){let n=gg(e,t);if(!el.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);el.delete(n)}function fA(e){if(!up.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);up.delete(e)}function gA(e,t){_h(e).forEach(n=>{let r=Object.assign({},n,{backendName:t});Jp(r)})}function gg(e,t){return`${t}_${e}`}var w={};De(w,{arraysEqual:()=>fa,arraysEqualWithNull:()=>A0,assert:()=>$,assertNonNegativeIntegerDimensions:()=>Xn,assertNonNull:()=>ai,assertShapesMatch:()=>Nn,bytesFromStringArray:()=>O0,bytesPerElement:()=>Sh,checkConversionForErrors:()=>D0,clamp:()=>lp,computeStrides:()=>fl,convertBackendValuesAndArrayBuffer:()=>eA,createScalarValue:()=>kA,createShuffledIndices:()=>Z$,decodeString:()=>Ch,distSquared:()=>j$,encodeString:()=>Qp,fetch:()=>SA,fingerPrint64:()=>wA,flatten:()=>Va,getArrayFromDType:()=>hg,getTypedArrayFromDType:()=>R0,hasEncodingLoss:()=>Q$,hexToLong:()=>Yp,indexToLoc:()=>rA,inferDtype:()=>Ep,inferFromImplicitShape:()=>Y$,isBoolean:()=>L0,isFunction:()=>Wa,isInt:()=>Jo,isNumber:()=>z0,isPromise:()=>rc,isScalarShape:()=>q$,isString:()=>Da,isTypedArray:()=>Yt,isValidDtype:()=>M0,locToIndex:()=>nA,makeOnesTypedArray:()=>cg,makeZerosNestedTypedArray:()=>tA,makeZerosTypedArray:()=>nc,nearestDivisor:()=>Nh,nearestLargerEven:()=>U$,now:()=>dp,parseAxisParam:()=>vr,randUniform:()=>H$,repeatedTry:()=>J$,rightPad:()=>rp,shuffle:()=>$0,shuffleCombo:()=>V$,sizeFromShape:()=>ot,sizeToSquarishShape:()=>X$,squeezeShape:()=>F0,sum:()=>G$,swap:()=>Ih,tanh:()=>K$,toNestedArray:()=>qo,toTypedArray:()=>yc});function j0(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Vv=ns(N$()),Ts=Vv.default||Vv;function Yp(e){return Ts.fromString(e,!0,16)}var q0=Yp("c3a5c85c97cb3127"),Is=Yp("b492b66fbe98f273"),bn=Yp("9ae16a3b2f90404f");function nf(e){return e.xor(e.shru(47))}function K0(e,t,n){let r=e.slice(t,t+n);return Ts.fromBytes(Array.from(r),!0,!0)}function yt(e,t){return K0(e,t,8)}function Uv(e,t){return K0(e,t,4)}function Jt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function za(e,t,n=Yp("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function yA(e,t,n,r,a,s){a=a.add(e),s=Jt(s.add(a).add(r),21);let i=a;return a=a.add(t),a=a.add(n),s=s.add(Jt(a,44)),[a.add(r),s.add(i)]}function Jd(e,t,n,r){return yA(yt(e,t),yt(e,t+8),yt(e,t+16),yt(e,t+24),n,r)}function bA(e,t=e.length){if(t>=8){let n=bn.add(t*2),r=yt(e,0).add(bn),a=yt(e,t-8),s=Jt(a,37).mul(n).add(r),i=Jt(r,25).add(a).mul(n);return za(s,i,n)}if(t>=4){let n=bn.add(t*2),r=Uv(e,0);return za(r.shl(3).add(t),Uv(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1],s=n+(r<<8),i=t+(a<<2);return nf(bn.mul(s).xor(q0.mul(i))).mul(bn)}return bn}function xA(e,t=e.length){let n=bn.add(t*2),r=yt(e,0).mul(Is),a=yt(e,8),s=yt(e,t-8).mul(n),i=yt(e,t-16).mul(bn);return za(Jt(r.add(a),43).add(Jt(s,30)).add(i),r.add(Jt(a.add(bn),18)).add(s),n)}function vA(e,t=e.length){let n=bn.add(t*2),r=yt(e,0).mul(bn),a=yt(e,8),s=yt(e,t-8).mul(n),i=yt(e,t-16).mul(bn),o=Jt(r.add(a),43).add(Jt(s,30)).add(i),l=za(o,r.add(Jt(a.add(bn),18)).add(s),n),p=yt(e,16).mul(n),u=yt(e,24),d=o.add(yt(e,t-32)).mul(n),h=l.add(yt(e,t-24)).mul(n);return za(Jt(p.add(u),43).add(Jt(d,30)).add(h),p.add(Jt(u.add(r),18)).add(d),n)}function wA(e,t=e.length){let n=Ts.fromNumber(81,!0);if(t<=32)return t<=16?bA(e,t):xA(e,t);if(t<=64)return vA(e,t);let r=n,a=n.mul(Is).add(113),s=nf(a.mul(bn).add(113)).mul(bn),i=[Ts.UZERO,Ts.UZERO],o=[Ts.UZERO,Ts.UZERO];r=r.mul(bn).add(yt(e,0));let l=0,p=(t-1>>6)*64,u=p+(t-1&63)-63;do r=Jt(r.add(a).add(i[0]).add(yt(e,l+8)),37).mul(Is),a=Jt(a.add(i[1]).add(yt(e,l+48)),42).mul(Is),r=r.xor(o[1]),a=a.add(i[0]).add(yt(e,l+40)),s=Jt(s.add(o[0]),33).mul(Is),i=Jd(e,l,i[1].mul(Is),r.add(o[0])),o=Jd(e,l+32,s.add(o[1]),a.add(yt(e,l+16))),[s,r]=[r,s],l+=64;while(l!==p);let d=Is.add(s.and(255).shl(1));return l=u,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Jt(r.add(a).add(i[0]).add(yt(e,l+8)),37).mul(d),a=Jt(a.add(i[1]).add(yt(e,l+48)),42).mul(d),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(yt(e,l+40))),s=Jt(s.add(o[0]),33).mul(d),i=Jd(e,l,i[1].mul(d),r.add(o[0])),o=Jd(e,l+32,s.add(o[1]),a.add(yt(e,l+16))),[s,r]=[r,s],za(za(i[0],o[0],d).add(nf(a).mul(q0)).add(s),za(i[1],o[1],d).add(r),d)}function kA(e,t){return t==="string"?Qp(e):yc([e],t)}function IA(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function yc(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Va(e)),H().getBool("DEBUG")&&D0(e,t),IA(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)Math.round(e[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function dp(){return H().platform.now()}function SA(e,t){return H().platform.fetch(e,t)}function Qp(e,t="utf-8"){return t=t||"utf-8",H().platform.encode(e,t)}function Ch(e,t="utf-8"){return t=t||"utf-8",H().platform.decode(e,t)}function Yt(e){return H().platform.isTypedArray!=null?H().platform.isTypedArray(e):j0(e)}function Va(e,t=[],n=!1){if(t==null&&(t=[]),typeof e=="boolean"||typeof e=="number"||typeof e=="string"||rc(e)||e==null||Yt(e)&&n)t.push(e);else if(Array.isArray(e)||Yt(e))for(let r=0;r<e.length;++r)Va(e[r],t,n);else{let r=-1;for(let a of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(a)&&(r=Math.max(r,Number(a)));for(let a=0;a<=r;a++)Va(e[a],t,n)}return t}var NA=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new _A)}profileKernel(e,t,n){let r,a=()=>{r=n()},s,i=dp();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(let o of r)o.dataSync();s=Promise.resolve({kernelMs:dp()-i})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let l=r[o];l.data().then(p=>{TA(p,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),r,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],a,o[2])})})}};function TA(e,t,n){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let a=e[r];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var _A=class{logKernelProfile(e,t,n,r,a,s){let i=typeof r=="number"?rp(`${r}ms`,9):r.error,o=rp(e,25),l=t.rank,p=t.size,u=rp(t.shape.toString(),14),d="";for(let h in a){let c=a[h];if(c!=null){let m=c.shape||t.shape,f=m.length;d+=`${h}: ${f}D ${f>0?m:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${u}	%c${p}	%c${d}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function CA(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let p=e[l],u=p.inputs;for(let d in u){let h=u[d],c=!1;for(let m=0;m<t.length;m++)if(r[h.id]){p.outputs.forEach(f=>r[f.id]=!0),c=!0,a[p.id]=!0;break}if(c)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let p=e[l],u=p.inputs;for(let d=0;d<p.outputs.length;d++)if(s[p.outputs[d].id]){for(let h in u)s[u[h].id]=!0,i[p.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let p=e[l];if(a[p.id]&&i[p.id]){let u={};for(let h in p.inputs){let c=p.inputs[h];r[c.id]&&(u[h]=c)}let d=Object.assign({},p);d.inputs=u,d.outputs=p.outputs,o.push(d)}}return o}function EA(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(l=>{let p=e[l.id];p!=null?i.push(p):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let p=n(()=>o[l]());if(p.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${p.dtype}'`);let u=s.inputs[l];if(!fa(p.shape,u.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${p.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=p;else{let d=e[u.id];e[u.id]=r(d,p),d.dispose()}}}}var Gv=20,Vu=3,Lm=7;function $A(e,t,n,r){let a=fl(t),s=AA(e,t,n,a),i=t.length,o=mh(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(p=>"    "+p).join(`
`)),l.join(`
`)}function AA(e,t,n,r){let a=ot(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l=n==="complex64"?Ku(e):e;if(o>1)for(let p=0;p<a/s;p++){let u=p*s;for(let d=0;d<s;d++)i[d]=Math.max(i[d],qu(l[u+d],0,n).length)}return i}function qu(e,t,n){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(Lm))} + ${parseFloat(e[1].toFixed(Lm))}j`:Da(e)?r=`'${e}'`:n==="bool"?r=X0(e):r=parseFloat(e.toFixed(Lm)).toString(),rp(r,t)}function X0(e){return e===0?"false":"true"}function mh(e,t,n,r,a,s=!0){let i=n==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(n==="complex64"){let f=Ku(e);return[qu(f[0],0,n)]}return n==="bool"?[X0(e[0])]:[e[0].toString()]}if(l===1){if(o>Gv){let f=Vu*i,g=Array.from(e.slice(0,f)),y=Array.from(e.slice((o-Vu)*i,o*i));return n==="complex64"&&(g=Ku(g),y=Ku(y)),["["+g.map((b,x)=>qu(b,a[x],n)).join(", ")+", ..., "+y.map((b,x)=>qu(b,a[o-Vu+x],n)).join(", ")+"]"]}return["["+(n==="complex64"?Ku(e):Array.from(e)).map((f,g)=>qu(f,a[g],n)).join(", ")+"]"]}let p=t.slice(1),u=r.slice(1),d=r[0]*i,h=[];if(o>Gv){for(let f=0;f<Vu;f++){let g=f*d,y=g+d;h.push(...mh(e.slice(g,y),p,n,u,a,!1))}h.push("...");for(let f=o-Vu;f<o;f++){let g=f*d,y=g+d;h.push(...mh(e.slice(g,y),p,n,u,a,f===o-1))}}else for(let f=0;f<o;f++){let g=f*d,y=g+d;h.push(...mh(e.slice(g,y),p,n,u,a,f===o-1))}let c=l===2?",":"";h[0]="["+(o>0?h[0]+c:"");for(let f=1;f<h.length-1;f++)h[f]=" "+h[f]+c;let m=`,
`;for(let f=2;f<l;f++)m+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":m),h}function Ku(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ot=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ot(e),n!=null){let r=n.length;$(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||hg(t,this.size),this.strides=fl(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Tr().makeTensor(this.values,this.shape,this.dtype)}},Tr=null,Uo=null;function FA(e){Tr=e}function RA(e){Uo=e}var Ge=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ot(e),this.strides=fl(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Uo.buffer(this.shape,this.dtype,e)}bufferSync(){return Uo.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return qo(this.shape,e,this.dtype==="complex64")}arraySync(){return qo(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Tr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Ch(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Tr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Tr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Ch(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Tr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Tr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Uo.print(this,e)}clone(){return this.throwIfDisposed(),Uo.clone(this)}toString(e=!1){let t=this.dataSync();return $A(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Uo.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Tr().makeVariable(this,e,t,n)}};Object.defineProperty(Ge,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function Y(){return fg("Tensor",()=>Ge)}Y();var Ws=class extends Ge{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!fa(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Tr().disposeTensor(this),this.dataId=e.dataId,Tr().incRef(this,null)}dispose(){Tr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ws,Symbol.hasInstance,{value:e=>e instanceof Ge&&e.assign!=null&&e.assign instanceof Function});var _r={};De(_r,{assertTypesMatch:()=>Y0,getTensorsInContainer:()=>yg,isTensorInList:()=>MA,makeTypesMatch:()=>_t});var rf;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(rf||(rf={}));var af;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(af||(af={}));var sf;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(sf||(sf={}));var of;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(of||(of={}));var lf;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(lf||(lf={}));var DA={float32:of,int32:af,bool:sf,complex64:lf};function or(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return DA[e][t]}function bc(e){return or(e,"int32")}function Z0(e){return e!=null&&typeof e=="object"&&"texture"in e&&e.texture instanceof WebGLTexture}function J0(e){return typeof GPUBuffer<"u"&&e!=null&&typeof e=="object"&&"buffer"in e&&e.buffer instanceof GPUBuffer}function _t(e,t){if(e.dtype===t.dtype)return[e,t];let n=or(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Y0(e,t){$(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function MA(e,t){return t.some(n=>n.id===e.id)}function yg(e){let t=[];return Q0(e,t,new Set),t}function Q0(e,t,n){if(e==null)return;if(e instanceof Ge){t.push(e);return}if(!OA(e))return;let r=e;for(let a in r){let s=r[a];n.has(s)||(n.add(s),Q0(s,t,n))}}function OA(e){return Array.isArray(e)||typeof e=="object"}function zm(e){return e.kernelName!=null}var Hv=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},bg=class uf{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Hv}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let r=t[n];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:n}=this.initializeBackend(t);if(n)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,n,r=1){return t in this.registryFactory?(Ra(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:n,priority:r},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:n,asyncInit:r}=this.initializeBackend(t);if(!(r?await n:n))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new NA(this.backendInstance),!0}setupRegisteredKernels(){_h(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){_h(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let n=this.registryFactory[t];if(n==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let r=n.factory();if(r&&!(r instanceof Cp)&&typeof r.then=="function"){let a=++this.pendingBackendInitId,s=r.then(i=>a<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Ra(`Initialization of backend ${t} failed`),Ra(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=r,{success:!0,asyncInit:!1}}catch(r){return Ra(`Initialization of backend ${t} failed`),Ra(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,n)=>this.registryFactory[n].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let r=t[n],{success:a,asyncInit:s}=this.initializeBackend(r);if(s||a)return{name:r,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,n){let r=this.state.tensorInfo.get(n),a=r.backend,s=this.readSync(n),i=a.refCount(n);a.disposeData(n,!0),r.backend=t,t.move(n,s,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,n){let r=null;if(n==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");n=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}let a;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(a),()=>(a=n(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(t,n,r){t();try{let a=r();return n(),a}catch(a){throw n(),a}}nextTensorId(){return uf.nextTensorId++}nextVariableId(){return uf.nextVariableId++}clone(t){let n=O.runKernel(Di,{x:t}),r={x:t},a=i=>({x:()=>{let o="float32",l={x:i},p={dtype:o};return O.runKernel(fi,l,p)}}),s=[];return this.addTapeNode(this.state.activeScope.name,r,[n],a,s,{}),n}runKernel(t,n,r){if(this.backendName==null&&this.backend,pp(t,this.backendName)==null)throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:n,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,r){let a=this.backend.numDataIds(),s=0;r.forEach(l=>{s+=l.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-n-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l,p=zm(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(zm(t)){let{kernelName:m,inputs:f,attrs:g}=t;this.backendName==null&&this.backend;let y=pp(m,this.backendName);$(y!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),o=()=>{let b=this.backend.numDataIds();l=y.kernelFunc({inputs:f,attrs:g,backend:this.backend});let x=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,b,x);let v=x.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(a){let I=this.getTensorsForGradient(m,f,v);r=this.saveTensorsForBackwardMode(I)}return v}}else{let{forwardFunc:m}=t,f=g=>{a&&(r=g.map(y=>this.keep(this.clone(y))))};o=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>m(this.backend,f));let y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,g,y),y}}let{inputs:u,attrs:d}=t,h=zm(t)?null:t.backwardsFunc,c;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=o():(c=this.profiler.profileKernel(p,u,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(c),n=c.outputs)}),a&&this.addTapeNode(p,u,n,h,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:p,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(m=>u[m]!=null?u[m].shape:null),outputShapes:n.map(m=>m.shape),kernelTimeMs:c.timeMs,extraInfo:c.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,n,r){let a=tf(t);if(a!=null){let s=a.inputsToSave||[],i=a.outputsToSave||[],o;a.saveAllInputs?($(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(n).map(p=>n[p])):o=s.map(p=>n[p]);let l=r.filter((p,u)=>i[u]);return o.concat(l)}return[]}makeTensor(t,n,r,a){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",a=a||this.backend;let s=t;r==="string"&&Da(t[0])&&(s=t.map(l=>Qp(l)));let i=a.write(s,n,r),o=new Ge(n,r,i,this.nextTensorId());if(this.trackTensor(o,a),r==="string"){let l=this.state.tensorInfo.get(i),p=O0(s);this.state.numBytes+=p-l.bytes,l.bytes=p}return o}makeTensorFromDataId(t,n,r,a){r=r||"float32";let s={dataId:t,shape:n,dtype:r};return this.makeTensorFromTensorInfo(s,a)}makeTensorFromTensorInfo(t,n){let{dataId:r,shape:a,dtype:s}=t,i=new Ge(a,s,r,this.nextTensorId());return this.trackTensor(i,n),i}makeVariable(t,n=!0,r,a){r=r||this.nextVariableId().toString(),a!=null&&a!==t.dtype&&(t=t.cast(a));let s=new Ws(t,n,r,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,n){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let r=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(r=t.size*Sh(t.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:r})),t instanceof Ws||this.track(t)}incRef(t,n){this.trackTensor(t,n),this.backend.incRef(t.dataId)}removeDataId(t,n){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let n=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let r=t.size*Sh(t.dtype);this.state.numBytes-=r}n.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,n.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let n=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-r;for(let a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,r,a,s,i){let o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:r,saved:s},l=tf(t);l!=null&&(a=l.gradFunc),a!=null&&(o.gradient=p=>(p=p.map((u,d)=>{if(u==null){let h=r[d],c=nc(h.size,h.dtype);return this.makeTensor(c,h.shape,h.dtype)}return u}),a(p.length>1?p:p[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(n.name=t),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(t){let n=yg(t),r=new Set(n.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!r.has(i.id)&&i.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(s=>{!s.kept&&s.scopeId===a.id&&this.track(s)})}gradients(t,n,r,a=!1){if($(n.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));$(s instanceof Ge,()=>"The result y returned by f() must be a tensor.");let i=CA(this.state.activeTape,n,s);if(!a&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[s.id]=r??LA(s.shape),EA(o,i,p=>this.tidy(p),zA);let l=n.map(p=>o[p.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(p=>{for(let u of p.saved)u.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(t){return $(Wa(t),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{$(n.every(o=>o instanceof Ge),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r,a={};n.forEach((o,l)=>{a[l]=o});let s=(o,l)=>(r=t(...n,l),$(r.value instanceof Ge,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(Wa(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),i=(o,l)=>{let p=r.gradFunc(o,l),u=Array.isArray(p)?p:[p];$(u.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(u.every(h=>h instanceof Ge),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let d={};return u.forEach((h,c)=>{d[c]=()=>h}),d};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,n){return this.state.tensorInfo.get(t).backend.readToGPU(t,n)}async time(t){let n=dp(),r=await this.backend.time(t);return r.wallMs=dp()-n,r}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Hv;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};bg.nextTensorId=0;bg.nextVariableId=0;function LA(e){let t=cg(ot(e),"float32");return O.makeTensor(t,e,"float32")}function e1(){let e=W0();if(e._tfengine==null){let t=new B0(e);e._tfengine=new bg(t)}return oA(e._tfengine.ENV),FA(()=>e._tfengine),e._tfengine}var O=e1();function zA(e,t){let n={a:e,b:t};return O.runKernel(rs,n)}var ed={};De(ed,{isBrowser:()=>t1,isMobile:()=>WA,mockIsMobile:()=>BA});function PA(){return typeof navigator<"u"&&navigator!=null}var pf;function BA(e){pf=e}function WA(e){if(pf!==void 0)return pf;if(e||PA()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function t1(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Rn=H();Rn.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Rn.registerFlag("IS_BROWSER",()=>t1());Rn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Rn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Rn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Rn.registerFlag("PROD",()=>!1);Rn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Rn.getBool("DEBUG"));Rn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Rn.registerFlag("IS_TEST",()=>!1);Rn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Rn.getBool("DEBUG"));Rn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Rn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Rn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Xr(e,t){let n=e;if(Yt(e))return t==="string"?[]:[e.length];if(Z0(e)){let a=e.channels||"RGBA";return[e.height,e.width*a.length]}else if(J0(e))return[e.buffer.size/(t==null?4:Sh(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||Yt(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&n1(e,r,[]),r}function n1(e,t,n){if(n=n||[],!Array.isArray(e)&&!Yt(e)){$(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}$(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),$(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let a=0;a<e.length;++a)n1(e[a],r,n.concat(a))}function jv(e,t,n,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,n,r="numeric"){if(e instanceof Y())return jv(r,e.dtype,t,n),e;let a=Ep(e);if(a!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),jv(r,a,t,n),e==null||!Yt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Xr(e,a);!Yt(e)&&!Array.isArray(e)&&(e=[e]);let i=a!=="string"?yc(e,a):Va(e,[],!0);return O.makeTensor(i,s,a)}function hp(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,s)=>_(a,`${t}[${s}]`,n,r))}var xg="__op";function L(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+xg;let a=(...s)=>{O.startScope(n);try{let i=r(...s);return rc(i)&&console.error("Cannot return a Promise inside of tidy."),O.endScope(i),i}catch(i){throw O.endScope(null),i}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function VA(e,t){let n=_(e,"real","complex"),r=_(t,"imag","complex");Nn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return O.runKernel(ac,a)}var ca=L({complex_:VA});function os(e,t,n,r){if(r==null)r=Ep(e);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(J0(e)||Z0(e)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return O.backend.createTensorFromGPUData(e,t||n,r)}if(!Yt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Xn(t);let a=ot(t),s=ot(n);$(a===s,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${s}`);for(let i=0;i<n.length;++i){let o=n[i],l=i===n.length-1?o!==ot(t.slice(i)):!0;$(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Yt(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=r!=="string"?yc(e,r):Va(e,[],!0),O.makeTensor(e,t,r)}function wn(e,t,n){let r=Xr(e,n);return os(e,t,r,n)}var Vs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ga=class r1{static join(t){return new r1(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(r=>Yt(r)?r.buffer:r),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let n=0;for(let r=0;r<t.length;r++){let a=t[r];r!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=n+a.byteLength;this.shards.push({buffer:a,start:n,end:s}),n=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,n=isNaN(Number(n))?0:n,t=Math.max(0,t),n=Math.min(this.byteLength,n),n<=t)return new ArrayBuffer(0);let r=this.findShardForByte(t);if(r===-1)throw new Error(`Could not find start shard for byte ${t}`);let a=n-t,s=new ArrayBuffer(a),i=new Uint8Array(s),o=0;for(let l=r;l<this.shards.length;l++){let p=this.shards[l],u=t+o-p.start,d=o,h=Math.min(n,p.end)-p.start,c=new Uint8Array(p.buffer,u,h-u);if(i.set(c,d),o+=c.length,n<p.end)break}return s}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function n(a){return t<a.start?-1:t>=a.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let r=UA(this.shards,n);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}};function UA(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(s===0)return a;s<0?r=a:n=a+1}return-1}function GA(){H().set("PROD",!0)}function HA(){H().set("DEBUG",!0)}function jA(){H().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function a1(e){H().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function qA(){O.disposeVariables()}function fr(){return O}function Eh(){return O.memory()}function KA(e){return O.profile(e)}function W(e,t){return O.tidy(e,t)}function Re(e){yg(e).forEach(t=>t.dispose())}function Vt(e){return O.keep(e)}function XA(e){return O.time(e)}function ZA(e){return O.setBackend(e)}function JA(){return O.ready()}function s1(){return O.backendName}function YA(e){O.removeBackend(e)}function QA(e){return O.findBackend(e)}function eF(e){return O.findBackendFactory(e)}function xc(e,t,n=1){return O.registerBackend(e,t,n)}function vg(){return O.backend}function tF(e,t){H().setPlatform(e,t)}var Ua=4;async function nF(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<a.length;++i){let o=a[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let p={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async d=>{let h=await l.bytes(),c=h.reduce((g,y)=>g+y.length,0)+Ua*h.length,m=new Uint8Array(c),f=0;for(let g=0;g<h.length;g++){let y=h[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);m.set(b,f),f+=Ua,m.set(y,f),f+=y.length}d(m)});r.push(u)}else r.push(l.data());t!=null&&(p.group=t),n.push(p)}let s=await Promise.all(r);return{data:sF(s),specs:n}}function i1(e,t){let n=new ga(e),r={},a=0;for(let s of t){let i=rF(s,(o,l)=>n.slice(a+o,a+l));r[s.name]=o1(s,n.slice(a,a+i)),a+=i}return r}function rF(e,t){let n=ot(e.shape),r;if("quantization"in e){let a=e.quantization;r=Vs[a.dtype]}else if(e.dtype==="string"){let a=0;for(let s=0;s<n;s++)a+=Ua+new Uint32Array(t(a,a+Ua))[0];return a}else r=Vs[e.dtype];return n*r}async function aF(e,t){let n=ot(e.shape),r;if("quantization"in e){let a=e.quantization;r=Vs[a.dtype]}else if(e.dtype==="string"){let a=0;for(let s=0;s<n;s++)a+=Ua+new Uint32Array(await t(a,a+Ua))[0];return a}else r=Vs[e.dtype];return n*r}function o1(e,t){let n=e.name,r=e.dtype,a=e.shape,s=ot(a),i,o=0;if("quantization"in e){let l=e.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${e.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${e.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${e.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=Vs[l.dtype],u=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(r==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(u.length);for(let d=0;d<u.length;d++){let h=u[d];i[d]=h*l.scale+l.min}}else if(l.dtype==="float16")i=hF()(u);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(r==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let d=0;d<u.length;d++){let h=u[d];i[d]=Math.round(h*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*p}else if(r==="string"){let l=ot(e.shape);i=[];for(let p=0;p<l;p++){let u=new Uint32Array(t.slice(o,o+Ua))[0];o+=Ua;let d=new Uint8Array(t.slice(o,o+u));i.push(d),o+=u}}else{let l=Vs[r];if(r==="float32")i=new Float32Array(t);else if(r==="int32")i=new Int32Array(t);else if(r==="bool")i=new Uint8Array(t);else if(r==="complex64"){i=new Float32Array(t);let p=new Float32Array(i.length/2),u=new Float32Array(i.length/2);for(let m=0;m<p.length;m++)p[m]=i[m*2],u[m]=i[m*2+1];let d=wn(p,a,"float32"),h=wn(u,a,"float32"),c=ca(d,h);return d.dispose(),h.dispose(),c}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*l}return wn(i,a,r)}async function qv(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){let{done:a,value:s}=await e.read();if(a&&s==null){let o=n-r.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}let i=new Uint8Array(r.length+s.byteLength);i.set(r,0),i.set(new Uint8Array(s),r.length),r=i}return r.buffer}async function l1(e,t){let n={},r=e.getReader(),a=new ArrayBuffer(0);for(let s of t){let i=await aF(s,async(p,u)=>(a=await qv(r,a,u),a.slice(p,u)));a=await qv(r,a,i);let o=a.slice(0,i);a=a.slice(i);let l=o1(s,o);if(n[s.name]=l,s1()==="webgpu"){let p=vg();"uploadToGPU"in p&&ot(l.shape)>=H().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&p.uploadToGPU(l.dataId)}}return n}function sF(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),a=0;return n.forEach(s=>{r.set(new Uint8Array(s.buffer),a),a+=s.byteLength}),r.buffer}var wg=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Kv(e){return wg?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function iF(e){if(wg)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function oF(e){if(wg){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function lF(e){return ga.join(e)}function Xv(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function u1(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}function p1(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(r.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(r.initializerSignature=e.initializerSignature),r}async function kg(e,t){let n,r;return e.weightsManifest!=null&&([n,r]=await t(e.weightsManifest)),p1(e,n,r)}function td(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:Kv(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:Kv(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:new ga(e.weightData).byteLength}}function df(e){let t=[];for(let n of e)t.push(...n.weights);return t}function uF(){let e=n=>{let r=n<<13,a=0;for(;!(r&8388608);)a-=8388608,r<<=1;return r&=-8388609,a+=947912704,r|a},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function pF(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function dF(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function hF(){let e=uF(),t=pF(),n=dF();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let o=r[i],l=e[n[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(a)}}var lr=class Sr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Sr.instance==null&&(Sr.instance=new Sr),Sr.instance}static registerSaveRouter(t){Sr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Sr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Sr.getHandlers(t,"save")}static getLoadHandlers(t,n){return Sr.getHandlers(t,"load",n)}static getHandlers(t,n,r){let a=[];return(n==="load"?Sr.getInstance().loadRouters:Sr.getInstance().saveRouters).forEach(s=>{let i=s(t,r);i!==null&&a.push(i)}),a}},cF=e=>lr.registerSaveRouter(e),mF=e=>lr.registerLoadRouter(e),fF=e=>lr.getSaveHandlers(e),gF=(e,t)=>lr.getLoadHandlers(e,t),hf="tensorflowjs",cf=1,As="models_store",Ma="model_info_store";function d1(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function mf(e){let t=e.result;t.createObjectStore(As,{keyPath:"modelPath"}),t.createObjectStore(Ma,{keyPath:"modelPath"})}var Us=class{constructor(e){if(this.indexedDB=d1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,r)=>{let a=this.indexedDB.open(hf,cf);a.onupgradeneeded=()=>mf(a),a.onsuccess=()=>{let s=a.result;if(t==null){let i=s.transaction(As,"readonly"),o=i.objectStore(As).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(o.result.modelArtifacts)},o.onerror=l=>(s.close(),r(o.error)),i.oncomplete=()=>s.close()}else{t.weightData=ga.join(t.weightData);let i=td(t),o=s.transaction(Ma,"readwrite"),l=o.objectStore(Ma),p;try{p=l.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(d){return r(d)}let u;p.onsuccess=()=>{u=s.transaction(As,"readwrite");let d=u.objectStore(As),h;try{h=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(c){return r(c)}h.onsuccess=()=>n({modelArtifactsInfo:i}),h.onerror=c=>{l=o.objectStore(Ma);let m=l.delete(this.modelPath);m.onsuccess=()=>(s.close(),r(h.error)),m.onerror=f=>(s.close(),r(h.error))}},p.onerror=d=>(s.close(),r(p.error)),o.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}}},a.onerror=s=>r(a.error)})}};Us.URL_SCHEME="indexeddb://";var h1=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Us.URL_SCHEME)?yF(e.slice(Us.URL_SCHEME.length)):null;lr.registerSaveRouter(h1);lr.registerLoadRouter(h1);function yF(e){return new Us(e)}function bF(e){return e.startsWith(Us.URL_SCHEME)?e.slice(Us.URL_SCHEME.length):e}var xF=class{constructor(){this.indexedDB=d1()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(hf,cf);n.onupgradeneeded=()=>mf(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Ma,"readonly"),s=a.objectStore(Ma).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=r=>t(n.error)})}async removeModel(e){return e=bF(e),new Promise((t,n)=>{let r=this.indexedDB.open(hf,cf);r.onupgradeneeded=()=>mf(r),r.onsuccess=()=>{let a=r.result,s=a.transaction(Ma,"readwrite"),i=s.objectStore(Ma),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=i.delete(e),u=()=>{l=a.transaction(As,"readwrite");let d=l.objectStore(As).delete(e);d.onsuccess=()=>t(o.result.modelArtifactsInfo),d.onerror=h=>n(o.error)};p.onsuccess=u,p.onerror=d=>(u(),a.close(),n(o.error))}},o.onerror=p=>(a.close(),n(o.error)),s.oncomplete=()=>{l==null?a.close():l.oncomplete=()=>a.close()}},r.onerror=a=>n(r.error)})}},ua="/",Go="tensorflowjs_models",c1="info",vF="model_topology",wF="weight_specs",kF="weight_data",IF="model_metadata";function m1(e){return{info:[Go,e,c1].join(ua),topology:[Go,e,vF].join(ua),weightSpecs:[Go,e,wF].join(ua),weightData:[Go,e,kF].join(ua),modelMetadata:[Go,e,IF].join(ua)}}function f1(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function SF(e){let t=e.split(ua);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ua)}function NF(e){return e.startsWith(Gs.URL_SCHEME)?e.slice(Gs.URL_SCHEME.length):e}var Gs=class{constructor(e){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=m1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=td(e),a=ga.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,iF(a));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch{throw f1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){let i=JSON.parse(a);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=oF(s),t}};Gs.URL_SCHEME="localstorage://";var g1=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Gs.URL_SCHEME)?TF(e.slice(Gs.URL_SCHEME.length)):null;lr.registerSaveRouter(g1);lr.registerLoadRouter(g1);function TF(e){return new Gs(e)}var _F=class{constructor(){$(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Go+ua,n=ua+c1;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){let s=SF(a);e[s]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=NF(e);let t=m1(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return f1(t),n}},Ko="://",Ga=class Ca{constructor(){this.managers={}}static getInstance(){return Ca.instance==null&&(Ca.instance=new Ca),Ca.instance}static registerManager(t,n){$(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Ko)&&(t=t.slice(0,t.indexOf(Ko))),$(t.length>0,()=>"scheme must not be an empty string.");let r=Ca.getInstance();$(r.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=n}static getManager(t){let n=Ca.getInstance().managers[t];if(n==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(Ca.getInstance().managers)}};function fh(e){if(e.indexOf(Ko)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ga.getSchemes().join(",")}`);return{scheme:e.split(Ko)[0],path:e.split(Ko)[1]}}async function y1(e,t,n=!1){$(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=lr.getLoadHandlers(e);$(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),$(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=lr.getSaveHandlers(t);$(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),$(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=fh(e).scheme,l=fh(e).path,p=o===fh(e).scheme,u=await a.load();n&&p&&await Ga.getManager(o).removeModel(l);let d=await i.save(u);return n&&!p&&await Ga.getManager(o).removeModel(l),d.modelArtifactsInfo}async function CF(){let e=Ga.getSchemes(),t={};for(let n of e){let r=await Ga.getManager(n).listModels();for(let a in r){let s=n+Ko+a;t[s]=r[a]}}return t}async function EF(e){let t=fh(e);return Ga.getManager(t.scheme).removeModel(t.path)}async function $F(e,t){return y1(e,t,!1)}async function AF(e,t){return y1(e,t,!0)}var FF=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let r=this.functionRefs[n.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return j0(e)}};if(H().get("IS_BROWSER")){H().setPlatform("browser",new FF);try{Ga.registerManager(Gs.URL_SCHEME,new _F)}catch{}try{Ga.registerManager(Us.URL_SCHEME,new xF)}catch{}}var RF={importFetch:()=>T$()},Pm,DF=class{constructor(){this.util=_$(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return H().global.fetch!=null?H().global.fetch(e,t):(Pm==null&&(Pm=RF.importFetch()),Pm(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new DF);function Ve(e,t="float32",n){return t=t||"float32",Xn(e),new Ot(e,t,n)}function MF(e,t){let n=_(e,"x","cast");if(!M0(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return O.runKernel(fi,r,a)}var ie=L({cast_:MF});function OF(e){let t={x:_(e,"x","clone","string_or_numeric")};return O.runKernel(Di,t)}var jr=L({clone_:OF});function Ig(e,t=!1){console.log(e.toString(t))}e1();var LF={buffer:Ve,cast:ie,clone:jr,print:Ig};RA(LF);function zF(e,t){let n=_(e,"a","add"),r=_(t,"b","add");[n,r]=_t(n,r);let a={a:n,b:r};return O.runKernel(rs,a)}var J=L({add_:zF});function PF(e,t){let n=_(e,"a","floorDiv"),r=_(t,"b","floorDiv");[n,r]=_t(n,r);let a={a:n,b:r};return O.runKernel(Ai,a)}var vc=L({floorDiv_:PF});function BF(e,t){let n=_(e,"a","div"),r=_(t,"b","div");if([n,r]=_t(n,r),n.dtype==="int32"&&r.dtype==="int32")return vc(n,r);let a={a:n,b:r},s={};return O.runKernel(Ni,a,s)}var ye=L({div_:BF});function WF(e,t){let n=_(e,"a","mul"),r=_(t,"b","mul");[n,r]=_t(n,r);let a={a:n,b:r};return O.runKernel(Zi,a)}var z=L({mul_:WF});function VF(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return O.runKernel(Rp,n)}else{let n={x:t};return O.runKernel(gl,n)}}var Dt=L({abs_:VF});function UF(e){let t={x:_(e,"x","acos")};return O.runKernel(si,t)}var Sg=L({acos_:UF});function GF(e){let t={x:_(e,"x","acosh")};return O.runKernel(ii,t)}var Ng=L({acosh_:GF});function HF(e){$(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),$(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((a,s)=>_(a,`tensors${s}`,"addN")),n=t[0];t.forEach(a=>{if(a.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!fa(a.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return O.runKernel(oi,r)}var b1=L({addN_:HF});function jF(e,t=null,n=!1){let r={x:_(e,"x","all","bool")},a={axis:t,keepDims:n};return O.runKernel(yl,r,a)}var wc=L({all_:jF});function qF(e,t=null,n=!1){let r={x:_(e,"x","any","bool")},a={axis:t,keepDims:n};return O.runKernel(bl,r,a)}var cp=L({any_:qF});function KF(e,t=0){let n={x:_(e,"x","argMax")},r={axis:t};return O.runKernel(xl,n,r)}var Hs=L({argMax_:KF});function XF(e,t=0){let n={x:_(e,"x","argMin")},r={axis:t};return O.runKernel(vl,n,r)}var Tg=L({argMin_:XF});function ZF(e){let t={x:_(e,"x","asin")};return O.runKernel(li,t)}var _g=L({asin_:ZF});function JF(e){let t={x:_(e,"x","asinh")};return O.runKernel(ui,t)}var Cg=L({asinh_:JF});function YF(e){let t={x:_(e,"x","atan")};return O.runKernel(pi,t)}var Eg=L({atan_:YF});function QF(e,t){let n=_(e,"a","atan2"),r=_(t,"b","atan2");[n,r]=_t(n,r);let a={a:n,b:r};return O.runKernel(hi,a)}var $g=L({atan2_:QF});function eR(e){let t={x:_(e,"x","atanh")};return O.runKernel(di,t)}var Ag=L({atanh_:eR});function tR(e,t,n,r,a="NHWC",s){let i=e[3],o=[...t,i],l=w1(a);return nd(e,o,n,s,r,null,null,l)}function x1(e,t,n,r,a,s,i="channelsLast"){let[o,l]=mp(t),p;if(i==="channelsLast")p=[o,l,e[3],e[3]];else if(i==="channelsFirst")p=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return nd(e,p,n,r,a,s,!1,i)}function nR(e,t,n,r,a,s,i="NDHWC"){let[o,l,p]=ff(t),u,d;if(i==="NDHWC")d="channelsLast",u=[o,l,p,e[4],e[4]];else if(i==="NCDHW")d="channelsFirst",u=[o,l,p,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return v1(e,u,n,r,a,!1,d,s)}function nd(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,p,u,d]=[-1,-1,-1,-1];if(o==="channelsLast")[l,p,u,d]=e;else if(o==="channelsFirst")[l,d,p,u]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,c,,m]=t,[f,g]=mp(n),[y,b]=mp(r),x=Xo(h,y),v=Xo(c,b),{padInfo:I,outHeight:N,outWidth:C}=sR(a,p,u,f,g,x,v,s,o),E=i?m*d:m,A;return o==="channelsFirst"?A=[l,E,N,C]:o==="channelsLast"&&(A=[l,N,C,E]),{batchSize:l,dataFormat:o,inHeight:p,inWidth:u,inChannels:d,outHeight:N,outWidth:C,outChannels:E,padInfo:I,strideHeight:f,strideWidth:g,filterHeight:h,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function v1(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,p,u,d,h]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,p,u,d,h]=e;else if(i==="channelsFirst")[l,h,p,u,d]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,m,f,,g]=t,[y,b,x]=ff(n),[v,I,N]=ff(r),C=Xo(c,v),E=Xo(m,I),A=Xo(f,N),{padInfo:R,outDepth:F,outHeight:S,outWidth:D}=iR(a,p,u,d,y,b,x,C,E,A,o),P=s?g*h:g,U;return i==="channelsFirst"?U=[l,P,F,S,D]:i==="channelsLast"&&(U=[l,F,S,D,P]),{batchSize:l,dataFormat:i,inDepth:p,inHeight:u,inWidth:d,inChannels:h,outDepth:F,outHeight:S,outWidth:D,outChannels:P,padInfo:R,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:c,filterHeight:m,filterWidth:f,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:v,dilationHeight:I,dilationWidth:N,inShape:e,outShape:U,filterShape:t}}function rR(e,t,n,r,a){r==null&&(r=Fg(e,t,n));let s=e[0],i=e[1],o=fp((s-t+2*r)/n+1,a),l=fp((i-t+2*r)/n+1,a);return[o,l]}function aR(e,t,n,r,a,s){a==null&&(a=Fg(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=fp((e[o]-t[o]+2*a)/r[o]+1,s));return i}function Fg(e,t,n,r=1){let a=Xo(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function mp(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function ff(e){return typeof e=="number"?[e,e,e]:e}function Xo(e,t){return t<=1?e:e+(e-1)*(t-1)}function sR(e,t,n,r,a,s,i,o,l){let p,u,d;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=rR([t,n],s,r,e,o);u=h[0],d=h[1]}else if(e==="same"){u=Math.ceil(t/r),d=Math.ceil(n/a);let h=Math.max(0,(u-1)*r+s-t),c=Math.max(0,(d-1)*a+i-n),m=Math.floor(h/2),f=h-m,g=Math.floor(c/2),y=c-g;p={top:m,bottom:f,left:g,right:y,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else if(typeof e=="object"){let h=l==="channelsLast"?e[1][0]:e[2][0],c=l==="channelsLast"?e[1][1]:e[2][1],m=l==="channelsLast"?e[2][0]:e[3][0],f=l==="channelsLast"?e[2][1]:e[3][1];p={top:h,bottom:c,left:m,right:f,type:h===0&&c===0&&m===0&&f===0?"VALID":"EXPLICIT"},u=fp((t-s+h+c)/r+1,o),d=fp((n-i+m+f)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outHeight:u,outWidth:d}}function iR(e,t,n,r,a,s,i,o,l,p,u){let d,h,c,m;if(e==="valid"&&(e=0),typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let f=aR([t,n,r,1],[o,l,p],1,[a,s,i],e,u);h=f[0],c=f[1],m=f[2]}else if(e==="same"){h=Math.ceil(t/a),c=Math.ceil(n/s),m=Math.ceil(r/i);let f=(h-1)*a+o-t,g=(c-1)*s+l-n,y=(m-1)*i+p-r,b=Math.floor(f/2),x=f-b,v=Math.floor(g/2),I=g-v,N=Math.floor(y/2),C=y-N;d={top:v,bottom:I,left:N,right:C,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:h,outHeight:c,outWidth:m}}function fp(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ha(e){let[t,n,r]=mp(e);return t===1&&n===1&&r===1}function Qr(e,t){return Ha(e)||Ha(t)}function js(e){return mp(e).every(t=>t>0)}function w1(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Tn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")$(Jo(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(a=>{$(Jo(a),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${a}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function oR(e,t){let n={x:_(e,"x","reshape","string_or_numeric")},r={shape:t};return O.runKernel(eu,n,r)}var B=L({reshape_:oR});function lR(e,t,n,r,a){let s=_(e,"x","avgPool","float32"),i=1;$(Qr(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Tn("avgPool",r,a);let p={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=O.runKernel(ci,p,u);return d=ie(d,s.dtype),l?B(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var ya=L({avgPool_:lR});function uR(e,t,n,r,a,s="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),$(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),Tn("avgPool3d",r,a);let p={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=O.runKernel(wl,p,u);return d=ie(d,o.dtype),l?B(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Rg=L({avgPool3d_:uR});function pR(e,t=0){$(e.length>=1,()=>"Pass at least one tensor to concat");let n=hp(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),n.length===1)return jr(n[0]);let r=n,a={axis:t};return O.runKernel(Nl,r,a)}var dt=L({concat_:pR});function dR(e,t,n=!1,r=!1){let a=_(e,"a","matMul"),s=_(t,"b","matMul");[a,s]=_t(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return O.runKernel(mi,i,o)}var Be=L({matMul_:dR});function hR(e){let t={x:_(e,"x","sigmoid","float32")};return O.runKernel(fo,t)}var yr=L({sigmoid_:hR});function cR(e,t,n){let r=_(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return O.runKernel(ou,a,s)}var Ze=L({slice_:cR});function mR(e){let t={x:_(e,"x","tanh","float32")};return O.runKernel(Io,t)}var ja=L({tanh_:mR});function fR(e,t,n,r,a,s){let i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),l=_(n,"lstmBias","basicLSTMCell"),p=_(r,"data","basicLSTMCell"),u=_(a,"c","basicLSTMCell"),d=_(s,"h","basicLSTMCell"),h=dt([p,d],1),c=Be(h,o),m=J(c,l),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=Ze(m,[0,0],y),x=Ze(m,[0,g],y),v=Ze(m,[0,g*2],y),I=Ze(m,[0,g*3],y),N=J(z(yr(b),ja(x)),z(u,yr(J(i,v)))),C=z(ja(N),yr(I));return[N,C]}var k1=L({basicLSTMCell_:fR});function gR(e,t,n){let r=_(e,"x","batchToSpaceND"),a=t.reduce((o,l)=>o*l);$(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),$(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),$(r.shape[0]%a===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:r},i={blockShape:t,crops:n};return O.runKernel(kl,s,i)}var rd=L({batchToSpaceND_:gR});function yR(e){let t;return e.rank===0||e.rank===1?t=B(e,[1,1,1,e.size]):e.rank===2?t=B(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function bR(e,t,n,r,a,s){s==null&&(s=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let u;r!=null&&(u=_(r,"offset","batchNorm")),$(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(p==null||o.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:yR(i),scale:p,offset:u,mean:o,variance:l},h={varianceEpsilon:s},c=O.runKernel(Fi,d,h);return B(c,i.shape)}var So=L({batchNorm_:bR});function xR(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let u;return r!=null&&(u=_(r,"offset","batchNorm")),$(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&$(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${p.rank}.`),u!=null&&$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),So(i,o,l,u,p,s)}var Dg=L({batchNorm2d_:xR});function vR(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let u;return r!=null&&(u=_(r,"offset","batchNorm")),$(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&$(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${p.rank}.`),u!=null&&$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),So(i,o,l,u,p,s)}var Mg=L({batchNorm3d_:vR});function wR(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let u;return r!=null&&(u=_(r,"offset","batchNorm")),$(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&$(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${p.rank}.`),u!=null&&$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),So(i,o,l,u,p,s)}var Og=L({batchNorm4d_:wR});function kR(e,t,n){let r=_(e,"x","bincount"),a=_(t,"weights","bincount");$(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(a.size===r.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`);let s={x:r,weights:a},i={size:n};return O.runKernel(Il,s,i)}var Lg=L({bincount_:kR});function IR(e,t){let n=_(e,"x","bitwiseAnd"),r=_(t,"y","bitwiseAnd");if(!fa(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if(n.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);let a={a:n,b:r};return O.runKernel(Sl,a)}var I1=L({bitwiseAnd_:IR});function SR(e,t){let n=_(e,"s0","broadcastArgs","int32"),r=_(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return O.runKernel(Fp,a)}var S1=L({broadcastArgs_:SR});function NR(e,t){let n=_(e,"broadcastTo","x"),r=n.shape;if(Xn(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=B(n,l)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return jr(n);let i={x:n},o={reps:s};return O.runKernel(ss,i,o)}var Rs=L({broadcastTo_:NR});function TR(e){let t={x:_(e,"x","ceil","float32")};return O.runKernel(gi,t)}var zg=L({ceil_:TR});function Gn(e,t,n){Xn(e),n=n||Ep(t);let r={shape:e,value:t,dtype:n};return O.runKernel(Op,{},r)}function _R(e,t,n){let r=_(e,"x","clipByValue");if($(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Gn(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return O.runKernel(as,a,s)}var cn=L({clipByValue_:_R});function CR(e){return dt(e,0)}var Pg=L({concat1d_:CR});function ER(e,t){return dt(e,t)}var Bg=L({concat2d_:ER});function $R(e,t){return dt(e,t)}var Wg=L({concat3d_:$R});function AR(e,t){return dt(e,t)}var Vg=L({concat4d_:AR});function FR(e,t,n,r,a="NHWC",s=[1,1],i){let o=_(e,"x","conv2d","float32"),l=_(t,"filter","conv2d","float32"),p=o,u=!1;o.rank===3&&(u=!0,p=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(p.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`),$(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Tn("conv2d",r,i);let d=a==="NHWC"?p.shape[3]:p.shape[1];$(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),$(Qr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(js(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),$(js(n),()=>"Error in conv2D: Strides should be larger than 0.");let h={x:p,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=O.runKernel(yi,h,c);return u?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var kn=L({conv2d_:FR});function RR(e,t,n,r,a="NWC",s=1,i){let o=_(e,"x","conv1d"),l=_(t,"filter","conv1d"),p=o,u=!1;o.rank===2&&(u=!0,p=B(o,[1,o.shape[0],o.shape[1]])),$(p.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${p.rank}.`),$(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Tn("conv1d",r,i),$(p.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${p.shape[2]}) must match input depth for filter ${l.shape[1]}.`),$(Qr(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),$(js(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),$(js(n),()=>"Error in conv1D: Stride should be larger than 0."),$(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let d=B(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=B(p,[p.shape[0],1,p.shape[1],p.shape[2]]),c=kn(h,d,[1,n],r,"NHWC",[1,s],i);return u?B(c,[c.shape[2],c.shape[3]]):B(c,[c.shape[0],c.shape[2],c.shape[3]])}var kc=L({conv1d_:RR});function DR(e,t,n,r,a,s="NHWC",i){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,p=!1;t.rank===3&&(p=!0,l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),$(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),$(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=s==="NHWC"?o[3]:o[1],d=s==="NHWC"?l.shape[3]:l.shape[1];$(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),$(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),Tn("conv2dDerInput",a,i);let h={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},m=O.runKernel(bi,h,c);return p?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Ug=L({conv2DBackpropInput_:DR});function MR(e,t,n,r,a,s){let i=_(e,"x","conv2dTranspose"),o=_(t,"filter","conv2dTranspose");return Ug(n,i,o,r,a,"NHWC",s)}var Ic=L({conv2dTranspose_:MR});function OR(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),l=i,p=!1;i.rank===4&&(p=!0,l=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),$(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),$(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),$(Qr(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),$(js(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),$(js(n),()=>"Error in conv3D: Strides should be larger than 0.");let u={x:l,filter:o},d={strides:n,pad:r,dataFormat:a,dilations:s},h=O.runKernel(xi,u,d);return p?B(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Gg=L({conv3d_:OR});function LR(e,t,n,r,a){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=B(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],p=i.shape[4];$(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),$(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),$(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),$(p===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`);let u={dy:i,filter:n},d={pad:a,strides:r,inputShape:s},h=O.runKernel(_l,u,d);return o?B(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var N1=L({conv3DBackpropInput_:LR});function zR(e,t,n,r,a){let s=_(e,"x","conv3dTranspose"),i=_(t,"filter","conv3dTranspose");return N1(n,s,i,r,a)}var Hg=L({conv3dTranspose_:zR});function PR(e){let t={x:_(e,"x","cos","float32")};return O.runKernel(vi,t)}var ad=L({cos_:PR});function BR(e){let t={x:_(e,"x","cosh","float32")};return O.runKernel(wi,t)}var Sc=L({cosh_:BR});function WR(e,t=0,n=!1,r=!1){let a={x:_(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(Cl,a,s)}var gp=L({cumprod_:WR});function VR(e,t=0,n=!1,r=!1){let a={x:_(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(ki,a,s)}var Nc=L({cumsum_:VR});function UR(e,t,n,r=!1){let a=_(e,"x","denseBincount"),s=_(t,"weights","denseBincount");$(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),$(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(s.size===a.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:n,binaryOutput:r};return O.runKernel(Dp,i,o)}var $h=L({denseBincount_:UR});function GR(e,t,n="NHWC"){let r=_(e,"x","depthToSpace","float32"),a=n==="NHWC"?r.shape[1]:r.shape[2],s=n==="NHWC"?r.shape[2]:r.shape[3],i=n==="NHWC"?r.shape[3]:r.shape[1];$(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),$(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${r.shape}`),$(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),$(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:n};return O.runKernel($l,o,l)}var jg=L({depthToSpace_:GR});function HR(e,t,n,r,a="NHWC",s=[1,1],i){let o=_(e,"x","depthwiseConv2d","float32"),l=_(t,"filter","depthwiseConv2d","float32"),p=o,u=!1;o.rank===3&&(u=!0,p=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(p.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),$(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let d=a==="NHWC"?p.shape[3]:p.shape[1];$(d===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`),Tn("depthwiseConv2d",r,i);let h={x:p,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=O.runKernel(Ii,h,c);return u?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var No=L({depthwiseConv2d_:HR});function jR(e){let t={x:_(e,"x","diag")};return O.runKernel(Mp,t)}var T1=L({diag_:jR});function qR(e,t,n,r,a=[1,1],s="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");$(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),$(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,p=!1;i.rank===3&&(l=B(i,[1,i.shape[0],i.shape[1],i.shape[2]]),p=!0),$(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let u={x:l,filter:o},d={strides:n,pad:r,dilations:a},h=O.runKernel(Si,u,d);return p?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var qg=L({dilation2d_:qR}),bu={};De(bu,{assertAndGetBroadcastShape:()=>ht,getBroadcastDims:()=>_1,getReductionAxes:()=>zt});function _1(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&i===1&&r.unshift(s)}return r}function zt(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(a==null||a===1&&i>1)&&n.unshift(s)}return n}function ht(e,t){let n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];s==null&&(s=1);let i=t[t.length-a-1];if(i==null&&(i=1),s===1)r[n-a-1]=i;else if(i===1)r[n-a-1]=s;else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else r[n-a-1]=s}return r}function KR(e,t){let n=_(e,"a","equal","string_or_numeric"),r=_(t,"b","equal","string_or_numeric");[n,r]=_t(n,r),ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Fl,a)}var Hn=L({equal_:KR});function XR(e,t,n){let r=_(t,"a","where"),a=_(n,"b","where"),s=_(e,"condition","where","bool"),i=ht(ht(s.shape,r.shape),a.shape),o=Rs(s,i),l=Rs(r,i),p=Rs(a,i),u={condition:o,t:l,e:p};return O.runKernel(iu,u)}var tn=L({where_:XR});function ZR(e){let t={x:_(e,"x","zerosLike")};return O.runKernel(gu,t)}var Je=L({zerosLike_:ZR});function JR(e,t){let n=_(e,"a","div"),r=_(t,"b","div");[n,r]=_t(n,r);let a=ye(n,r),s=Je(a),i=Hn(r,s);return tn(i,s,a)}var Kg=L({divNoNan_:JR});function YR(e,t){let n=_(e,"t1","dot"),r=_(t,"t2","dot");$((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=n.rank===1?n.size:n.shape[1],s=r.rank===1?r.size:r.shape[0];if($(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),n.rank===1&&r.rank===1){let i=B(n,[1,-1]),o=B(r,[-1,1]),l=Be(i,o);return B(l,[])}else if(n.rank===1&&r.rank===2){let i=B(n,[1,-1]),o=B(r,[r.shape[0],r.shape[1]]),l=Be(i,o);return B(l,[l.size])}else if(n.rank===2&&r.rank===1){let i=B(r,[-1,1]),o=Be(n,i);return B(o,[o.size])}else{let i=B(r,[r.shape[0],r.shape[1]]);return Be(n,i)}}var Xg=L({dot_:YR});function QR(e,...t){let n=t.map((a,s)=>_(a,`tensors${s}`,"einsum")),r={equation:e};return O.runKernel(uc,n,r)}var _s=L({einsum_:QR});function eD(e){let t={x:_(e,"x","elu","float32")};return O.runKernel(Ti,t)}var xu=L({elu_:eD});function tD(e,t){let n=_(e,"x","ensureShape","string_or_numeric");if(!A0(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}var C1=L({ensureShape_:tD});function nD(e){let t=_(e,"x","erf");$(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ie(t,"float32"));let n={x:t};return O.runKernel(_i,n)}var Tc=L({erf_:nD});function Zg(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function E1(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)n.indexOf(o)===-1?a.push(e[s++]):a.push(t[i++]);return a}function $1(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&n.push(e[s]);let a=t.map(s=>e[s]);return[n,a]}function qs(e,t){let n=t.map(r=>1);return E1(e,n,t)}function rD(e,t,n){$(Zg(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function A1(e,t){if(Zg(e,t))return null;let n=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&n.push(r);return e.forEach(r=>n.push(r)),n}function Jg(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function aD(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function sD(e,t=null,n=!1){let r={x:_(e,"x","max")},a={reductionIndices:t,keepDims:n};return O.runKernel(Vi,r,a)}var ir=L({max_:sD});function iD(e,t=null,n=!1){let r={x:_(e,"x","min")},a={axis:t,keepDims:n};return O.runKernel(ji,r,a)}var tl=L({min_:iD});function oD(e,t){let n=_(e,"base","pow"),r=_(t,"exp","pow");[n,r]=_t(n,r);let a={a:n,b:r};return O.runKernel(Qi,a)}var Zr=L({pow_:oD});function Se(e,t){if((Yt(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Yt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return os(e,[],[],t)}function lD(e){let t={x:_(e,"x","sqrt","float32")};return O.runKernel(yo,t)}var nn=L({sqrt_:lD});function uD(e){let t=_(e,"x","square"),n={};return O.runKernel("Square",{x:t},n)}var pt=L({square_:uD});function pD(e,t=null,n=!1){let r=_(e,"x","sum");r.dtype==="bool"&&(r=ie(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(bo,a,s)}var xe=L({sum_:pD});function dD(e,t="euclidean",n=null,r=!1){e=_(e,"x","norm");let a=F1(e,t,n),s=a.shape;if(r){let i=vr(n,e.shape);s=qs(a.shape,i)}return B(a,s)}function F1(e,t,n=null){if(e.rank===0)return Dt(e);if(e.rank!==1&&n===null)return F1(B(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return xe(Dt(e),n);if(t===1/0)return ir(Dt(e),n);if(t===-1/0)return tl(Dt(e),n);if(t==="euclidean"||t===2)return nn(xe(Zr(Dt(e),Se(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return ir(xe(Dt(e),n[0]),n[1]-1);if(t===1/0)return ir(xe(Dt(e),n[1]),n[0]);if(t===-1/0)return tl(xe(Dt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return nn(xe(pt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var vu=L({norm_:dD});function hD(e,t=null,n=!1){return vu(e,"euclidean",t,n)}var Yg=L({euclideanNorm_:hD});function cD(e){let t={x:_(e,"x","exp")};return O.runKernel(Ci,t)}var mn=L({exp_:cD});function mD(e,t=0){let n=_(e,"x","expandDims","string_or_numeric");$(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},a={dim:t};return O.runKernel(Rl,r,a)}var Qt=L({expandDims_:mD});function fD(e){let t={x:_(e,"x","expm1")};return O.runKernel(Ei,t)}var Qg=L({expm1_:fD});function gD(e,t){let n=_(e,"x","tile","string_or_numeric");$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},a={reps:t};return O.runKernel(ss,r,a)}var Un=L({tile_:gD});function yD(e,t,n,r="float32"){t==null&&(t=e);let a=Ve([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=B(a.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return Un(Qt(i,0),[n[0],1,1]);if(n.length===2)return Un(Qt(Qt(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return Un(Qt(Qt(Qt(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var _c=L({eye_:yD});function bD(e){let t={x:_(e,"x","floor","float32")};return O.runKernel($i,t)}var wu=L({floor_:bD});function xD(e,t,n=0,r=0){let a=_(e,"x","gather"),s=_(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return O.runKernel(Ml,i,o)}var ku=L({gather_:xD});function vD(e,t){let n=_(e,"a","greater","string_or_numeric"),r=_(t,"b","greater","string_or_numeric");[n,r]=_t(n,r),ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ll,a)}var _n=L({greater_:vD});function wD(e,t){let n=_(e,"a","greaterEqual","string_or_numeric"),r=_(t,"b","greaterEqual","string_or_numeric");[n,r]=_t(n,r),ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ri,a)}var ba=L({greaterEqual_:wD});function kD(e){let t={input:_(e,"input","imag")};return O.runKernel(hc,t)}var sd=L({imag_:kD});function ID(e){let t={x:_(e,"x","isFinite")};return O.runKernel(Mi,t)}var ey=L({isFinite_:ID});function SD(e){let t={x:_(e,"x","isInf")};return O.runKernel(Oi,t)}var ty=L({isInf_:SD});function ND(e){let t={x:_(e,"x","isNaN")};return O.runKernel(Li,t)}var ny=L({isNaN_:ND});function TD(e,t=.2){let n={x:_(e,"x","leakyRelu")},r={alpha:t};return O.runKernel(zi,n,r)}var id=L({leakyRelu_:TD});function _D(e,t){let n=_(e,"a","less","string_or_numeric"),r=_(t,"b","less","string_or_numeric");[n,r]=_t(n,r),ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(zl,a)}var nl=L({less_:_D});function CD(e,t){let n=_(e,"a","lessEqual","string_or_numeric"),r=_(t,"b","lessEqual","string_or_numeric");[n,r]=_t(n,r),ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Pl,a)}var ls=L({lessEqual_:CD});function R1(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return O.runKernel(Bl,{},r)}function ED(e,t=5,n=1,r=1,a=.5){let s=_(e,"x","localResponseNormalization");$(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),$(Jo(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=B(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},p={depthRadius:t,bias:n,alpha:r,beta:a},u=O.runKernel(Wi,l,p);return o?B(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var ry=L({localResponseNormalization_:ED});function $D(e){let t={x:_(e,"x","log","float32")};return O.runKernel(Pi,t)}var jn=L({log_:$D});function AD(e){let t={x:_(e,"x","log1p")};return O.runKernel(Bi,t)}var od=L({log1p_:AD});function FD(e){return $(Wa(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=_(t,"x","tf.grad","string_or_numeric"),a=n!=null?_(n,"dy","tf.grad"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(r),[r],a);return a!=null&&Nn(s.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Cc(i),i[0]})}}function RD(e){return $(Wa(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{$(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=hp(t,"args","tf.grads","string_or_numeric"),a=n!=null?_(n,"dy","tf.grads"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(...r),r,a);return a!=null&&Nn(s.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Cc(i),i})}}function DD(e){return $(Wa(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{$(t instanceof Ge,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),$(n==null||n instanceof Ge,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=O.gradients(()=>e(t),[t],n);return Cc(r),{grad:r[0],value:a}}}function MD(e){return $(Wa(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{$(Array.isArray(t)&&t.every(a=>a instanceof Ge),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),$(n==null||n instanceof Ge,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=O.gradients(()=>e(...t),t,n);return n!=null&&Nn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Cc(r.grads),r}}function D1(e,t){$(Wa(e),()=>"The f passed in variableGrads(f) must be a function"),$(t==null||Array.isArray(t)&&t.every(p=>p instanceof Ws),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let p in O.registeredVariables)t.push(O.registeredVariables[p])}let r=n?t.filter(p=>!p.trainable):null,a=t.length;t=t.filter(p=>p.trainable),$(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=O.gradients(e,t,null,s);$(o.some(p=>p!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((p,u)=>{o[u]!=null&&(l[p.name]=o[u])}),r!=null&&r.forEach(p=>l[p.name]=null),{value:i,grads:l}}function Jr(e){return O.customGrad(e)}function Cc(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function OD(e){let t={x:_(e,"x","neg")};return O.runKernel(ql,t)}var bt=L({neg_:OD});function LD(e){let t={x:_(e,"x","softplus")};return O.runKernel(go,t)}var To=L({softplus_:LD});function zD(e){let t=_(e,"x","logSigmoid");return Jr(n=>({value:bt(To(bt(n))),gradFunc:r=>z(r,yr(bt(n)))}))(t)}var ay=L({logSigmoid_:zD});function PD(e,t){let n=_(e,"a","sub"),r=_(t,"b","sub");[n,r]=_t(n,r);let a={a:n,b:r};return O.runKernel(wo,a)}var fe=L({sub_:PD});function BD(e,t=-1){let n=_(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Jr((r,a)=>{let s=ir(r,t,!0),i=fe(r,s),o=fe(ie(i,"float32"),jn(xe(mn(i),t,!0)));return a([o]),{value:o,gradFunc:(l,p)=>{let[u]=p,d=!0,h=mn(u);return fe(l,z(xe(l,t,d),h))}}})(n)}var Ec=L({logSoftmax_:BD});function WD(e,t=null,n=!1){let r=_(e,"x","logSumExp"),a=vr(t,r.shape),s=ir(r,a,!0),i=fe(r,s),o=mn(i),l=xe(o,a),p=jn(l),u=J(B(s,p.shape),p);if(n){let d=qs(u.shape,a);return B(u,d)}return u}var ld=L({logSumExp_:WD});function VD(e,t){let n=_(e,"a","logicalAnd","bool"),r=_(t,"b","logicalAnd","bool");ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Wl,a)}var br=L({logicalAnd_:VD});function UD(e){let t={x:_(e,"x","logicalNot","bool")};return O.runKernel(Vl,t)}var ud=L({logicalNot_:UD});function GD(e,t){let n=_(e,"a","logicalOr","bool"),r=_(t,"b","logicalOr","bool");ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ul,a)}var $c=L({logicalOr_:GD});function HD(e,t){let n=_(e,"a","logicalXor","bool"),r=_(t,"b","logicalXor","bool");return ht(n.shape,r.shape),br($c(e,t),ud(br(e,t)))}var sy=L({logicalXor_:HD}),Yd=2147483648;function jD(e,t,n="left"){let r=_(e,"sortedSequence","searchSorted"),a=_(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=B(r,[-1,s]),l=B(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ot(l.shape)>=Yd)throw new Error(`values tensor size must less than ${Yd}`);if(o.shape[1]>=Yd)throw new Error(`trailing dim_size must less than ${Yd} for int32 output type, was ${o.shape[1]}`);let p={sortedSequence:o,values:l},u={side:n};return O.runKernel(su,p,u)}var Ac=L({searchSorted_:jD});function M1(e,t){return Ac(e,t,"left")}function qD(e,t,n,r,a){let s=_(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),$(Qr(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),Tn("maxPool",r,a);let p={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=O.runKernel(Gi,p,u);return l?B(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Zt=L({maxPool_:qD});function KD(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Tn("maxPool3d",r,a);let p={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=O.runKernel(Hl,p,u);return l?B(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var iy=L({maxPool3d_:KD});function XD(e,t,n,r,a=!1){let s={x:_(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=O.runKernel(Pp,s,i);return{result:o[0],indexes:o[1]}}var O1=L({maxPoolWithArgmax_:XD});function ZD(e,t){let n=_(e,"a","maximum"),r=_(t,"b","maximum");[n,r]=_t(n,r),n.dtype==="bool"&&(n=ie(n,"int32"),r=ie(r,"int32")),ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ui,a)}var ea=L({maximum_:ZD});function JD(e,t=null,n=!1){let r={x:_(e,"x","mean")},a={axis:t,keepDims:n};return O.runKernel(Hi,r,a)}var St=L({mean_:JD});function Nt(e,t="float32"){if(Xn(e),t==="complex64"){let r=Nt(e,"float32"),a=Nt(e,"float32");return ca(r,a)}let n=nc(ot(e),t);return O.makeTensor(n,e,t)}function $n(e,t="float32"){if(Xn(e),t==="complex64"){let r=$n(e,"float32"),a=Nt(e,"float32");return ca(r,a)}let n=cg(ot(e),t);return O.makeTensor(n,e,t)}function L1(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=_(e,"x","meshgrid",e instanceof Ge?e.dtype:"float32");if(t===void 0)return[r];let a=_(t,"y","meshgrid",t instanceof Ge?t.dtype:"float32"),s=ot(r.shape),i=ot(a.shape);return n==="xy"?(r=B(r,[1,-1]),a=B(a,[-1,1]),[Be($n([i,1],r.dtype),r),Be(a,$n([1,s],a.dtype))]):(r=B(r,[-1,1]),a=B(a,[1,-1]),[Be(r,$n([1,i],r.dtype)),Be($n([s,1],a.dtype),a)])}function YD(e,t){let n=_(e,"a","minimum"),r=_(t,"b","minimum");[n,r]=_t(n,r),n.dtype==="bool"&&(n=ie(n,"int32"),r=ie(r,"int32")),ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(qi,a)}var qa=L({minimum_:YD});function QD(e,t,n){$(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=_(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a=n==="reflect"?1:0;for(let o=0;o<r.rank;o++)$(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:n},i={x:r};return O.runKernel(Ki,i,s)}var oy=L({mirrorPad_:QD});function eM(e,t){let n=_(e,"a","mod"),r=_(t,"b","mod");[n,r]=_t(n,r);let a={a:n,b:r};return O.runKernel(Xi,a)}var ly=L({mod_:eM});function tM(e,t=null,n=!1){e=_(e,"x","moments");let r=vr(t,e.shape),a=St(e,r,n),s=a.shape;n||(s=qs(a.shape,r));let i=pt(fe(ie(e,"float32"),B(a,s))),o=St(i,r,n);return{mean:a,variance:o}}var pd=L({moments_:tM});function nM(e,t,n,r){let a=_(t,"data","multiRNNCell"),s=hp(n,"c","multiRNNCell"),i=hp(r,"h","multiRNNCell"),o=a,l=[];for(let d=0;d<e.length;d++){let h=e[d](o,s[d],i[d]);l.push(h[0]),l.push(h[1]),o=h[1]}let p=[],u=[];for(let d=0;d<l.length;d+=2)p.push(l[d]),u.push(l[d+1]);return[p,u]}var z1=L({multiRNNCell_:nM});function rM(e,t,n,r=!1){let a=_(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:i===1?B(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},p=O.runKernel(jl,o,l);return i===1?B(p,[p.size]):p}var P1=L({multinomial_:rM});function aM(e,t){let n=_(e,"a","notEqual","string_or_numeric"),r=_(t,"b","notEqual","string_or_numeric");[n,r]=_t(n,r),ht(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Kl,a)}var Ks=L({notEqual_:aM});function sM(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:_(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return O.runKernel(Ji,s,i)}var rl=L({oneHot_:sM});function iM(e){let t={x:_(e,"x","onesLike")};return O.runKernel(Yl,t)}var qn=L({onesLike_:iM});function oM(e,t){let n=_(e,"v1","outerProduct"),r=_(t,"v2","outerProduct");$(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let a=B(n,[-1,1]),s=B(r,[1,-1]);return Be(a,s)}var B1=L({outerProduct_:oM});function lM(e,t,n=0){let r=_(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return O.runKernel(Yi,s,a)}var Dr=L({pad_:lM});function uM(e,t,n=0){return $(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Dr(e,[t],n)}var W1=L({pad1d_:uM});function pM(e,t,n=0){return $(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dr(e,t,n)}var V1=L({pad2d_:pM});function dM(e,t,n=0){return $(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dr(e,t,n)}var U1=L({pad3d_:dM});function hM(e,t,n=0){return $(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dr(e,t,n)}var G1=L({pad4d_:hM});function cM(e,t,n){let r=_(e,"x","spaceToBatchND");$(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),$(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),$(r.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+n[l-1][0]+n[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:r},s={blockShape:t,paddings:n};return O.runKernel(lu,a,s)}var dd=L({spaceToBatchND_:cM});function mM(e,t,n,r,a,s,i){a==null&&(a=[1,1]),s==null&&(s=1),r===0&&(r="valid");let o=_(e,"x","maxPool"),l=o,p=!1;o.rank===3&&(p=!0,l=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(Qr(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let u=x1(l.shape,t,s,a,r),d=[u.dilationHeight,u.dilationWidth],h;r==="same"?h=gM([u.filterHeight,u.filterWidth],d):h=[[0,0],[0,0]];let c=d[0]===1&&d[1]===1,[m,f]=fM([u.inHeight,u.inWidth],d,h),g=c?r:"valid",y=c?l:dd(l,d,m),b=(n==="avg"?()=>ya(y,t,s,g,i):()=>Zt(y,t,s,g,i))(),x=c?b:rd(b,d,f);return p?B(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function fM(e,t,n){let r=n.map(u=>u[0]),a=n.map(u=>u[1]),s=e.concat(r,a),i=t.map((u,d)=>(u-s[d]%u)%u),o=a.map((u,d)=>u+i[d]),l=t.map((u,d)=>[r[d],o[d]]),p=t.map((u,d)=>[0,i[d]]);return[l,p]}function gM(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),r=n.map(s=>Math.floor(s/2)),a=n.map((s,i)=>s-r[i]);return n.map((s,i)=>[r[i],a[i]])}var uy=L({pool_:mM});function yM(e,t){let n=_(e,"x","prelu"),r=_(t,"alpha","prelu"),a={x:n,alpha:r};return O.runKernel(eo,a)}var hd=L({prelu_:yM});function bM(e,t=null,n=!1){let r=_(e,"x","prod");r.dtype==="bool"&&(r=ie(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(to,a,s)}var py=L({prod_:bM});function xM(e,t,n,r){let a=e.map((u,d)=>_(u,`tensors${d}`,"raggedGather","int32")),s=_(t,"paramsDenseValues","raggedGather"),i=_(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},l={outputRaggedRank:r},p=O.runKernel(cc,o,l);return{outputNestedSplits:p.slice(0,p.length-1),outputDenseValues:p[p.length-1]}}var H1=L({raggedGather_:xM});function vM(e,t,n){let r=_(e,"starts","raggedRange"),a=_(t,"limits","raggedRange",r.dtype),s=_(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:a,deltas:s},o=O.runKernel(mc,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var j1=L({raggedRange_:vM});function wM(e,t,n,r,a){let s=_(e,"shape","raggedTensorToTensor","int32"),i=_(t,"values","raggedTensorToTensor"),o=_(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((d,h)=>_(d,`tensors${h}`,"raggedTensorToTensor","int32")),p={shape:s,values:i,defaultValue:o,rowPartitionTensors:l},u={rowPartitionTypes:a};return O.runKernel(fc,p,u)}var q1=L({raggedTensorToTensor_:wM});function kM(e,t,n){Xn(e);let r=ot(e),a=null;if(n==null||n==="float32")a=new Float32Array(r);else if(n==="int32")a=new Int32Array(r);else if(n==="bool")a=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let s=0;s<r;s++)a[s]=t();return O.makeTensor(a,e,n)}var K1=L({rand_:kM}),dy=ns(ec()),X1={};De(X1,{TEST_EPSILON_FLOAT16:()=>Z1,createVideoElement:()=>$M,encodeStrings:()=>J1,expectArrayBuffersEqual:()=>EM,expectArraysClose:()=>SM,expectArraysEqual:()=>TM,expectNumbersClose:()=>_M,expectPromiseToFail:()=>NM,expectValuesInRange:()=>CM,play:()=>AM,testEpsilon:()=>hy});var IM=.001,Z1=.1;function SM(e,t,n){return n==null&&(n=hy()),gf(e,t,(r,a)=>cy(r,a,n))}function hy(){return O.backend.floatPrecision()===32?IM:Z1}function gf(e,t,n){let r=!0;if((Yt(e)||Yt(t))&&(r=!1),Yt(e)&&Yt(t)&&(r=!0),r){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Xr(e),o=Xr(t);if(!fa(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let a=Yt(e)?e:Va(e),s=Yt(t)?t:Va(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=a[i],l=s[i];if(!n(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${a}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function NM(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function TM(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Da(e)||Da(e[0])||Da(t)||Da(t[0])?gf(e,n,(r,a)=>r==a):gf(e,t,(r,a)=>cy(r,a,0))}function _M(e,t,n){if(n==null&&(n=hy()),!cy(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function cy(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function CM(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function EM(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function J1(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?J1(n):e[t]=Qp(n)}return e}function $M(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(n=>{t.addEventListener("loadeddata",r=>n(t)),t.load()})}async function AM(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var my=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=a||Math.random();this.random=dy.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,a,s;do r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},FM=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=dy.alea(a.toString()),this.randn=new my(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},RM=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=dy.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function DM(e,t,n=1,r="float32",a){if(Xn(e),n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let s=new FM(t,n,r,a),i=Ve(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Y1=L({randomGamma_:DM});function MM(e,t=0,n=1,r,a){if(Xn(e),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let s=new my(t,n,r,!1,a),i=Ve(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Fc=L({randomNormal_:MM});function OM(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Fc(e,0,1,t,n)}var Q1=L({randomStandardNormal_:OM});function LM(e,t=0,n=1,r="float32",a){Xn(e);let s=Ve(e,r),i=new RM(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var us=L({randomUniform_:LM});function zM(e,t,n,r){return us(e,t,n,"int32",r)}var ek=L({randomUniformInt_:zM});function Xs(e,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return O.runKernel(Bp,{},a)}function PM(e){let t={input:_(e,"input","real")};return O.runKernel(gc,t)}var al=L({real_:PM});function BM(e){let t={x:_(e,"x","reciprocal")};return O.runKernel(no,t)}var fy=L({reciprocal_:BM});function WM(e){let t={x:_(e,"x","relu")};return O.runKernel(ro,t)}var it=L({relu_:WM});function VM(e){let t={x:_(e,"x","relu6")};return O.runKernel(io,t)}var Rc=L({relu6_:VM});function UM(e,t){let n={x:_(e,"x","reverse")},r={dims:t};return O.runKernel(oo,n,r)}var ur=L({reverse_:UM});function GM(e){let t=_(e,"x","reverse");return $(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ur(t,0)}var tk=L({reverse1d_:GM});function HM(e,t){let n=_(e,"x","reverse");return $(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ur(n,t)}var nk=L({reverse2d_:HM});function jM(e,t){let n=_(e,"x","reverse");return $(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ur(n,t)}var rk=L({reverse3d_:jM});function qM(e,t){let n=_(e,"x","reverse");return $(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ur(n,t)}var ak=L({reverse4d_:qM});function KM(e){let t={x:_(e,"x","round")};return O.runKernel(lo,t)}var Dc=L({round_:KM});function XM(e){let t={x:_(e,"x","rsqrt","float32")};return O.runKernel(uo,t)}var Mc=L({rsqrt_:XM});function ZM(e){let t={x:_(e,"x","selu")};return O.runKernel(po,t)}var Oc=L({selu_:ZM});function JM(e,t,n,r,a,s=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),l=_(t,"depthwiseFilter","separableConv2d"),p=_(n,"pointwiseFilter","separableConv2d"),u=o,d=!1;if(o.rank===3&&(d=!0,u=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),$(p.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),$(p.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${p.shape[0]}.`),$(p.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${p.shape[1]}.`);let h=l.shape[2],c=l.shape[3];$(p.shape[2]===h*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*c}, but got ${p.shape[2]}.`);let m=No(u,l,r,a,i,s),f=kn(m,p,1,"valid",i);return d?B(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Iu=L({separableConv2d_:JM});async function YM(e,t){let n=_(e,"x","setdiff1d"),r=_(t,"y","setdiff1d");$(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),$(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),$(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let u=0;u<a.length;u++)i.has(a[u])||o++;let l=new Ot([o],n.dtype),p=new Ot([o],"int32");for(let u=0,d=0;u<a.length;u++)i.has(a[u])||(l.values[d]=a[u],p.values[d]=u,d++);return[l.toTensor(),p.toTensor()]}var sk=YM;function QM(e){let t={x:_(e,"x","sign")};return O.runKernel(mo,t)}var gy=L({sign_:QM});function eO(e){let t={x:_(e,"x","sin","float32")};return O.runKernel(ho,t)}var Lc=L({sin_:eO});function tO(e){let t={x:_(e,"x","sinh")};return O.runKernel(co,t)}var zc=L({sinh_:tO});function nO(e,t,n){let r=_(e,"x","slice1d");return $(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Ze(r,[t],[n])}var cd=L({slice1d_:nO});function rO(e,t,n){let r=_(e,"x","slice2d");return $(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Ze(r,t,n)}var Pc=L({slice2d_:rO});function aO(e,t,n){let r=_(e,"x","slice3d");return $(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Ze(r,t,n)}var Su=L({slice3d_:aO});function sO(e,t,n){let r=_(e,"x","slice4d");return $(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Ze(r,t,n)}var sl=L({slice4d_:sO});function iO(e,t=-1){let n=_(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return O.runKernel(xo,r,a)}var ps=L({softmax_:iO});function oO(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(pc,t)}var md=L({fft_:oO});function lO(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(dc,t)}var il=L({ifft_:lO});function uO(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2){let a=B(e,[n,t]);r=il(a)}else{let a=[n,2*(t-1)],s=B(al(e),[n,t]),i=B(sd(e),[n,t]),o=ur(Ze(s,[0,1],[n,t-2]),1),l=z(ur(Ze(i,[0,1],[n,t-2]),1),Se(-1)),p=dt([s,o],1),u=dt([i,l],1),d=B(ca(p,u),[a[0],a[1]]);r=il(d)}if(r=al(r),e.rank===3&&e.shape[0]!==0){let a=r,s=e.shape[0];r=B(r,[s,r.shape[0]/s,r.shape[1]]),a.dispose()}return r}var Bc=L({irfft_:uO});function pO(e,t,n=0){let r={x:_(e,"x","split")},a={numOrSizeSplits:t,axis:n};return O.runKernel(uu,r,a)}var An=L({split_:pO});function dO(e,t){$(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,a;if(t!=null&&t<n){let m=e.shape.map(g=>0),f=e.shape.map(g=>g);f[e.shape.length-1]=t,a=Ze(e,m,f),n=t}else if(t!=null&&t>n){let m=e.shape.map(f=>f);m[e.shape.length-1]=t-n,a=dt([e,Nt(m)],e.shape.length-1),n=t}else a=e;let s=Je(a),i=B(ca(a,s),[r,n]),o=md(i),l=Math.floor(n/2)+1,p=al(o),u=sd(o),d=An(p,[l,n-l],p.shape.length-1),h=An(u,[l,n-l],u.shape.length-1),c=a.shape.slice();return c[a.shape.length-1]=l,B(ca(d[0],h[0]),c)}var fd=L({rfft_:dO});function hO(e,t){let n=_(e,"a","squaredDifference"),r=_(t,"b","squaredDifference");[n,r]=_t(n,r),ht(n.shape,r.shape);let a={a:n,b:r},s={};return O.runKernel(vo,a,s)}var Wc=L({squaredDifference_:hO});function cO(e,t){let n=_(e,"x","squeeze","string_or_numeric");return B(n,F0(n.shape,t).newShape)}var ds=L({squeeze_:cO});function mO(e,t=0){let n=hp(e,"tensors","stack","string_or_numeric");$(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&$(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,a={axis:t};return O.runKernel(Ql,r,a)}var Lt=L({stack_:mO});function fO(e,t=0){let n={x:_(e,"x","step")},r={alpha:t};return O.runKernel(is,n,r)}var _o=L({step_:fO});function gO(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let p={x:_(e,"x","stridedSlice","string_or_numeric")},u={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return O.runKernel(hu,p,u)}var yy=L({stridedSlice_:gO});function yO(e){let t={x:_(e,"x","tan","float32")};return O.runKernel(ko,t)}var by=L({tan_:yO});function at(e,t){ai(e);let n=Xr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return os(e,null,n,t)}function qr(e,t,n){if(ai(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=Xr(e,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return os(e,t,r,n)}function Vc(e,t,n){if(ai(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=Xr(e,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return os(e,t,r,n)}function Ka(e,t,n){if(ai(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=Xr(e,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return os(e,t,r,n)}function ik(e,t,n){if(ai(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=Xr(e,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return os(e,t,r,n)}function ok(e,t,n){if(ai(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=Xr(e,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,os(e,t,r,n)}var Uc={};De(Uc,{calculateShapes:()=>lk,validateInput:()=>Gc,validateUpdateShape:()=>xy});function xy(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+` update.rank != ${a+e.length-r}`);for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function Gc(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}xy(n,t,e)}function lk(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let d=a;d<s;++d)i*=n[d];let o=a<1?1:a,l=ot(t.shape)/o,p=[...fl(n.slice(0,a)),1],u=ot(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:p,outputSize:u}}function bO(e,t,n){let r=_(e,"tensor","tensorScatterupdate"),a=_(t,"indices","tensorScatterupdate","int32"),s=_(n,"updates","tensorScatterupdate");if(Gc(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);let i={tensor:r,indices:a,updates:s},o={};return O.runKernel(au,i,o)}var uk=L({tensorScatterUpdate_:bO});function xO(e,t=1,n=!0){let r=_(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=O.runKernel(cu,s,i);return{values:o,indices:l}}var vy=L({topk_:xO});function vO(e,t=0,n=1,r,a){if(Xn(e),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new my(t,n,r,!0,a),i=Ve(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Hc=L({truncatedNormal_:vO});function wO(e,t=0){let n=_(e,"x","unique","string_or_numeric");$(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},a={axis:t},[s,i]=O.runKernel(Xp,r,a);return{values:s,indices:i}}var wy=L({unique_:wO});function kO(e,t,n){let r=_(e,"x","unsortedSegmentSum"),a=_(t,"segmentIds","unsortedSegmentSum","int32");$(Jo(n),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:a},i={numSegments:n};return O.runKernel(Zp,s,i)}var jc=L({unsortedSegmentSum_:kO});function IO(e,t=0){let n=_(e,"x","unstack","string_or_numeric");$(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},a={axis:t};return O.runKernel(fu,r,a)}var Et=L({unstack_:IO});function pk(e,t){return Ac(e,t,"right")}function ky(e,t=!0,n,r){return O.makeVariable(e,t,n,r)}function dk(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=Ve(e,"int32"),a=Ve([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=r.indexToLoc(n[s]),o=s*e.length;a.values.set(i,o)}return a.toTensor()}async function SO(e){let t=_(e,"condition","whereAsync","bool"),n=await t.data(),r=dk(t.shape,n);return e!==t&&t.dispose(),r}var Iy=SO;async function NO(e,t,n){let r=_(e,"tensor","boolMask"),a=_(t,"mask","boolMask","bool"),s=n??0,i=a.rank,o=r.shape;$(i>0,()=>"mask cannot be scalar"),Nn(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let f=s;f<s+i;f++)l*=o[f];let p=o.slice(0,s).concat([l],o.slice(s+i)),u=B(r,p),d=B(a,[-1]),h=await Iy(d),c=ds(h,[1]),m=ku(u,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),u.dispose(),d.dispose(),h.dispose(),m}var hk=NO;function TO(e,t,n){let r=_(e,"x","transpose");if(t==null&&(t=r.shape.map((i,o)=>o).reverse()),$(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{$(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return r.dtype==="complex64"?W(()=>{let i=al(r),o=sd(r);return i=O.runKernel(pa,{x:i},s),o=O.runKernel(pa,{x:o},s),n&&(o=bt(o)),ca(i,o)}):O.runKernel(pa,a,s)}var We=L({transpose_:TO});function _O(e,t,n,r,a=!0){let s=_(e,"v","movingAverage"),i=_(t,"x","movingAverage"),o=_(n,"decay","movingAverage");Y0(s,i),$(fa(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=Se(1),p=fe(l,o),u=z(fe(i,s),p);if(a){$(r!=null,()=>"When using zeroDebias: true, step is required.");let d=_(r,"step","movingAverage");u=ye(u,fe(l,Zr(o,d)))}return J(s,u)}var ck=L({movingAverage_:_O});function CO(e,t,n){Xn(n);let r=_(e,"indices","scatterND","int32"),a=_(t,"updates","scatterND");Gc(a,r,n);let s={indices:r,updates:a},i={shape:n};return O.runKernel(ru,s,i)}var mk=L({scatterND_:CO});function EO(e,t,n,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function $O(e,t,n,r=0){Xn(n);let a=_(e,"sparseIndices","sparseToDense","int32"),s=_(t,"sparseValues","sparseToDense","string_or_numeric"),i=_(r,"defaultValue","sparseToDense",s.dtype);EO(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return O.runKernel(du,o,l)}var fk=L({sparseToDense_:$O});function AO(e,t){let n=_(t,"indices","gatherND","int32"),r={params:_(e,"x","gatherND","string_or_numeric"),indices:n};return O.runKernel(Ol,r)}var gk=L({gatherND_:AO});function FO(e,t){if(t==null)return e.shape.slice();if(fa(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?n.push(e.shape[r]):n.push(t[r]);return n}return t}function RO(e,t,n,r){let a=_(e,"x","dropout");if($(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),$(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Ge?a.clone():a;let s=FO(a,n),i=1-t,o=ye(wu(J(us(s,0,1,"float32",r),i)),i);return z(a,o)}var Sy=L({dropout_:RO});function Ny(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function qc(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return at(a,"float32")}async function DO(e,t,n=1){let r=_(e,"predictions","inTopK"),a=_(t,"targets","inTopK");$(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),$(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Nn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];$(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await r.data(),o=await a.data(),[l,p]=[i.length/s,s],u=R0("bool",l);for(let d=0;d<l;d++){let h=d*p,c=i.subarray(h,h+p),m=[];for(let f=0;f<c.length;f++)m.push({value:c[f],index:f});m.sort((f,g)=>g.value-f.value),u[d]=0;for(let f=0;f<n;f++)if(m[f].index===o[d]){u[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),wn(u,a.shape,"bool")}var yk=DO,ol={};De(ol,{conv2d:()=>LO,depthwiseConv2d:()=>WO,matMul:()=>UO});function MO(e,t,n,r,a,s="NHWC",i){let o=e;e.rank===3&&(o=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),$(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),$(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let p=s==="NHWC"?o.shape[3]:o.shape[1],u=s==="NHWC"?l.shape[3]:l.shape[1];$(p===n[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`),$(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),Tn("conv2dDerFilter",a,i);let d={x:o,dy:l},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return O.runKernel(sc,d,h)}var Ty=L({conv2DBackpropFilter_:MO});function Kc(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return z(e,_o(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Xc(e,t){let n=t,r=zt(e.shape,t.shape);return r.length>0&&(n=xe(n,r)),B(n,e.shape)}function Zc(e,t,n,r){if(t==="linear")return e;if(t==="relu")return it(e);if(t==="elu")return xu(e);if(t==="relu6")return Rc(e);if(t==="prelu")return hd(e,n);if(t==="leakyrelu")return id(e,r);if(t==="sigmoid")return yr(e);throw new Error(`Unknown fused activation ${t}.`)}var Jc=(e,t)=>!(e>0)||t==="linear";function OO({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:p,leakyreluAlpha:u}){if(l=l||"linear",Jc(O.state.gradientDepth,l)===!1){$(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let N=kn(e,t,n,r,a,s,i);return o!=null&&(N=J(N,o)),Zc(N,l,p,u)}let d=_(e,"x","conv2d","float32"),h=_(t,"filter","conv2d","float32"),c=d,m=!1;d.rank===3&&(m=!0,c=B(d,[1,d.shape[0],d.shape[1],d.shape[2]])),$(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),$(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Tn("fused conv2d",r,i);let f=a==="NHWC"?c.shape[3]:c.shape[1];$(h.shape[2]===f,()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${h.shape[2]}.`),$(Qr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let g=nd(c.shape,h.shape,n,s,r,i),y;o!=null&&(y=_(o,"bias","fused conv2d"),[y]=_t(y,d),a==="NHWC"?ht(g.outShape,y.shape):($(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),$(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(p!=null){let N=p.shape;if($(N.length<=1||N.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${N.length}.`),N.length===1)$(N[0]===1||N[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the number of output channels (${g.outChannels}).`);else if(N.length===3)try{ht(N,g.outShape)}catch{let E=`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(E)}b=_(p,"prelu weights","fused conv2d")}let x=(N,C)=>{$(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[E,A,R,F]=C,S=Kc(N,R,l);$(Ha(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let D=Ug(A.shape,S,E,n,r),P=Ty(A,S,E.shape,n,r),U=[D,P];if(F!=null){let G=Xc(F,S);U.push(G)}return U},v={x:c,filter:h,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?Jr((N,C,E)=>{let A=O.runKernel(Ps,v,I);return E([C,N,A]),m&&(A=B(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(c,h):Jr((N,C,E,A)=>{let R=O.runKernel(Ps,v,I);return A([C,N,R,E]),m&&(R=B(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(c,h,y)}var LO=L({fusedConv2d_:OO});function zO(e,t,n,r,a,s=[1,1],i){let o=e;e.rank===3&&(o=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={x:o,dy:l},u={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return O.runKernel(ic,p,u)}var bk=L({depthwiseConv2dNativeBackpropFilter_:zO});function PO(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={dy:o,filter:n},u={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=O.runKernel(oc,p,u);return l?B(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var xk=L({depthwiseConv2dNativeBackpropInput_:PO});function BO({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:p,leakyreluAlpha:u}){if(Jc(O.state.gradientDepth,l)===!1){let I=No(e,t,n,r,a,s,i);return o!=null&&(I=J(I,o)),Zc(I,l,p,u)}let d=_(e,"x","depthwiseConv2d","float32"),h=_(t,"filter","depthwiseConv2d","float32"),c=d,m=!1;d.rank===3&&(m=!0,c=B(d,[1,d.shape[0],d.shape[1],d.shape[2]])),$(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),$(c.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),s==null&&(s=[1,1]),$(Qr(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Tn("fused depthwiseConv2d",r,i);let f=nd(c.shape,h.shape,n,s,r,i,!0),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=_t(g,d),ht(f.outShape,g.shape));let y;p!=null&&(y=_(p,"prelu weights","fused depthwiseConv2d"));let b=(I,N)=>{$(Ha(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[C,E,A,R]=N,F=Kc(I,A,l),S=xk(E.shape,F,C,n,r,s,i),D=bk(E,F,C.shape,n,r,s,i);if(R!=null){let P=Xc(g,F);return[S,D,P]}return[S,D]},x={x:c,filter:h,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?Jr((I,N,C)=>{let E=O.runKernel(Bs,x,v);return C([N,I,E]),m&&(E=B(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(c,h):Jr((I,N,C,E)=>{let A=O.runKernel(Bs,x,v);return E([N,I,A,C]),m&&(A=B(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(c,h,g)}var WO=L({fusedDepthwiseConv2d_:BO});function VO({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(Jc(O.state.gradientDepth,s)===!1){let R=Be(e,t,n,r);return a!=null&&(R=J(R,a)),Zc(R,s,i,o)}let l=_(e,"a","fused matMul"),p=_(t,"b","fused matMul");[l,p]=_t(l,p);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?p.shape[p.rank-1]:p.shape[p.rank-2],h=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?p.shape[p.rank-2]:p.shape[p.rank-1],m=l.shape.slice(0,-2),f=p.shape.slice(0,-2),g=ot(m),y=ot(f);$(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${p.shape} and transposeA=${n} and transposeB=${r} must match.`);let b=ht(l.shape.slice(0,-2),p.shape.slice(0,-2)).concat([h,c]),x=n?B(l,[g,u,h]):B(l,[g,h,u]),v=r?B(p,[y,c,d]):B(p,[y,d,c]),I;a!=null&&(I=_(a,"bias","fused matMul"),[I]=_t(I,l),ht(b,I.shape));let N;i!=null&&(N=_(i,"prelu weights","fused matMul"));let C=(R,F)=>{let[S,D,P,U]=F,G=Kc(B(R,P.shape),P,s),K,j;if(!n&&!r?(K=Be(G,D,!1,!0),j=Be(S,G,!0,!1)):!n&&r?(K=Be(G,D,!1,!1),j=Be(G,S,!0,!1)):n&&!r?(K=Be(D,G,!1,!0),j=Be(S,G,!1,!1)):(K=Be(D,G,!0,!0),j=Be(G,S,!0,!0)),a!=null){let Z=Xc(U,G);return[K,j,Z]}else return[K,j]},E={a:x,b:v,bias:I,preluActivationWeights:N},A={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return a==null?Jr((R,F,S)=>{let D=O.runKernel(zs,E,A);return S([R,F,D]),{value:B(D,b),gradFunc:C}})(x,v):Jr((R,F,S,D)=>{let P=O.runKernel(zs,E,A);return D([R,F,P,S]),{value:B(P,b),gradFunc:C}})(x,v,I)}var UO=L({fusedMatMul_:VO});function GO(e){return qc(e,.54,.46)}var HO=L({hammingWindow_:GO});function jO(e){return qc(e,.5,.5)}var vk=L({hannWindow_:jO});function qO(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Ze(e,s,t)),s+=n;if(r)for(;s<e.size;){let o=s+t-e.size,l=dt([Ze(e,s,t-o),Gn([o],a)]);i.push(l),s+=n}return i.length===0?qr([],[0,t]):B(dt(i),[i.length,t])}var wk=L({frame_:qO});function KO(e,t,n,r,a=vk){r==null&&(r=Ny(t));let s=wk(e,t,n),i=z(s,a(t));return fd(i,r)}var XO=L({stft_:KO});function ZO(e,t,n,r,a="bilinear",s=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),l=_(n,"boxInd","cropAndResize","int32"),p=o.shape[0];$(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${o.shape}.`),$(l.rank===1&&l.shape[0]===p,()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${o.shape}.`),$(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),$(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),$(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);let u={image:i,boxes:o,boxInd:l},d={method:a,extrapolationValue:s,cropSize:r};return O.runKernel(El,u,d)}var JO=L({cropAndResize_:ZO});function YO(e){let t=_(e,"image","flipLeftRight","float32");$(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return O.runKernel(Dl,n,{})}var QO=L({flipLeftRight_:YO});function e3(e){let t=_(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),$(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Un(t,a)}var t3=L({grayscaleToRGB_:e3});function n3(e){let t=_(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),$(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);let a=t.dtype,s=ie(t,"float32"),i=at([.2989,.587,.114]),o;switch(t.rank){case 2:o=_s("ij,j->i",s,i);break;case 3:o=_s("ijk,k->ij",s,i);break;case 4:o=_s("ijkl,l->ijk",s,i);break;case 5:o=_s("ijklm,m->ijkl",s,i);break;case 6:o=_s("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Qt(o,-1),ie(o,a)}var r3=L({rgbToGrayscale_:n3});function a3(e,t,n=0,r=.5){let a=_(e,"image","rotateWithOffset","float32");$(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:n,center:r};return O.runKernel(yu,s,i)}var s3=L({rotateWithOffset_:a3});function Nu(e,t,n,r,a,s){r==null&&(r=.5),a==null&&(a=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return n=Math.min(n,i),$(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),$(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),$(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),$(t.rank===1,()=>"scores must be a 1D tensor"),$(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),$(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function i3(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppression","float32"),i=_(t,"scores","nonMaxSuppression","float32"),o=Nu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return O.runKernel(Xl,{boxes:s,scores:i},l)}var o3=L({nonMaxSuppression_:i3});function l3(e,t,n){let r=u3(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function u3(e,t,n){return d3(e,t,n||p3)}function p3(e,t){return e>t?1:e<t?-1:0}function d3(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function kk(e,t,n,r,a){return _y(e,t,n,r,a,0)}function Ik(e,t,n,r,a,s){return _y(e,t,n,r,a,0,!1,s,!0)}function Sk(e,t,n,r,a,s){return _y(e,t,n,r,a,s,!0)}function _y(e,t,n,r,a,s,i=!1,o=!1,l=!1){let p=[];for(let g=0;g<t.length;g++)t[g]>a&&p.push({score:t[g],boxIndex:g,suppressBeginIndex:0});p.sort(Zv);let u=s>0?-.5/s:0,d=[],h=[];for(;d.length<n&&p.length>0;){let g=p.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<a)break;let v=!1;for(let I=d.length-1;I>=x;--I){let N=h3(e,b,d[I]);if(N>=r){v=!0;break}if(g.score=g.score*c3(r,u,N),g.score<=a)break}g.suppressBeginIndex=d.length,v||(g.score===y?(d.push(b),h.push(g.score)):g.score>a&&l3(p,g,Zv))}let c=d.length,m=n-c;o&&m>0&&(d.push(...new Array(m).fill(0)),h.push(...new Array(m).fill(0)));let f={selectedIndices:d};return i&&(f.selectedScores=h),l&&(f.validOutputs=c),f}function h3(e,t,n){let r=e.subarray(t*4,t*4+4),a=e.subarray(n*4,n*4+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),p=Math.min(a[0],a[2]),u=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),c=(o-s)*(l-i),m=(d-p)*(h-u);if(c<=0||m<=0)return 0;let f=Math.max(s,p),g=Math.max(i,u),y=Math.min(o,d),b=Math.min(l,h),x=Math.max(y-f,0)*Math.max(b-g,0);return x/(c+m-x)}function c3(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function Zv(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function m3(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=Nu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),p=l[0],u=l[1],{selectedIndices:d}=kk(p,u,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),at(d,"int32")}var f3=m3;function g3(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=Nu(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let p={boxes:i,scores:o},u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},d=O.runKernel(Jl,p,u);return{selectedIndices:d[0],selectedScores:d[1]}}var y3=L({nonMaxSuppressionWithScore_:g3});async function b3(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=Nu(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let p=await Promise.all([i.data(),o.data()]),u=p[0],d=p[1],{selectedIndices:h,selectedScores:c}=Sk(u,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:at(h,"int32"),selectedScores:at(c)}}var x3=b3;function v3(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=Nu(i,o,n,r,a,null),p=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,h={boxes:i,scores:o},c={maxOutputSize:p,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:s},m=O.runKernel(Zl,h,c);return{selectedIndices:m[0],validOutputs:m[1]}}var w3=L({nonMaxSuppressionPadded_:v3});async function k3(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=Nu(i,o,n,r,a,null),p=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[h,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=Ik(h,c,p,u,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:at(m,"int32"),validOutputs:Se(f,"int32")}}var I3=k3;function S3(e,t,n=!1,r=!1){let a=_(e,"images","resizeBilinear");$(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),$(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=B(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},p=O.runKernel(so,o,l);return i?B(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Nk=L({resizeBilinear_:S3});function N3(e,t,n=!1,r=!1){let a=_(e,"images","resizeNearestNeighbor");$(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),$(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=B(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},p=O.runKernel(ao,o,l);return i?B(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Tk=L({resizeNearestNeighbor_:N3});function T3(e,t="binary",n=!1,r=.5){let a=_(e,"image","threshold"),s=.2989,i=.587,o=.114,l=a.shape[0]*a.shape[1],p=z(at([r]),255),u,d,h,c;if($(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),$(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),$(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),$(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[u,d,h]=An(a,[1,1,1],-1);let f=z(u,s),g=z(d,i),y=z(h,o);c=J(J(f,g),y)}else c=e;if(t==="otsu"){let f=Lg(ie(Dc(c),"int32"),wn([]),256);p=_3(f,l)}let m=n?ls(c,p):_n(c,p);return ie(z(m,255),"int32")}function _3(e,t){let n=at([-1]),r=at([0]),a=at([0]),s,i,o,l,p,u;for(let d=0;d<e.size-1;d++){s=Ze(e,0,d+1),i=Ze(e,d+1),p=ye(xe(s),t),u=ye(xe(i),t);let h=xe(z(s,Xs(0,s.size)));o=ye(h,xe(s));let c=Gn(i.shape,s.size),m=J(Xs(0,i.size),c),f=z(i,m);l=ye(xe(f),xe(i));let g=fe(o,l),y=fe(o,l),b=z(p,u);a=z(z(b,g),y);let x=_n(a,r);r=tn(x,a,r),n=tn(x,at([d]),n)}return n}var C3=L({threshold_:T3});function E3(e,t,n="nearest",r="constant",a=0,s){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");$(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},p={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return O.runKernel(mu,l,p)}var $3=L({transform_:E3});function A3(e,t,n){let r=_(e,"a","bandPart");$(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let a=r.shape,[s,i]=r.shape.slice(-2),o,l;typeof t=="number"?($(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),$(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),o=_(t<0?s:t,"numLower","bandPart")):($(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=tn(nl(t,0),s,qa(t,s))),typeof n=="number"?($(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),$(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),l=_(n<0?i:n,"numUpper","bandPart")):($(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=tn(nl(n,0),i,qa(n,i)));let p=B(Xs(0,s,1,"int32"),[-1,1]),u=Xs(0,i,1,"int32"),d=fe(p,u),h=br(ls(d,o),ba(d,bt(l))),c=Nt([s,i],r.dtype);return B(Lt(Et(B(r,[-1,s,i])).map(m=>tn(h,m,c))),a)}var F3=L({bandPart_:A3});function R3(e){let t;if(Array.isArray(e)){t=!1,$(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let a=e[0].shape[0];for(let s=1;s<e.length;++s)$(e[s].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${a})`)}else t=!0,e=An(e,e.shape[0],0).map(a=>ds(a,[0]));$(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let a=0;a<e.length;++a)n.push(O.tidy(()=>{let s=r[a];if(a>0)for(let i=0;i<a;++i){let o=z(xe(z(n[i],s)),n[i]);s=fe(s,o)}return ye(s,vu(s,"euclidean"))}));return t?Lt(n,0):n}var D3=L({gramSchmidt_:R3});function M3(e,t=!1){if($(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Jv(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,p)=>l*p),r=Et(B(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(l=>{let[p,u]=Jv(l,t);a.push(p),s.push(u)});let i=B(Lt(a,0),e.shape),o=B(Lt(s,0),e.shape);return[i,o]}}function Jv(e,t=!1){return O.tidy(()=>{$(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=_c(n),s=jr(e),i=qr([[1]],[1,1]),o=jr(i),l=n>=r?r:n;for(let p=0;p<l;++p){let u=s,d=o,h=a;[o,s,a]=O.tidy(()=>{let c=Ze(s,[p,p],[n-p,1]),m=vu(c),f=Ze(s,[p,p],[1,1]),g=tn(_n(f,0),qr([[-1]]),qr([[1]])),y=fe(f,z(g,m)),b=ye(c,y);b.shape[0]===1?o=jr(i):o=dt([i,Ze(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=bt(ye(Be(g,y),m)),v=Ze(s,[p,0],[n-p,r]),I=z(x,o),N=We(o);if(p===0)s=fe(v,Be(I,Be(N,v)));else{let A=fe(v,Be(I,Be(N,v)));s=dt([Ze(s,[0,0],[p,r]),A],0)}let C=We(I),E=Ze(a,[0,p],[n,a.shape[1]-p]);if(p===0)a=fe(E,Be(Be(E,o),C));else{let A=fe(E,Be(Be(E,o),C));a=dt([Ze(a,[0,0],[n,p]),A],1)}return[o,s,a]}),Re([u,d,h])}return!t&&n>r&&(a=Ze(a,[0,0],[n,r]),s=Ze(s,[0,0],[r,r])),[a,s]})}var O3=L({qr_:M3}),xn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(xn||(xn={}));function L3(e,t,n=xn.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"losses","computeWeightedLoss"),a=null;t!=null&&(a=_(t,"weights","computeWeightedLoss"));let s=a==null?r:z(r,a);if(n===xn.NONE)return s;if(n===xn.SUM)return xe(s);if(n===xn.MEAN){if(a==null)return St(s);{let i=r.size/a.size,o=ye(xe(s),xe(a));return i>1?ye(o,Se(i)):o}}if(n===xn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return ye(xe(s),Se(r.size));{let i=z(a,$n(r.shape)),o=ie(xe(Ks(i,Se(0))),"float32");return ye(xe(s),o)}}throw Error(`Unknown reduction: ${n}`)}var xa=L({computeWeightedLoss_:L3});function z3(e,t,n,r=xn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","absoluteDifference"),s=_(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=_(n,"weights","absoluteDifference")),Nn(a.shape,s.shape,"Error in absoluteDifference: ");let o=Dt(fe(a,s));return xa(o,i,r)}var P3=L({absoluteDifference_:z3});function B3(e,t,n,r,a=xn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;r!=null&&(o=_(r,"weights","cosineDistance")),Nn(s.shape,i.shape,"Error in cosineDistance: ");let l=Se(1),p=fe(l,xe(z(s,i),n,!0));return xa(p,o,a)}var W3=L({cosineDistance_:B3});function V3(e,t,n,r=xn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","hingeLoss"),s=_(t,"predictions","hingeLoss"),i=null;n!=null&&(i=_(n,"weights","hingeLoss")),Nn(a.shape,s.shape,"Error in hingeLoss: ");let o=Se(1);a=fe(z(Se(2),a),o);let l=it(fe(o,z(a,s)));return xa(l,i,r)}var U3=L({hingeLoss_:V3});function G3(e,t,n,r=1,a=xn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;n!=null&&(o=_(n,"weights","huberLoss")),Nn(s.shape,i.shape,"Error in huberLoss: ");let l=Se(r),p=Dt(fe(i,s)),u=qa(p,l),d=fe(p,u),h=J(z(Se(.5),pt(u)),z(l,d));return xa(h,o,a)}var H3=L({huberLoss_:G3});function j3(e,t,n,r=1e-7,a=xn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;n!=null&&(o=_(n,"weights","logLoss")),Nn(s.shape,i.shape,"Error in logLoss: ");let l=Se(1),p=Se(r),u=bt(z(s,jn(J(i,p)))),d=z(fe(l,s),jn(J(fe(l,i),p))),h=fe(u,d);return xa(h,o,a)}var q3=L({logLoss_:j3});function K3(e,t,n,r=xn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","meanSquaredError"),s=_(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=_(n,"weights","meanSquaredError")),Nn(a.shape,s.shape,"Error in meanSquaredError: ");let o=Wc(a,s);return xa(o,i,r)}var X3=L({meanSquaredError_:K3});function Z3(e,t){let n=_(e,"labels","sigmoidCrossEntropyWithLogits"),r=_(t,"logits","sigmoidCrossEntropyWithLogits");Nn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=it(r),s=z(r,n),i=od(mn(bt(Dt(r))));return J(fe(a,s),i)}function J3(e,t,n,r=0,a=xn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","sigmoidCrossEntropy")),Nn(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let p=Se(r),u=Se(1),d=Se(.5);s=J(z(s,fe(u,p)),z(d,p))}let l=Z3(s,i);return xa(l,o,a)}var Y3=L({sigmoidCrossEntropy_:J3});function Q3(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Jr((r,a,s)=>{let i=ld(a,[n],!0),o=fe(ie(a,"float32"),i);s([r,o]);let l=bt(z(o,r));return{value:xe(l,[n]),gradFunc:(p,u)=>{let[d,h]=u,c=qs(p.shape,[n]);return[z(B(p,c),fe(ie(d,"float32"),mn(h))),z(B(p,c),fe(mn(h),ie(d,"float32")))]}}})(e,t)}function eL(e,t,n,r=0,a=xn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","softmaxCrossEntropy")),Nn(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let p=Se(r),u=Se(1),d=Se(s.shape[1]);s=J(z(s,fe(u,p)),ye(p,d))}let l=Q3(s,i);return xa(l,o,a)}var tL=L({softmaxCrossEntropy_:eL});function nL(e,t,n,r){let a=_(e,"indices","sparseFillEmptyRows","int32"),s=_(t,"values","sparseFillEmptyRows"),i=_(n,"denseShape","sparseFillEmptyRows","int32"),o=_(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},p=O.runKernel(Wp,l);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}var rL=L({sparseFillEmptyRows_:nL});function aL(e,t,n){let r=_(e,"inputIndices","sparseReshape","int32"),a=_(t,"inputShape","sparseReshape","int32"),s=_(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=O.runKernel(pu,i);return{outputIndices:o[0],outputShape:o[1]}}var sL=L({sparseReshape_:aL});function iL(e,t,n){let r=_(e,"data","sparseSegmentMean"),a=_(t,"indices","sparseSegmentMean","int32"),s=_(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(Vp,i)}var oL=L({sparseSegmentMean_:iL});function lL(e,t,n){let r=_(e,"data","sparseSegmentSum"),a=_(t,"indices","sparseSegmentSum","int32"),s=_(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(Up,i)}var uL=L({sparseSegmentSum_:lL});function pL(e,t,n,r,a,s,i,o){let l=_(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let p=_(t,"dataSplits","stringNGrams");if(p.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:l,dataSplits:p},h=O.runKernel(jp,d,u);return{nGrams:h[0],nGramsSplits:h[1]}}var dL=L({stringNGrams_:pL});function hL(e,t,n=!0){let r=_(e,"input","stringSplit","string"),a=_(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=O.runKernel(qp,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var cL=L({stringSplit_:hL});function mL(e,t){let n=_(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return O.runKernel(Kp,a,r)}var fL=L({stringToHashBucketFast_:mL});function gL(e,t,n,r=!0){let a=_(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return O.runKernel(Hp,{x:a},s)}var yL=L({staticRegexReplace_:gL}),_k={fft:md,ifft:il,rfft:fd,irfft:Bc},Ck={hammingWindow:HO,hannWindow:vk,frame:wk,stft:XO},nr={flipLeftRight:QO,grayscaleToRGB:t3,resizeNearestNeighbor:Tk,resizeBilinear:Nk,rgbToGrayscale:r3,rotateWithOffset:s3,cropAndResize:JO,nonMaxSuppression:o3,nonMaxSuppressionAsync:f3,nonMaxSuppressionWithScore:y3,nonMaxSuppressionWithScoreAsync:x3,nonMaxSuppressionPadded:w3,nonMaxSuppressionPaddedAsync:I3,threshold:C3,transform:$3},Cy={bandPart:F3,gramSchmidt:D3,qr:O3},Ek={absoluteDifference:P3,computeWeightedLoss:xa,cosineDistance:W3,hingeLoss:U3,huberLoss:H3,logLoss:q3,meanSquaredError:X3,sigmoidCrossEntropy:Y3,softmaxCrossEntropy:tL},$k={sparseFillEmptyRows:rL,sparseReshape:sL,sparseSegmentMean:oL,sparseSegmentSum:uL},Ak={stringNGrams:dL,stringSplit:cL,stringToHashBucketFast:fL,staticRegexReplace:yL},ne={};De(ne,{Serializable:()=>Fk,SerializationMap:()=>Rk,getRegisteredName:()=>xL,registerClass:()=>Dk});var bL=new Map,yf=new Map,Fk=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Rk=class Ho{constructor(){this.classNameMap={}}static getMap(){return Ho.instance==null&&(Ho.instance=new Ho),Ho.instance}static register(t){Ho.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function Dk(e,t,n){$(e.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),$(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof n>"u"&&(n=e.className);let r=n,a=t+">"+r;return Rk.register(e),bL.set(a,e),yf.set(e,a),e}function xL(e){return yf.has(e)?yf.get(e):e.className}var va=class extends Fk{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(n!=null){let s=n.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(s)}else this.applyGradients(a);return Re(a),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return D1(e,t)}dispose(){this.iterations_!=null&&Re(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Se(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(va,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Ey=class extends va{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:W(()=>Je(r).variable(a))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:W(()=>Je(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;W(()=>{let l=J(z(i,this.rho),z(pt(s),1-this.rho)),p=z(ye(nn(J(o,this.epsilon)),nn(J(i,this.epsilon))),s),u=J(z(o,this.rho),z(pt(p),1-this.rho));i.assign(l),o.assign(u);let d=J(z(p,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Re(this.accumulatedGrads.map(e=>e.variable)),Re(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},$y=class extends va{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:W(()=>Gn(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(a==null)return;let s=this.accumulatedGrads[n].variable;W(()=>{let i=J(s,pt(a));s.assign(i);let o=J(z(ye(a,nn(J(i,O.backend.epsilon()))),-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Re(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Ay=class extends va{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],W(()=>{this.accBeta1=Se(t).variable(),this.accBeta2=Se(n).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=fe(1,this.accBeta1),r=fe(1,this.accBeta2);t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:W(()=>Je(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${a}/v`,variable:W(()=>Je(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let p=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,d=J(z(p,this.beta1),z(l,1-this.beta1)),h=J(z(u,this.beta2),z(pt(l),1-this.beta2)),c=ye(d,n),m=ye(h,r);p.assign(d),u.assign(h);let f=J(z(ye(c,J(nn(m),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(z(this.accBeta1,this.beta1)),this.accBeta2.assign(z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Re(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),W(()=>{this.accBeta1.assign(Zr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Zr(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},Fy=class extends va{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],W(()=>{this.iteration=Se(0).variable(),this.accBeta1=Se(t).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=fe(1,this.accBeta1),r=ye(-this.learningRate,J(z(this.iteration,this.decay),1));t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:Je(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${a}/v`,variable:Je(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let p=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,d=J(z(p,this.beta1),z(l,1-this.beta1)),h=z(u,this.beta2),c=Dt(l),m=ea(h,c);p.assign(d),u.assign(m);let f=J(z(ye(r,n),ye(d,J(m,this.epsilon))),i);i.assign(f)}),this.iteration.assign(J(this.iteration,1)),this.accBeta1.assign(z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Re(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Yc=class extends va{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(r==null)return;let a=O.registeredVariables[t];W(()=>{let s=J(z(this.c,r),a);a.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Vt(Se(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Ry=class extends Yc{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Se(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:W(()=>Je(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];s!=null&&W(()=>{let i,o=J(z(this.m,a),s);this.useNesterov?i=J(z(this.c,J(s,z(o,this.m))),r):i=J(z(this.c,o),r),a.assign(o),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Re(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Dy=class extends va{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,r==null&&(this.epsilon=O.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:W(()=>Je(r).variable(a))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:W(()=>Je(r).variable(a))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:W(()=>Je(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;W(()=>{let l=J(z(i,this.decay),z(pt(s),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,u=J(z(p,this.decay),z(s,1-this.decay)),d=ye(z(s,this.learningRate),nn(fe(l,J(pt(u),this.epsilon)))),h=J(z(o,this.momentum),d);i.assign(l),p.assign(u),o.assign(h);let c=fe(r,h);r.assign(c)}else{let p=J(z(i,this.decay),z(pt(s),1-this.decay)),u=J(z(o,this.momentum),ye(z(s,this.learningRate),nn(J(p,this.epsilon))));i.assign(p),o.assign(u);let d=fe(r,u);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Re(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Re(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Re(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},vL=[Ey,$y,Ay,Fy,Ry,Dy,Yc];function wL(){for(let e of vL)Dk(e)}var pn={};De(pn,{CompositeArrayBuffer:()=>ga,browserFiles:()=>CL,browserHTTPRequest:()=>DL,concatenateArrayBuffers:()=>lF,copyModel:()=>$F,decodeWeights:()=>i1,decodeWeightsStream:()=>l1,encodeWeights:()=>nF,fromMemory:()=>OL,fromMemorySync:()=>Pk,getLoadHandlers:()=>gF,getModelArtifactsForJSON:()=>kg,getModelArtifactsForJSONSync:()=>p1,getModelArtifactsInfoForJSON:()=>td,getSaveHandlers:()=>fF,getWeightSpecs:()=>df,http:()=>Oy,isHTTPScheme:()=>xf,listModels:()=>CF,loadWeights:()=>$L,moveModel:()=>AF,registerLoadRouter:()=>mF,registerSaveRouter:()=>cF,removeModel:()=>EF,weightsLoaderFactory:()=>Ok,withSaveHandler:()=>LL,withSaveHandlerSync:()=>zL});var kL="model",IL=".json",SL=".weights.bin";function Yv(e){return new Promise(t=>setTimeout(t)).then(e)}var Ah=class bf{constructor(t){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(bf.URL_SCHEME)&&(t=t.slice(bf.URL_SCHEME.length)),(t==null||t.length===0)&&(t=kL),this.modelJsonFileName=t+IL,this.weightDataFileName=t+SL}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let n=ga.join(t.weightData),r=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let a=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s=u1(t,a),i=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await Yv(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=r,await Yv(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:td(t)}}}};Ah.URL_SCHEME="downloads://";var NL=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=r=>{let a=JSON.parse(r.target.result),s=a.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=kg(a,o=>this.loadWeights(o));e(i)},n.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map(s=>this.loadWeightsFile(s,r[s]));return Promise.all(a).then(s=>[t,s])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=s=>{let i=s.target.result;n(i)},a.onerror=s=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(a=>Xv(a.name)),r={};for(let a of e)a.paths.forEach(s=>{let i=Xv(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[s]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},TL=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ah.URL_SCHEME)?_L(e.slice(Ah.URL_SCHEME.length)):null;lr.registerSaveRouter(TL);function _L(e="model"){return new Ah(e)}function CL(e){return new NL(e)}function Qv(e,t,n,r){i(e),n=n??0,r=r??1,o(n,r);let a=0,s=l=>(l.then(p=>{let u=n+ ++a/e.length*(r-n);return t(u),p}),l);function i(l){$(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,p){$(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),$(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${p}`),$(p>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${p}`)}return Promise.all(e.map(s))}async function Mk(e,t){t==null&&(t={});let n=t.fetchFunc==null?H().platform.fetch:t.fetchFunc,r=e.map(s=>n(s,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?await Promise.all(r):await Qv(r,t.onProgress,0,.5)).map(s=>s.arrayBuffer());return t.onProgress==null?await Promise.all(a):await Qv(a,t.onProgress,.5,1)}function EL(e,t){var n;let r=t.fetchFunc==null?H().platform.fetch:t.fetchFunc,a=0,s;return(n=t.onProgress)===null||n===void 0||n.call(t,0),new ReadableStream({pull:async i=>{for(var o;a<e.length;){s||(s=(await r(e[a],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:p}=await s.read();if(l){a++,s=void 0,(o=t.onProgress)===null||o===void 0||o.call(t,a/e.length);continue}i.enqueue(p);return}i.close()}})}async function $L(e,t="",n,r){return Ok(a=>Mk(a,{requestInit:r}))(e,t,n)}function Ok(e){return async(t,n="",r)=>{let a=t.map(()=>!1),s={},i=r!=null?r.map(()=>!1):[],o=[];if(t.forEach((c,m)=>{let f=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=Vs[y]*ot(g.shape),x=()=>{a[m]=!0,s[m]==null&&(s[m]=[]),s[m].push({manifestEntry:g,groupOffset:f,sizeBytes:b})};r!=null?r.forEach((v,I)=>{v===g.name&&(x(),i[I]=!0)}):x(),o.push(g.name),f+=b})}),!i.every(c=>c)){let c=r.filter((m,f)=>!i[f]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((c,m,f)=>(m&&c.push(f),c),[]),p=[];l.forEach(c=>{t[c].paths.forEach(m=>{let f=n+(n.endsWith("/")?"":"/")+m;p.push(f)})});let u=await e(p),d={},h=0;return l.forEach(c=>{let m=t[c].paths.length,f=new ga(u.slice(h,h+m));s[c].forEach(g=>{let y=f.slice(g.groupOffset,g.groupOffset+g.sizeBytes),b=i1(y,[g.manifestEntry]);for(let x in b)d[x]=b[x]}),h+=m}),d}}var AL="application/octet-stream",FL="application/json",My=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=H().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=u1(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:FL}),"model.json"),e.weightData!=null){let s=ga.join(e.weightData);t.body.append("model.weights.bin",new Blob([s],{type:AL}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:td(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let n=t.modelTopology,r=t.weightsManifest;if(n==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();let e=await this.loadModelJSON();return kg(e,t=>this.loadWeights(t))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=df(e.weightsManifest),r=()=>EL(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:r})}async getWeightUrls(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=RL(t),a=this.weightPathPrefix||n,s=[],i=[];for(let o of e)for(let l of o.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(l)):s.push(a+l+r);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){let t=await this.getWeightUrls(e),n=df(e),r=await Mk(t,this.loadOptions);return[n,r]}};My.URL_SCHEME_REGEX=/^https?:\/\//;function RL(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function xf(e){return e.match(My.URL_SCHEME_REGEX)!=null}var Lk=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(r=>xf(r)):n=xf(e),n)return Oy(e,t)}return null};lr.registerSaveRouter(Lk);lr.registerLoadRouter(Lk);function Oy(e,t){return new My(e,t)}function DL(e,t){return Oy(e,t)}var Bm=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},zk=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},ML=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function OL(e,t,n,r){let a=arguments;return new ML(Pk(...a))}function Pk(e,t,n,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Bm(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Bm({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Bm({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function LL(e){return new zk(e)}function zL(e){return new zk(e)}var Bk={};De(Bk,{confusionMatrix:()=>BL});function PL(e,t,n){let r=_(e,"labels","confusionMatrix"),a=_(t,"predictions","confusionMatrix");$(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),$(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),$(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),$(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),$(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=rl(ie(r,"int32"),n),i=rl(ie(a,"int32"),n),o=We(s),l=Be(o,i);return ie(l,"int32")}var BL=L({confusionMatrix_:PL}),gd={};De(gd,{draw:()=>KL,fromPixels:()=>XL,fromPixelsAsync:()=>HL,toPixels:()=>qL});var ws,ew=!1;function Wk(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(pp(Th,O.backendName)!=null){let h={pixels:e},c={numChannels:t};return O.runKernel(Th,h,c)}let[l,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],u;if(i)u=e.getContext("2d").getImageData(0,0,l,p).data;else if(r||n)u=e.data;else if(s||a||o){if(ws==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")ws=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ws=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ws.canvas.width=l,ws.canvas.height=p,ws.drawImage(e,0,0,l,p),u=ws.getImageData(0,0,l,p).data}let d;if(t===4)d=new Int32Array(u);else{let h=l*p;d=new Int32Array(h*t);for(let c=0;c<h;c++)for(let m=0;m<t;++m)d[c*t+m]=u[c*4+m]}return Vc(d,[p,l,t],"int32")}function WL(e){return e!=null&&e.data instanceof Uint8Array}function VL(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function UL(e){return e!=null&&e.width!==0&&e.height!==0}function GL(e){return VL()&&!(e instanceof ImageBitmap)&&UL(e)&&!WL(e)}async function HL(e,t=3){let n=null;if(H().getBool("WRAP_TO_IMAGEBITMAP")&&GL(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===e.width&&r.height===e.height?n=r:n=e}else n=e;return Wk(n,t)}function Vk(e){if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=e.rank===2?1:e.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function jL(e){let t=(e==null?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function qL(e,t){let n=_(e,"img","toPixels");if(!(e instanceof Ge)){let p=n;n=ie(p,"int32"),p.dispose()}Vk(n);let[r,a]=n.shape.slice(0,2),s=n.rank===2?1:n.shape[2],i=await n.data(),o=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(a*r*4);for(let p=0;p<r*a;++p){let u=[0,0,0,255];for(let h=0;h<s;h++){let c=i[p*s+h];if(n.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(n.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(u[0]=c*o,u[1]=c*o,u[2]=c*o):u[h]=c*o}let d=p*4;l[d+0]=Math.round(u[0]),l[d+1]=Math.round(u[1]),l[d+2]=Math.round(u[2]),l[d+3]=Math.round(u[3])}if(t!=null){ew||pp(lc,O.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),ew=!0),t.width=a,t.height=r;let p=t.getContext("2d"),u=new ImageData(l,a,r);p.putImageData(u,0,0)}return n!==e&&n.dispose(),l}function KL(e,t,n){let r=_(e,"img","draw");if(!(e instanceof Ge)){let i=r;r=ie(i,"int32"),i.dispose()}Vk(r),jL(n==null?void 0:n.imageOptions);let a={image:r},s={canvas:t,options:n};O.runKernel(lc,a,s)}var XL=L({fromPixels_:Wk}),Ly={};De(Ly,{prepareAndValidate:()=>Uk});function Uk(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(ot(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let d=0;d<a.length-1;++d)i*=a[d];let o=e.shape,l=a.slice();l.pop();let p=1;for(let d=s;d<n;++d)p*=o[d],l.push(o[d]);let u=[...fl(e.shape).map(d=>d/p),1].slice(0,s);return[l,i,p,u]}var Gt={};De(Gt,{assertParamsValid:()=>JL,computeFlatOffset:()=>nz,computeOutShape:()=>QL,getNormalizedAxes:()=>ez,isSliceContinous:()=>tz,maskToAxes:()=>YL,parseSliceParams:()=>Yk,sliceInfo:()=>rz,startForAxis:()=>Zk,startIndicesWithElidedDims:()=>qk,stopForAxis:()=>Jk,stopIndicesWithElidedDims:()=>Kk,stridesForAxis:()=>Xk,stridesWithElidedDims:()=>Gk});var vf=-2,ZL=-1;function JL(e,t,n){let r=e.shape.length;$(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),$(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)$(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function YL(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function QL(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Gk(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)s===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Hk(e,t,n){return n<=e?n:n-(t-1)}function jk(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ez(e,t,n,r,a,s,i,o,l){let p=e.length,u=new Array(p),d=new Array(p),h=new Array(p);if(t.length&&n>0){let c=t[0],m=n+1;u=qk(i,c,m,r,e),d=Kk(o,c,m,a,e),h=Gk(s,c,m,e)}else for(let c=0;c<p;c++)u[c]=Zk(i,r,s,e,c,l),d[c]=Jk(o,a,s,e,c,l),h[c]=Xk(s,c,l);return{begin:u,end:d,strides:h}}function qk(e,t,n,r,a){let s=[...a],i=jk(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=Hk(t,n,o),p=r[l];e&1<<l&&(p=0),s[o]=p}return s}function Kk(e,t,n,r,a){let s=[...a],i=jk(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=Hk(t,n,o),p=r[l];e&1<<l&&(p=Number.MAX_SAFE_INTEGER),s[o]=p}for(let o=0;o<s.length;o++){let l=a[o];s[o]<0&&(s[o]+=l),s[o]=lp(0,s[o],a[o])}return s}function Xk(e,t,n){let r=e[t];return(n&1<<t||r==null)&&(r=1),r}function Zk(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=lp(0,i,l-1),i}function Jk(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),o>0?i=lp(0,i,l):i=lp(-1,i,l-1),i}function tz(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function nz(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Yk(e,t,n){let r,a=e.shape.length;typeof t=="number"?r=[t,...new Array(a-1).fill(0)]:t.length<a?r=t.concat(new Array(a-t.length).fill(0)):r=t.slice(),r.forEach(i=>{$(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return n==null?s=new Array(a).fill(-1):typeof n=="number"?s=[n,...new Array(a-1).fill(-1)]:n.length<a?s=n.concat(new Array(a-n.length).fill(-1)):s=n,s=s.map((i,o)=>i>=0?i:($(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-r[o])),[r,s]}function rz(e,t,n,r,a,s,i,o,l){let p;if(r==null?(p=new Array(t.length),p.fill(1)):p=r,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,d={dims:p.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:p.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<d.dims;b++)u&&1<<b&o&&d.numAddAxisAfterEllipsis++,1<<b&i&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};az(d,h);let c=!0,m=!0,f=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(h.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);let x=!!(h.shrinkAxisMask&1<<b),v=e[b];if(v===-1){g.push(x?1:-1);continue}let I=[h.beginMask&1<<b,h.endMask&1<<b],N=[h.strides[b]>0?0:-1,h.strides[b]>0?v:v-1];if(x&&h.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&h.strides[b]===1;let C=!!(h.beginMask&1<<b&&h.endMask&1<<b);if(h.beginValid&&h.endValid){if(x){let F=h.begin[b]<0?v+h.begin[b]:h.begin[b];if(h.begin[b]=F,h.end[b]=h.begin[b]+1,F<0||F>=v)throw Error(`slice index ${h.begin[b]} of dimension ${b} out of bounds.`)}else h.begin[b]=tw(h.begin[b],0,h.strides[b],v,I,N),h.end[b]=tw(h.end[b],1,h.strides[b],v,I,N);let R=h.strides[b]===1&&h.begin[b]===0&&h.end[b]===v;c=c&&R,m=m&&(b===0&&h.strides[b]===1||R)}else c=c&&h.strides[b]===1&&C,m=m&&(b===0&&h.strides[b]===1||C);let E,A=!1;if(h.beginValid&&h.endValid?(E=h.end[b]-h.begin[b],A=!0):x?(E=1,A=!0):C&&v>=0&&(h.strides[b]<0?E=-v:E=v,A=!0),A){let R;E===0||E<0!=h.strides[b]<0?R=0:R=Math.trunc(E/h.strides[b])+(E%h.strides[b]!==0?1:0),g.push(R)}else g.push(-1)}for(let b=0;b<h.finalShapeGatherIndices.length;++b){let x=h.finalShapeGatherIndices[b];x>=0?y.push(g[x]):x===vf&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>h.finalShapeGatherIndices[x]!==vf),finalShape:y,isIdentity:c,sliceDim0:m,isSimpleSlice:f,begin:h.begin,end:h.end,strides:h.strides}}function az(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(vf),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[r]),e.end!=null&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(ZL),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function tw(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let i=e<0?r+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var sz="4.22.0",Qk=class{static sgd(e){return new Yc(e)}static momentum(e,t,n=!1){return new Ry(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Dy(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Ay(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ey(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Fy(e,t,n,r,a)}static adagrad(e,t=.1){return new $y(e,t)}},Ss=Qk,iz=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();function zy(){return new Promise(e=>iz(()=>e()))}var T={};De(T,{ERF_A1:()=>wz,ERF_A2:()=>kz,ERF_A3:()=>Iz,ERF_A4:()=>Sz,ERF_A5:()=>Nz,ERF_P:()=>vz,PARALLELIZE_THRESHOLD:()=>Py,RowPartitionType:()=>Wr,SELU_SCALE:()=>tI,SELU_SCALEALPHA:()=>eI,applyActivation:()=>Zc,assertAndGetBroadcastShape:()=>ht,assertAxesAreInnerMostDims:()=>rD,assertParamsConsistent:()=>oz,assignToTypedArray:()=>Az,axesAreInnerMostDims:()=>Zg,calculateShapes:()=>lk,checkEinsumDimSizes:()=>Lz,checkPadOnDimRoundingMode:()=>Tn,combineLocations:()=>E1,combineRaggedTensorToTensorShapes:()=>uz,complexWithEvenIndex:()=>Cz,complexWithOddIndex:()=>Ez,computeConv2DInfo:()=>nd,computeConv3DInfo:()=>v1,computeDefaultPad:()=>Fg,computeDilation2DInfo:()=>tR,computeOptimalWindowSize:()=>cz,computeOutAndReduceShapes:()=>$1,computeOutShape:()=>lz,computePool2DInfo:()=>x1,computePool3DInfo:()=>nR,convertConv2DDataFormat:()=>w1,decodeEinsumEquation:()=>Mz,eitherStridesOrDilationsAreOne:()=>Qr,expandShapeToKeepDim:()=>qs,exponent:()=>Rz,exponents:()=>Fz,fromStringArrayToUint8:()=>aP,fromUint8ToStringArray:()=>rP,getAxesPermutation:()=>A1,getBroadcastDims:()=>_1,getComplexWithIndex:()=>$z,getEinsumComputePath:()=>zz,getEinsumPermutation:()=>Oz,getFusedBiasGradient:()=>Xc,getFusedDyActivation:()=>Kc,getImageCenter:()=>mz,getInnerMostAxes:()=>aD,getPermuted:()=>gz,getRaggedRank:()=>dz,getReductionAxes:()=>zt,getReshaped:()=>fz,getReshapedPermuted:()=>yz,getRowPartitionTypesHelper:()=>pz,getSliceBeginCoords:()=>bz,getSliceSize:()=>xz,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Vz,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Uz,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Gz,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>qz,getSparseReshapeInputOutputMismatchErrorMessage:()=>Xz,getSparseReshapeInputOutputMultipleErrorMessage:()=>Kz,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Hz,getSparseReshapeNegativeOutputDimErrorMessage:()=>jz,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Qz,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Zz,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Jz,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Yz,getUndoAxesPermutation:()=>Jg,isIdentityPermutation:()=>Pz,log:()=>cA,mergeRealAndImagArrays:()=>Tz,prepareAndValidate:()=>Uk,prepareSplitSize:()=>Wz,segment_util:()=>nI,shouldFuse:()=>Jc,slice_util:()=>Gt,splitRealAndImagArrays:()=>_z,stridesOrDilationsArePositive:()=>js,tupleValuesAreOne:()=>Ha,upcastType:()=>or,validateDefaultValueShape:()=>hz,validateInput:()=>Gc,validateUpdateShape:()=>xy,warn:()=>Ra});function oz(e,t){let n=e[0].length;e.forEach((a,s)=>{$(a.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),$(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((a,s)=>{for(let i=0;i<n;i++)$(i===t||a[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${a}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function lz(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Wr;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(Wr||(Wr={}));function uz(e,t,n){let r=new Array;if(n==null&&t==null)return r;if(t==null)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(n==null)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function pz(e){let t={FIRST_DIM_SIZE:Wr.FIRST_DIM_SIZE,VALUE_ROWIDS:Wr.VALUE_ROWIDS,ROW_LENGTHS:Wr.ROW_LENGTHS,ROW_SPLITS:Wr.ROW_SPLITS,ROW_LIMITS:Wr.ROW_LIMITS,ROW_STARTS:Wr.ROW_STARTS},n=[];for(let r of e)if(r in t)n.push(t[r]);else break;return n}function dz(e){return e.length===0?0:e[0]===Wr.FIRST_DIM_SIZE?e.length-1:e.length}function hz(e,t){if(e==null||t==null)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let s=e[a],i=t[a+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${s} but ragged tensor input.flatValues.shape[${a-e.length}] = ${i}`)}}var Py=30;function cz(e){return e<=Py?e:Nh(e,Math.floor(Math.sqrt(e)))}function mz(e,t,n){let r=n*(typeof e=="number"?e:e[0]),a=t*(typeof e=="number"?e:e[1]);return[r,a]}function fz(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function gz(e,t,n=!0){let r=[];if(n){r.push(t);for(let a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{let a=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):a.push(i);r.push(...a),r.push(0),r.push(...s)}return r}function yz(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function bz(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function xz(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var eI=1.7580993408473768,tI=1.0507009873554805,vz=.3275911,wz=.254829592,kz=-.284496736,Iz=1.421413741,Sz=-1.453152027,Nz=1.061405429;function Tz(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function _z(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Cz(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Ez(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function $z(e,t){let n=e[t*2],r=e[t*2+1];return{real:n,imag:r}}function Az(e,t,n,r){e[r*2]=t,e[r*2+1]=n}function Fz(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Rz(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}var Wm="->",Dz=/->/g,nw=",",rw="...";function Mz(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(Dz,"").length)/Wm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Wm}").`);let[r,a]=e.split(Wm);$(r.indexOf(rw)===-1,()=>`The ellipsis notation ("${rw}") is not supported yet.`);let s=r.split(nw),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let h=0;h<a.length;++h){let c=a[h];if(!s.some(m=>m.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let h=0;h<r.length;++h){let c=r[h];o.indexOf(c)===-1&&c!==nw&&o.push(c)}let l=new Array(s.length);for(let h=0;h<i;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error(`Found duplicate axes in input component ${s[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let c=0;c<s[h].length;++c)l[h].push(o.indexOf(s[h][c]))}let p=o.length,u=a.length,d=[];for(let h=u;h<p;++h)d.push(h);return{allDims:o,summedDims:d,idDims:l}}function Oz(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)n[a]===-1&&r.push(a);return n=n.filter(a=>a!==-1),{permutationIndices:n,expandDims:r}}function Lz(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let s=n[a].shape;for(let i=0;i<t[a].length;++i)r[t[a][i]]===void 0?r[t[a][i]]=s[i]:$(r[t[a][i]]===s[i],()=>`Expected dimension ${r[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function zz(e,t){let n=e,r=[],a=0;e.length===0&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let o=n[i],l=Bz(t,o);for(let p of l)s.indexOf(p)===-1&&(r[i].push(p),s.push(p))}return{path:n,steps:r}}function Pz(e){return e.every((t,n)=>t===n)}function Bz(e,t){let n=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function Wz(e,t,n=0){let r=[];if(typeof t=="number")$(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let a=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);$(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[n]-i}$(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Vz(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function Uz(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Gz(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Hz(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function jz(e,t){return`size ${e} must be non-negative, not ${t}`}function qz(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Kz(e,t){let n=ot(e),r=ot(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function Xz(e,t){let n=ot(e),r=ot(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function Zz(){return"segment ids must be >= 0"}function Jz(){return"segment ids are not increasing"}function Yz(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Qz(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var nI={};De(nI,{collectGatherOpShapeInfo:()=>nP,computeOutShape:()=>tP,segOpComputeOptimalWindowSize:()=>eP});function eP(e,t){let n=!1,r;for(e<=Py?(r=e,n=!0):r=Nh(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=Nh(e,r+1);return r}function tP(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function nP(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(r!==0&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let i=e.shape[n],o=[],l=1,p=1,u=1;for(let d=0;d<r;++d)o.push(e.shape[d]),l*=e.shape[d];for(let d=r;d<n;d++)o.push(e.shape[d]),p*=e.shape[d];for(let d=r;d<a;d++)o.push(t.shape[d]);for(let d=n+1;d<s;d++)o.push(e.shape[d]),u*=e.shape[d];return{batchSize:l,sliceSize:u,outerSize:p,dimSize:i,outputShape:o}}function rP(e){try{return e.map(t=>Ch(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function aP(e){return e.map(t=>Qp(t))}var ta={};De(ta,{nonMaxSuppressionV3Impl:()=>kk,nonMaxSuppressionV4Impl:()=>Ik,nonMaxSuppressionV5Impl:()=>Sk,whereImpl:()=>dk});wL();var rI={kernelName:gl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,_o(ie(n,"float32"),-1))}}},sP={kernelName:si,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=pt(ie(n,"float32")),a=nn(fe(Se(1),r));return bt(ye(e,a))}}}},iP={kernelName:ii,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=nn(fe(pt(ie(n,"float32")),1));return ye(e,r)}}}},oP={kernelName:rs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ht(n.shape,r.shape);return{a:()=>{let s=e,i=zt(n.shape,a);return i.length>0&&(s=xe(s,i)),B(s,n.shape)},b:()=>{let s=e,i=zt(r.shape,a);return i.length>0&&(s=xe(s,i)),B(s,r.shape)}}}},lP={kernelName:oi,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,a)=>{n[a]=()=>e.clone()}),n}},uP={kernelName:xl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Je(n)}}},pP={kernelName:vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Je(n)}}},dP={kernelName:li,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,nn(fe(Se(1),pt(ie(n,"float32")))))}}},hP={kernelName:ui,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=nn(J(Se(1),pt(ie(n,"float32"))));return ye(e,r)}}}},cP={kernelName:hi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ht(n.shape,r.shape);return{a:()=>{let s=J(pt(n),pt(r)),i=z(e,ye(r,s)),o=zt(n.shape,a);return o.length>0&&(i=xe(i,o)),B(i,n.shape)},b:()=>{let s=J(pt(n),pt(r)),i=bt(z(e,ye(n,s))),o=zt(r.shape,a);return o.length>0&&(i=xe(i,o)),B(i,r.shape)}}}},mP={kernelName:pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,J(pt(ie(n,"float32")),1))}}},fP={kernelName:di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,fe(Se(1),pt(ie(n,"float32"))))}}};function gP(e,t,n,r,a,s){let i=_(e,"dy","avgPool3dGrad"),o=_(t,"input","avgPool3dGrad"),l=i,p=o,u=!1;o.rank===4&&(u=!0,l=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=B(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(p.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),Tn("avgPool3dGrad",a,s);let d={dy:l,input:p},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=O.runKernel(Ap,d,h);return u?B(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var yP=L({avgPool3dGrad_:gP}),bP={kernelName:wl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>yP(e,r,a,s,i,o)}}};function xP(e,t,n,r,a){let s=_(e,"dy","avgPoolGrad"),i=_(t,"input","avgPoolGrad");$(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,p=!1;i.rank===3&&(p=!0,o=B(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),$(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let u={dy:l,input:o},d={filterSize:n,strides:r,pad:a},h=O.runKernel($p,u,d);return p?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var vP=L({avgPoolGrad_:xP}),wP={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>vP(e,r,a,s,i)}}},kP={kernelName:mi,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return!s&&!i?{a:()=>Be(e,a,!1,!0),b:()=>Be(r,e,!0,!1)}:!s&&i?{a:()=>Be(e,a,!1,!1),b:()=>Be(e,r,!0,!1)}:s&&!i?{a:()=>Be(a,e,!1,!0),b:()=>Be(r,e,!1,!1)}:{a:()=>Be(a,e,!0,!0),b:()=>Be(e,r,!0,!0)}}},IP={kernelName:kl,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>dd(e,r,a)}}},SP={kernelName:V0,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(a[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>xe(e,o,!0)}}},NP={kernelName:fi,gradFunc:e=>({x:()=>e.clone()})},TP={kernelName:gi,gradFunc:e=>({x:()=>Je(e)})},_P={kernelName:as,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>tn(br(ba(r,a),ls(r,s)),e,Je(e))}}},CP={kernelName:Rp,inputsToSave:["x"],gradFunc:rI.gradFunc},EP={kernelName:Nl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(o=>o.shape),{axis:a}=n,s=vr(a,t[0].shape)[0],i=r.map(o=>o[s]);return An(e,i,s).map(o=>()=>o)}},$P={kernelName:yi,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return $(Ha(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Ug(r.shape,e,a,i,o,l),filter:()=>Ty(r,e,a.shape,i,o,l)}}},AP={kernelName:bi,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>kn(e,a,s,i,o,1,l),filter:()=>Ty(e,r,a.shape,s,i,o,l)}}};function FP(e,t,n,r,a){let s=e;e.rank===4&&(s=B(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=B(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),$(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),$(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),$(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return O.runKernel(Tl,o,l)}var RP=L({conv3DBackpropFilter_:FP}),DP={kernelName:xi,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;$(Ha(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>N1(i.shape,e,o,a,s),filter:()=>RP(i,e,o.shape,a,s)}}},MP={kernelName:vi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(bt(Lc(ie(n,"float32"))),e)}}},OP={kernelName:wi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(zc(ie(n,"float32")),e)}}},LP={kernelName:ki,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let o=A1([a],r.rank),l=Nc(e,a,s,!i);return o!=null&&(l=We(l,o)),l}}}},zP={kernelName:Ii,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=r??[1,1];$(Ha(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,p]=t;return $(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),$(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${p.rank}.`),$(l.shape[3]===p.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),$(Qr(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),Tn("depthwiseConv2d",s,i),{x:()=>xk(l.shape,e,p,a,s,o,i),filter:()=>bk(l,e,p.shape,a,s,o,i)}}},PP={kernelName:Si,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>O.runKernel(Yo,s,n),filter:()=>O.runKernel(Qo,i,n)}}},BP={kernelName:Ti,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>O.runKernel(Al,r)}}},WP={kernelName:_i,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(mn(bt(pt(n))),2/Math.sqrt(Math.PI));return{x:()=>z(e,r)}}},VP={kernelName:Ci,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,n)}}},UP={kernelName:Rl,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>B(e,n.shape)}}},GP={kernelName:Ei,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,mn(n))}}},HP={kernelName:$i,gradFunc:e=>({x:()=>Je(e)})},jP={kernelName:Ai,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ht(n.shape,r.shape);return{a:()=>{let s=ye(e,ie(r,"float32")),i=zt(n.shape,a);return i.length>0?B(xe(s,i),n.shape):s},b:()=>{let s=z(e,ie(n,"float32")),i=zt(r.shape,a);i.length>0&&(s=B(xe(s,i),r.shape));let o=pt(r);return bt(ye(s,ie(o,"float32")))}}}},qP={kernelName:Fi,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=o??Se(1),p=zt(s.shape,a.shape),u=[];if(s.rank===1){for(let f=0;f<a.shape.length-1;++f)u.push(a.shape[f]);u.push(1)}let d=fe(a,s),h=z(e,l),c=Mc(J(i,Se(r))),m=z(z(z(c,c),c),Se(-.5));return{x:()=>s.rank===1?B(z(z(e,Un(B(c,[1,1,1,s.shape[0]]),u)),l),a.shape):B(z(z(e,c),l),a.shape),mean:()=>{let f=z(z(c,Se(-1)),h);return s.rank===1&&(f=xe(f,p)),B(f,s.shape)},variance:()=>{let f=z(z(m,d),h);return s.rank===1&&(f=xe(f,p)),B(f,s.shape)},scale:()=>{let f=z(d,c),g=z(e,f);return s.rank===1&&(g=xe(g,p)),B(g,s.shape)},offset:()=>{let f=e;return s.rank===1&&(f=xe(f,p)),B(f,s.shape)}}}},KP={kernelName:Ml,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s,batchDims:i}=n,o=vr(s,r.shape)[0],l=(p,u,d)=>()=>{let h=p.shape,c=u.size,m=h.slice(0,o),f=m.length,g=h.slice(s,h.length).slice(1),y=g.length,b=aw(0,f),x=aw(f+1,f+1+y),v=sw([m,[c],g]),I=B(d,v),N=B(u,[c]),C=sw([[f],b,x]),E=We(I,C),A=jc(E,N,p.shape[o]),R=Jg(C);return A=We(A,R),A};if(i===1){let p=r.shape[0],u=r.split(p,0);return{x:()=>Lt(u.map((d,h)=>l(d,a.slice(h,1),e.slice(h,1))())).reshape(r.shape),indices:()=>a}}else return{x:l(r,a,e),indices:()=>a}}};function aw(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function sw(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var XP={kernelName:Ri,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Je(n),b:()=>Je(r)}}},ZP={kernelName:Di,gradFunc:e=>({x:()=>ie(e,"float32")})},JP={kernelName:Mi,gradFunc:e=>({x:()=>Je(e)})},YP={kernelName:Oi,gradFunc:e=>({x:()=>Je(e)})},QP={kernelName:Li,gradFunc:e=>({x:()=>Je(e)})},eB={kernelName:zi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=_n(r,0);return{x:()=>tn(s,e,z(e,a))}}},tB={kernelName:Bi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,J(n,1))}}},nB={kernelName:Pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,ie(n,"float32"))}}},rB={kernelName:G0,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let s=mn(r);return fe(e,z(xe(e,a,!0),s))}}}};function aB(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return O.runKernel(Gl,o,l)}var sB=L({localResponseNormalizationBackprop_:aB}),iB={kernelName:Wi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>sB(r,a,e,s,i,o,l)}}};function aI(e,t,n,r){return t.rank<n.rank&&(t=B(t,qs(t.shape,r))),e.rank<n.rank&&(e=B(e,qs(e.shape,r))),{x:()=>z(e,ie(Hn(n,t),e.dtype))}}var iw={kernelName:Vi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=vr(a,s.shape),l=aI(e,i,s,o);return{x:()=>l.x()}}},oB={kernelName:Ui,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,ie(ba(n,r),"float32")),b:()=>z(e,ie(nl(n,r),"float32"))}}};function lB(e,t,n,r,a,s,i){let o=_(e,"dy","maxPool3dGrad"),l=_(t,"input","maxPool3dGrad"),p=_(n,"output","maxPool3dGrad"),u=o,d=l,h=p,c=!1;l.rank===4&&(c=!0,u=B(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=B(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=B(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),$(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),$(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),Tn("maxPool3dGrad",s,i);let m={dy:u,input:d,output:h},f={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=O.runKernel(zp,m,f);return c?B(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var uB=L({maxPool3dGrad_:lB}),pB={kernelName:Hl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>uB(e,r,a,s,i,o,l)}}};function dB(e,t,n,r,a,s,i){let o=_(e,"dy","maxPoolGrad"),l=_(t,"input","maxPoolGrad"),p=_(n,"output","maxPoolGrad");$(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),$(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),$(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Tn("maxPoolGrad",s,i);let u={dy:o,input:l,output:p},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return O.runKernel(Lp,u,d)}var hB=L({maxPoolGrad_:dB}),cB={kernelName:Gi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>hB(e,r,a,s,i,o)}}},mB={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=vr(a,r.shape),i=$1(r.shape,s)[1],o=ot(i);return{x:()=>{let l=r.shape.slice();s.forEach(u=>{l[u]=1});let p=B(e,l);return ye(z(p,$n(r.shape,"float32")),o)}}}},fB={kernelName:ji,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=vr(a,s.shape),l=aI(e,i,s,o);return{x:()=>l.x()}}},gB={kernelName:qi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,ie(ls(n,r),"float32")),b:()=>z(e,ie(_n(n,r),"float32"))}}},yB={kernelName:Ki,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ze(e,s,r.shape)}}},bB={kernelName:Xi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ht(n.shape,r.shape);return{a:()=>{let s=zt(n.shape,a);return s.length>0?B(xe(e,s),n.shape):e},b:()=>{let s=z(e,bt(wu(ye(n,r)))),i=zt(r.shape,a);return i.length>0?B(xe(s,i),r.shape):s}}}},xB={kernelName:Zi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ht(n.shape,r.shape);return{a:()=>{let s=z(e,ie(r,"float32")),i=zt(n.shape,a);return i.length>0?B(xe(s,i),n.shape):s},b:()=>{let s=z(e,ie(n,"float32")),i=zt(r.shape,a);return i.length>0?B(xe(s,i),r.shape):s}}}},vB={kernelName:ql,gradFunc:e=>({x:()=>bt(e)})},wB={kernelName:Ji,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Nt(n.shape,"float32")}}},kB={kernelName:Yl,gradFunc:e=>({x:()=>Je(e)})},IB={kernelName:Ql,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return Et(e,r).map(a=>()=>a)}},ow={kernelName:Yi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ze(e,s,r.shape)}}},SB={kernelName:Qi,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=ht(s.shape,i.shape);return{a:()=>{let l=ie(i,"float32"),p=z(e,z(l,Zr(s,fe(l,Se(1))))),u=zt(s.shape,o);return u.length>0&&(p=xe(p,u)),B(p,s.shape)},b:()=>{let l=_n(s,0),p=tn(l,jn(s),Je(s)),u=z(e,z(a,p)),d=zt(i.shape,o);return d.length>0&&(u=xe(u,d)),B(u,i.shape)}}}},NB={kernelName:eo,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=_n(n,0);return{x:()=>tn(a,e,z(e,r)),alpha:()=>{let s=tn(a,Je(e),z(e,n)),i=zt(r.shape,e.shape);return i.length>0&&(s=xe(s,i)),B(s,r.shape)}}}};function TB(e,t,n){let r=e.shape.slice();r[n]=1;let a=B(t,r),s=gp(e,n,!0,!1),i=gp(e,n,!0,!0),o=z(s,i);return z(a,o)}function _B(e,t,n){let r=e.shape.length,a=r-n.length,s=T.getAxesPermutation(n,r),i=e;s!=null&&(i=We(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce((d,h)=>d*h,1);o.push(l);let p=i.reshape(o),u=TB(p,t,a);if(u=u.reshape(i.shape),s!=null){let d=T.getUndoAxesPermutation(s);u=We(u,d)}return u}var CB={kernelName:to,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return a==null?s=r.shape.map((i,o)=>o):typeof a=="number"?s=[a]:s=a,{x:()=>_B(r,e,s)}}},EB={kernelName:Ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ht(n.shape,r.shape);return{a:()=>{let s=ye(e,ie(r,"float32")),i=zt(n.shape,a);return i.length>0?B(xe(s,i),n.shape):s},b:()=>{let s=z(e,ie(n,"float32")),i=zt(r.shape,a);i.length>0&&(s=B(xe(s,i),r.shape));let o=pt(r);return bt(ye(s,ie(o,"float32")))}}}},$B={kernelName:no,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,bt(pt(n)))}}},AB={kernelName:io,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(ls(n,6),_o(n));return{x:()=>z(e,ie(r,"float32"))}}},FB={kernelName:ro,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,ie(_o(n),"float32"))}}},RB={kernelName:eu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,n.shape)}}},DB={kernelName:so,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(nu,a,n)}}},MB={kernelName:ao,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(tu,a,n)}}},OB={kernelName:oo,gradFunc:(e,t,n)=>{let{dims:r}=n,a=vr(r,e.shape);return{x:()=>ur(e,a)}}},LB={kernelName:lo,gradFunc:e=>({x:()=>Je(e)})},zB={kernelName:uo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>bt(ye(e,z(Zr(n,1.5),2)))}}},PB={kernelName:iu,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ie(Je(n),"float32"),t:()=>z(e,ie(n,e.dtype)),e:()=>z(e,ie(ud(n),e.dtype))}}},BB={kernelName:po,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=_n(n,Se(0)),a=Se(eI),s=Se(tI),i=z(e,s),o=z(z(e,a),mn(ie(n,"float32")));return tn(r,i,o)}}}},WB={kernelName:fo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(n,fe(Se(1),n)))}}},VB={kernelName:mo,gradFunc:e=>({x:()=>Je(e)})},UB={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(ad(ie(n,"float32")),e)}}},GB={kernelName:co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(Sc(ie(n,"float32")),e)}}},HB={kernelName:ou,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Yk(r,a,s),p=[];for(let u=0;u<e.rank;u++)p.push([o[u],i[u]-o[u]-l[u]]);return{x:()=>Dr(e,p)}}},jB={kernelName:xo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=!0,i=z(e,r);return{logits:()=>fe(i,z(xe(i,[a],s),r))}}},qB={kernelName:go,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,yr(n))}}},lw={kernelName:lu,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>rd(e,r,a)}}},uw={kernelName:uu,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>dt(e,r)}}},KB={kernelName:yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,z(nn(ie(n,"float32")),2))}}},XB={kernelName:Gp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(ie(n,"float32"),2))}}},ZB={kernelName:vo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Se(2);return{a:()=>z(e,z(a,fe(n,r))),b:()=>z(e,z(a,fe(r,n)))}}},JB={kernelName:is,gradFunc:e=>({x:()=>Je(e)})},YB={kernelName:wo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ht(n.shape,r.shape);return{a:()=>{let s=e,i=zt(n.shape,a);return i.length>0&&(s=xe(s,i)),B(s,n.shape)},b:()=>{let s=e,i=zt(r.shape,a);return i.length>0&&(s=xe(s,i)),B(bt(s),r.shape)}}}},QB={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;vr(s,r.shape).forEach(l=>{a[l]=1});let i=B(e,a),o=z(i,$n(r.shape,"float32"));return{x:()=>o}}},eW={kernelName:ko,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ye(e,pt(ad(n)))}}},tW={kernelName:Io,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(fe(Se(1),pt(n)),e)}}},nW={kernelName:ss,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let s=Je(r);if(r.rank===1)for(let i=0;i<a[0];++i)s=J(s,Ze(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)s=J(s,Ze(e,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)s=J(s,Ze(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)for(let p=0;p<a[3];++p)s=J(s,Ze(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2],p*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return s}}}},rW={kernelName:pa,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Jg(a);return{x:()=>We(e,s)}}},aW={kernelName:fu,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Lt(e,a)}}},sW={kernelName:Zp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iW(e,n)}}};function iW(e,t){let n=ea(t,Je(t)),r=ku(e,n),a=ba(t,Se(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=Qt(a,o+1);a=br(a,$n(r.shape,"bool"));let i=Je(r);return tn(a,r,i)}var oW={kernelName:gu,gradFunc:e=>({x:()=>Je(e)})},lW=[rI,sP,iP,oP,lP,uP,pP,dP,hP,cP,mP,fP,bP,wP,kP,IP,SP,NP,TP,_P,CP,EP,AP,$P,DP,MP,OP,LP,zP,PP,EB,BP,WP,VP,UP,GP,jP,HP,qP,KP,XP,ZP,JP,YP,QP,eB,tB,nB,rB,iB,iw,iw,oB,pB,cB,mB,fB,gB,yB,bB,xB,vB,wB,kB,IB,ow,ow,SB,NB,CB,$B,AB,FB,RB,DB,MB,OB,LB,zB,PB,BB,WB,VB,UB,GB,HB,jB,qB,lw,lw,uw,uw,KB,ZB,XB,JB,YB,QB,eW,tW,nW,rW,aW,sW,oW];for(let e of lW)H0(e);Y().prototype.abs=function(){return this.throwIfDisposed(),Dt(this)};Y().prototype.acos=function(){return this.throwIfDisposed(),Sg(this)};Y().prototype.acosh=function(){return this.throwIfDisposed(),Ng(this)};Y().prototype.add=function(e){return this.throwIfDisposed(),J(this,e)};Y().prototype.all=function(e,t){return this.throwIfDisposed(),wc(this,e,t)};Y().prototype.any=function(e,t){return this.throwIfDisposed(),cp(this,e,t)};Y().prototype.argMax=function(e){return this.throwIfDisposed(),Hs(this,e)};Y().prototype.argMin=function(e){return this.throwIfDisposed(),Tg(this,e)};Y().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),B(this,[])};Y().prototype.asType=function(e){return this.throwIfDisposed(),ie(this,e)};Y().prototype.as1D=function(){return this.throwIfDisposed(),B(this,[this.size])};Y().prototype.as2D=function(e,t){return this.throwIfDisposed(),B(this,[e,t])};Y().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),B(this,[e,t,n])};Y().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),B(this,[e,t,n,r])};Y().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),B(this,[e,t,n,r,a])};Y().prototype.asin=function(){return this.throwIfDisposed(),_g(this)};Y().prototype.asinh=function(){return this.throwIfDisposed(),Cg(this)};Y().prototype.atan=function(){return this.throwIfDisposed(),Eg(this)};Y().prototype.atan2=function(e){return this.throwIfDisposed(),$g(this,e)};Y().prototype.atanh=function(){return this.throwIfDisposed(),Ag(this)};Y().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ya(this,e,t,n,r)};Y().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),rd(this,e,t)};Y().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),So(this,e,t,n,r,a)};Y().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Rs(this,e)};Y().prototype.cast=function(e){return this.throwIfDisposed(),ie(this,e)};Y().prototype.ceil=function(){return this.throwIfDisposed(),zg(this)};Y().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),cn(this,e,t)};Y().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ge&&(e=[e]),dt([this,...e],t)};Y().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),kc(this,e,t,n,r,a,s)};Y().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Ic(this,e,t,n,r,a)};Y().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),kn(this,e,t,n,r,a,s)};Y().prototype.cos=function(){return this.throwIfDisposed(),ad(this)};Y().prototype.cosh=function(){return this.throwIfDisposed(),Sc(this)};Y().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),gp(this,e,t,n)};Y().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Nc(this,e,t,n)};Y().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),jg(this,e,t)};Y().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),No(this,e,t,n,r,a,s)};Y().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),qg(this,e,t,n,r,a)};Y().prototype.divNoNan=function(e){return this.throwIfDisposed(),Kg(this,e)};Y().prototype.div=function(e){return this.throwIfDisposed(),ye(this,e)};Y().prototype.dot=function(e){return this.throwIfDisposed(),Xg(this,e)};Y().prototype.elu=function(){return this.throwIfDisposed(),xu(this)};Y().prototype.equal=function(e){return this.throwIfDisposed(),Hn(this,e)};Y().prototype.erf=function(){return this.throwIfDisposed(),Tc(this)};Y().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Yg(this,e,t)};Y().prototype.exp=function(){return this.throwIfDisposed(),mn(this)};Y().prototype.expandDims=function(e){return this.throwIfDisposed(),Qt(this,e)};Y().prototype.expm1=function(){return this.throwIfDisposed(),Qg(this)};Y().prototype.fft=function(){return this.throwIfDisposed(),md(this)};Y().prototype.flatten=function(){return this.throwIfDisposed(),B(this,[this.size])};Y().prototype.floor=function(){return this.throwIfDisposed(),wu(this)};Y().prototype.floorDiv=function(e){return this.throwIfDisposed(),vc(this,e)};Y().prototype.gather=function(e,t,n){return this.throwIfDisposed(),ku(this,e,t,n)};Y().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ba(this,e)};Y().prototype.greater=function(e){return this.throwIfDisposed(),_n(this,e)};Y().prototype.ifft=function(){return this.throwIfDisposed(),il(this)};Y().prototype.irfft=function(){return this.throwIfDisposed(),Bc(this)};Y().prototype.isFinite=function(){return this.throwIfDisposed(),ey(this)};Y().prototype.isInf=function(){return this.throwIfDisposed(),ty(this)};Y().prototype.isNaN=function(){return this.throwIfDisposed(),ny(this)};Y().prototype.leakyRelu=function(e){return this.throwIfDisposed(),id(this,e)};Y().prototype.lessEqual=function(e){return this.throwIfDisposed(),ls(this,e)};Y().prototype.less=function(e){return this.throwIfDisposed(),nl(this,e)};Y().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),ry(this,e,t,n,r)};Y().prototype.logSigmoid=function(){return this.throwIfDisposed(),ay(this)};Y().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ec(this,e)};Y().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ld(this,e,t)};Y().prototype.log=function(){return this.throwIfDisposed(),jn(this)};Y().prototype.log1p=function(){return this.throwIfDisposed(),od(this)};Y().prototype.logicalAnd=function(e){return this.throwIfDisposed(),br(this,e)};Y().prototype.logicalNot=function(){return this.throwIfDisposed(),ud(this)};Y().prototype.logicalOr=function(e){return this.throwIfDisposed(),$c(this,e)};Y().prototype.logicalXor=function(e){return this.throwIfDisposed(),sy(this,e)};Y().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Be(this,e,t,n)};Y().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Zt(this,e,t,n,r)};Y().prototype.max=function(e,t){return this.throwIfDisposed(),ir(this,e,t)};Y().prototype.maximum=function(e){return this.throwIfDisposed(),ea(this,e)};Y().prototype.mean=function(e,t){return this.throwIfDisposed(),St(this,e,t)};Y().prototype.min=function(e,t){return this.throwIfDisposed(),tl(this,e,t)};Y().prototype.minimum=function(e){return this.throwIfDisposed(),qa(this,e)};Y().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),oy(this,e,t)};Y().prototype.mod=function(e){return this.throwIfDisposed(),ly(this,e)};Y().prototype.mul=function(e){return this.throwIfDisposed(),z(this,e)};Y().prototype.neg=function(){return this.throwIfDisposed(),bt(this)};Y().prototype.norm=function(e,t,n){return this.throwIfDisposed(),vu(this,e,t,n)};Y().prototype.notEqual=function(e){return this.throwIfDisposed(),Ks(this,e)};Y().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),rl(this,e,t,n)};Y().prototype.onesLike=function(){return this.throwIfDisposed(),qn(this)};Y().prototype.pad=function(e,t){return this.throwIfDisposed(),Dr(this,e,t)};Y().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),uy(this,e,t,n,r,a,s)};Y().prototype.pow=function(e){return this.throwIfDisposed(),Zr(this,e)};Y().prototype.prelu=function(e){return this.throwIfDisposed(),hd(this,e)};Y().prototype.prod=function(e,t){return this.throwIfDisposed(),py(this,e,t)};Y().prototype.reciprocal=function(){return this.throwIfDisposed(),fy(this)};Y().prototype.relu=function(){return this.throwIfDisposed(),it(this)};Y().prototype.relu6=function(){return this.throwIfDisposed(),Rc(this)};Y().prototype.reshapeAs=function(e){return this.throwIfDisposed(),B(this,e.shape)};Y().prototype.reshape=function(e){return this.throwIfDisposed(),B(this,e)};Y().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Nk(this,e,t,n)};Y().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Tk(this,e,t,n)};Y().prototype.reverse=function(e){return this.throwIfDisposed(),ur(this,e)};Y().prototype.rfft=function(){return this.throwIfDisposed(),fd(this)};Y().prototype.round=function(){return this.throwIfDisposed(),Dc(this)};Y().prototype.rsqrt=function(){return this.throwIfDisposed(),Mc(this)};Y().prototype.selu=function(){return this.throwIfDisposed(),Oc(this)};Y().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Iu(this,e,t,n,r,a,s)};Y().prototype.sigmoid=function(){return this.throwIfDisposed(),yr(this)};Y().prototype.sign=function(){return this.throwIfDisposed(),gy(this)};Y().prototype.sin=function(){return this.throwIfDisposed(),Lc(this)};Y().prototype.sinh=function(){return this.throwIfDisposed(),zc(this)};Y().prototype.slice=function(e,t){return this.throwIfDisposed(),Ze(this,e,t)};Y().prototype.softmax=function(e){return this.throwIfDisposed(),ps(this,e)};Y().prototype.softplus=function(){return this.throwIfDisposed(),To(this)};Y().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),dd(this,e,t)};Y().prototype.split=function(e,t){return this.throwIfDisposed(),An(this,e,t)};Y().prototype.sqrt=function(){return this.throwIfDisposed(),nn(this)};Y().prototype.square=function(){return this.throwIfDisposed(),pt(this)};Y().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Wc(this,e)};Y().prototype.squeeze=function(e){return this.throwIfDisposed(),ds(this,e)};Y().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ge?[this,e]:[this,...e];return Lt(n,t)};Y().prototype.step=function(e){return this.throwIfDisposed(),_o(this,e)};Y().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),yy(this,e,t,n,r,a,s,i,o)};Y().prototype.sub=function(e){return this.throwIfDisposed(),fe(this,e)};Y().prototype.sum=function(e,t){return this.throwIfDisposed(),xe(this,e,t)};Y().prototype.tan=function(){return this.throwIfDisposed(),by(this)};Y().prototype.tanh=function(){return this.throwIfDisposed(),ja(this)};Y().prototype.tile=function(e){return this.throwIfDisposed(),Un(this,e)};Y().prototype.toBool=function(){return this.throwIfDisposed(),ie(this,"bool")};Y().prototype.toFloat=function(){return this.throwIfDisposed(),ie(this,"float32")};Y().prototype.toInt=function(){return this.throwIfDisposed(),ie(this,"int32")};Y().prototype.topk=function(e,t){return this.throwIfDisposed(),vy(this,e,t)};Y().prototype.transpose=function(e){return this.throwIfDisposed(),We(this,e)};Y().prototype.unique=function(e){return this.throwIfDisposed(),wy(this,e)};Y().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),jc(this,e,t)};Y().prototype.unstack=function(e){return this.throwIfDisposed(),Et(this,e)};Y().prototype.where=function(e,t){return this.throwIfDisposed(),tn(e,this,t)};Y().prototype.zerosLike=function(){return this.throwIfDisposed(),Je(this)};var Aa=class sI extends Error{constructor(t){super(t),Object.setPrototypeOf(this,sI.prototype)}},Gr=class iI extends Error{constructor(t){super(t),Object.setPrototypeOf(this,iI.prototype)}},V=class oI extends Error{constructor(t){super(t),Object.setPrototypeOf(this,oI.prototype)}},He=class lI extends Error{constructor(t){super(t),Object.setPrototypeOf(this,lI.prototype)}},uW=class uI extends Error{constructor(t){super(t),Object.setPrototypeOf(this,uI.prototype)}},pI=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Zs(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Vr(e,t){if(!e)throw new uW(t)}function pw(e,t){let n=0;for(let r of e)r===t&&n++;return n}function En(e){return e.length===1?e[0]:e}function st(e){return Array.isArray(e)?e:[e]}function ia(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Cs(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var cr={};function By(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function wf(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>wf(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[n]=r.value:wf(r))}}}function yd(e,t={},n={},r="object",a=!1){if(typeof e=="string"){let s=e,i;if(s in n)i=n[s];else if(s in cr)i=cr[s];else if(i=t[s],i==null)throw new V(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new V(`${r}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in n?[o,l]=n[i]:i in cr?[o,l]=cr.className:i in t&&([o,l]=t[i]),o==null)throw new V(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let p={};for(let c of Object.keys(cr))p[c]=cr[c];for(let c of Object.keys(n))p[c]=n[c];let u=s.config;u.customObjects=p;let d=Object.assign({},cr);for(let c of Object.keys(n))cr[c]=n[c];wf(s.config);let h=l(o,s.config,n,a);return cr=Object.assign({},d),h}else{let p=Object.assign({},cr);for(let d of Object.keys(n))cr[d]=n[d];let u=new o(s.config);return cr=Object.assign({},p),u}}}function pW(e,t){return e<t?-1:e>t?1:0}function Qd(e,t){return-1*pW(e,t)}function Pa(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function dW(e){if(e==null)throw new V(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Co(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new V(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Wy(e,t,n=0,r=1/0){return Vr(n>=0),Vr(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(a=>typeof a===t)}function en(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>en(n,`element ${r+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${dI(e)}.`)}function dI(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>dI(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function hW(e,t,n){let r=n!=null?n():w.now(),a;return(...s)=>{let i=n!=null?n():w.now();return i-r<t||(r=i,a=e(...s)),a}}function hI(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var cW=0;function cI(){return cW++}var eh={};function Qc(e=""){return e in eh||(eh[e]=0),eh[e]+=1,e+eh[e].toString()}var mW=["channelsFirst","channelsLast"],fW=["nearest","bilinear"],gW=["valid","same","causal"],yW=["max","avg"],bW=["sum","mul","concat","ave"],Bo=new Map;function $t(e){Co(mW,"DataFormat",e)}function xW(e){Co(fW,"InterpolationFormat",e)}function pr(e){Co(gW,"PaddingMode",e)}function mI(e){Co(yW,"PoolMode",e)}var ap=[],dw="/";function Ds(e,t){ap.push(e);try{let n=t();return ap.pop(),n}catch(n){throw ap.pop(),n}}function vW(){return ap.length===0?"":ap.join(dw)+dw}function fI(e){if(!yI(e))throw new Error("Not a valid tensor name: '"+e+"'");return vW()+e}function gI(e){if(!yI(e))throw new Error("Not a valid tensor name: '"+e+"'");Bo.has(e)||Bo.set(e,0);let t=Bo.get(e);if(Bo.set(e,Bo.get(e)+1),t>0){let n=`${e}_${t}`;return Bo.set(n,1),n}else return e}var wW=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function yI(e){return!!e.match(wW)}function kW(e){return e===parseInt(e.toString(),10)}function Ba(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function ll(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function Xa(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function $r(e,t){if(t<e)throw new V(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}var Vm;function Ut(){return Vm==null&&(Vm=vg().epsilon()),Vm}function Ar(){return"channelsLast"}function ma(e,t){return ie(e,t)}function bd(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),B(e,n)}function IW(e,t){return W(()=>{if(e.shape.length!==2)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=bd(e,1);return kf(n,[1,t,1])})}function SW(e){let t=[Ba(e.shape)];return B(e,t)}function NW(e){if(e.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Ba(e.shape,1)];return B(e,t)}function Ms(e,t,n){return W(()=>{switch(e.rank){case 1:return cd(e,t,n);case 2:return Pc(e,[t,0],[n,e.shape[1]]);case 3:return Su(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return sl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ze(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ze(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Um(e,t,n){return W(()=>{switch(e.rank){case 1:return cd(e,t,n);case 2:return Pc(e,[0,t],[e.shape[0],n]);case 3:return Su(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return sl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function th(e,t,n,r){return W(()=>{switch(e.rank){case 1:return cd(e,t,n);case 2:switch(r){case 1:return Ms(e,t,n);case 2:return Um(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Ms(e,t,n);case 2:return Su(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Um(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Ms(e,t,n);case 2:return sl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return sl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Um(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Vy(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),dt(e,t)}function hw(e,t){switch(e.rank){case 1:return Pg([e,t]);case 2:return Bg([e,t],0);case 3:return Wg([e,t],0);case 4:return Vg([e,t],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function kf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new V(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Un(e,t)}function em(e,t=0,n=1,r,a){return Fc(e,t,n,r,a)}function Kr(e,t,n,r){if(e.rank<2||t.rank<2)throw new He(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let a=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(a!==s)throw new He(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return ol.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?If(e.rank,r,Ar()):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=B(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),p=[...i,o],u=Array.from({length:t.rank},(h,c)=>c===0?t.rank-2:c<=t.rank-2?c-1:c);t=B(We(t,u),[l,-1]);let d=[...a,...p];return B(ol.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?If(e.rank,r,Ar()):null,activation:n}),d)}}function bI(e,t,n){return W(()=>(Array.isArray(t)?t=at(t,"int32"):t=ie(t,"int32"),ku(e,t,n)))}function xd(e){return z(e,e)}function If(e,t,n){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new V(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return r.length===1?B(t,[1,r[0],1,1,1]):B(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?B(t,[1,1,1,1,r[0]]):B(t,[1].concat(r))}else if(e===4){if(n==="channelsFirst")return r.length===1?B(t,[1,r[0],1,1]):B(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?B(t,[1,1,1,r[0]]):B(t,[1].concat(r))}else if(e===3){if(n==="channelsFirst")return r.length===1?B(t,[1,r[0],1]):B(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?B(t,[1,1,r[0]]):B(t,[1].concat(r))}else if(e<3)return t;throw new V(`Unsupported input rank by biasAdd: ${t.rank}`)}function Mr(e,t,n){return W(()=>(n==null&&(n=Ar()),$t(n),J(e,If(e.rank,t,n))))}function TW(e,t=1){if(t!==1)throw new He(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return xu(e)}function _W(e){return W(()=>ye(e,J(Dt(e),1)))}function xI(e,t,n,r){return W(()=>Sy(e,t,n,r))}function CW(e){return W(()=>{let t=J(.5,z(.2,e));return cn(t,0,1)})}function vd(e,t,n=!1){return n?e():t()}var EW=["fanIn","fanOut","fanAvg"],$W=["normal","uniform","truncatedNormal"];function AW(e){Co(EW,"FanMode",e)}function FW(e){Co($W,"Distribution",e)}var wr=class extends ne.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Uy=class extends wr{apply(e,t){return Nt(e,t)}};Uy.className="Zeros";ne.registerClass(Uy);var tm=class extends wr{apply(e,t){return $n(e,t)}};tm.className="Ones";ne.registerClass(tm);var Gy=class extends wr{constructor(e){if(super(),typeof e!="object")throw new V(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new V(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return W(()=>z(Se(this.value),$n(e,t)))}getConfig(){return{value:this.value}}};Gy.className="Constant";ne.registerClass(Gy);var Hy=class extends wr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return us(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Hy.className="RandomUniform";ne.registerClass(Hy);var jy=class extends wr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new He(`randomNormal does not support dType ${t}.`);return em(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};jy.className="RandomNormal";ne.registerClass(jy);var qy=class extends wr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new He(`truncatedNormal does not support dType ${t}.`);return Hc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};qy.className="TruncatedNormal";ne.registerClass(qy);var Ky=class extends wr{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return W(()=>{if(e.length!==2||e[0]!==e[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return z(this.gain,_c(e[0]))})}getConfig(){return{gain:this.gain}}};Ky.className="Identity";ne.registerClass(Ky);function RW(e,t="channelsLast"){let n,r;if($t(t),e.length===2)n=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let a=Ba(e,2);n=e[1]*a,r=e[0]*a}else if(t==="channelsLast"){let a=Ba(e,0,e.length-2);n=e[e.length-2]*a,r=e[e.length-1]*a}}else{let a=Ba(e);n=Math.sqrt(a),r=Math.sqrt(a)}return[n,r]}var Dn=class extends wr{constructor(e){if(super(),e.scale<0)throw new V(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,AW(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,FW(this.distribution),this.seed=e.seed}apply(e,t){let n=RW(e),r=n[0],a=n[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,r):this.mode==="fanOut"?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new He(`${this.getClassName()} does not support dType ${t}.`);return Hc(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return us(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Dn.className="VarianceScaling";ne.registerClass(Dn);var nm=class extends Dn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Dn.className}};nm.className="GlorotUniform";ne.registerClass(nm);var rm=class extends Dn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Dn.className}};rm.className="GlorotNormal";ne.registerClass(rm);var am=class extends Dn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Dn.className}};am.className="HeNormal";ne.registerClass(am);var sm=class extends Dn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Dn.className}};sm.className="HeUniform";ne.registerClass(sm);var im=class extends Dn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Dn.className}};im.className="LeCunNormal";ne.registerClass(im);var om=class extends Dn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Dn.className}};om.className="LeCunUniform";ne.registerClass(om);var Xy=class extends wr{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return W(()=>{if(e.length<2)throw new He("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;let n=w.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=[Math.max(r,n),Math.min(r,n)],i=em(s,0,1,t,this.seed),o=Cy.qr(i,!1),l=o[0],p=o[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return l=z(l,p.sign()),n<r&&(l=l.transpose()),z(Se(this.gain),l.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}};Xy.className="Orthogonal";ne.registerClass(Xy);var cw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function mw(e,t={}){return yd(e,ne.SerializationMap.getMap().classNameMap,t,"initializer")}function Tt(e){return By(e)}function wt(e){if(typeof e=="string"){let t=e in cw?cw[e]:e;if(t==="GlorotNormal")return new rm;if(t==="GlorotUniform")return new nm;if(t==="HeNormal")return new am;if(t==="HeUniform")return new sm;if(t==="LeCunNormal")return new im;if(t==="LeCunUniform")return new om;{let n={};return n.className=t,n.config={},mw(n)}}else return e instanceof wr?e:mw(e)}function Sf(e){return Array.isArray(e)&&Array.isArray(e[0])}function Fh(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ae(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new V(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function tt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new V(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Rh(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((r,a)=>r*a);return t}var fw="Variable",vI=class{constructor(e,t="float32",n=fw,r=!0,a=null){this.dtype=t??"float32",this.shape=e.shape,this.id=cI(),n=n??fw,this.originalName=fI(n),this.name=gI(this.originalName),this.trainable_=r,this.constraint=a,this.val=ky(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),DW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function DW(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Nf(e){return e.map(t=>t.read())}function Zy(e){e.forEach(t=>{t[0].write(t[1])})}var Mt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Fr=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=cI(),s!=null&&(this.originalName=fI(s),this.name=gI(this.originalName)),this.rank=t.length}},MW=0,lm=class{constructor(e,t){this.callArgs=t,this.id=MW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},OW=0,je=class extends ne.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=OW++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ia(n)+"_"+Qc(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),n=[a].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Gr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new V(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return En(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return En(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Aa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Aa(`Layer ${this.name} is not connected, no input to return.`);return En(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Aa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Aa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return En(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=st(e);if(this.inputSpec==null||this.inputSpec.length===0)return;let n=st(this.inputSpec);if(t.length!==n.length)throw new V(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){let a=t[r],s=n[r];if(s==null)continue;let i=a.rank;if(s.ndim!=null&&i!==s.ndim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(s.maxNDim!=null&&i>s.maxNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(s.minNDim!=null&&i<s.minNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(s.dtype!=null&&a.dtype!==s.dtype)throw new V(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${a.dtype}.`);if(s.axes){let o=a.shape;for(let l in s.axes){let p=Number(l),u=s.axes[l],d=p>=0?o[p]:o[o.length+p];if(u!=null&&[u,null].indexOf(d)===-1)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected axis ${p} of input shape to have value ${u} but got shape ${o}.`)}}if(s.shape!=null)for(let o=0;o<s.shape.length;++o){let l=s.shape[o],p=a.shape[o];if(l!=null&&p!=null&&l!==p)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=st(e),r=PW(e),a=BW(e);if(r===a)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ds(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of st(e))s.push(i.shape);this.build(En(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,s);let i=st(s),o=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=En(o),this.activityRegularizer!=null)throw new He("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=LW(e),i=this.computeOutputShape(s),o,l=zW(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((p,u)=>new Fr(l,p,this,st(e),t,this.name,u)):o=new Fr(l,i,this,st(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new He("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{n!=null&&e[r]!=null&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Aa(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Aa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Gr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Rh(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Nf(e?this.trainableWeights:this.weights)}setWeights(e){W(()=>{let t=this.weights;if(t.length!==e.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],r=Nf(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!w.arraysEqual(s.shape,o.shape))throw new V(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Zy(n)})}addWeight(e,t,n,r,a,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new V(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(r=o!=null?o():wt("zeros"));let l=r.apply(t,n),p=new vI(l,n,e,s,i);return l.dispose(),a!=null&&this.addLoss(()=>a.apply(p.read())),s==null&&(s=!0),s?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=st(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let r=this.computeMask(e,n),a=st(t),s=st(r);if(a.length!==s.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let i=0;i<a.length;i++)a[i].kerasMask=s[i]}addInboundNode(e,t,n,r,a,s,i=null){let o=st(e);t=st(t),n=st(n),r=st(r),a=Fh(a),s=Fh(s);let l=[],p=[],u=[];for(let d of o)l.push(d.sourceLayer),p.push(d.nodeIndex),u.push(d.tensorIndex);new lm({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:u,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function LW(e){e=st(e);let t=[];for(let n of e)t.push(n.shape);return En(t)}function zW(e){return"float32"}function wI(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{let a=[];for(let s=0;s<r.inboundLayers.length;s++){let i=r.inputTensors[s],o=r.inboundLayers[s],l=r.nodeIndices[s],p=wI(i,o,l);for(let u of p)a.indexOf(u)===-1&&a.push(u)}return a}}}function PW(e){let t=!0;for(let n of st(e))if(!(n instanceof Fr)){t=!1;break}return t}function BW(e){let t=!0;for(let n of st(e))if(n instanceof Fr){t=!1;break}return t}var Tu=class extends je{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Qc("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new Fr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new lm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Tu.className="InputLayer";ne.registerClass(Tu);function kI(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Tu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function WW(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ie(t,e.dtype)}catch{throw new V(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var jo=class II{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof II)for(let n in t.id2Value)this.id2Value[n]=t.id2Value[n],n in t.id2Mask&&(this.id2Mask[n]=t.id2Mask[n]);else{if(t==null)return;for(let n of t)this.add(n.key,n.value)}}add(t,n,r){if(this.id2Value[t.id]==null)this.id2Value[t.id]=WW(t,n),this.name2Id[t.name]=t.id,r!=null&&(this.id2Mask[t.id]=r);else throw new V(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Fr){if(this.id2Value[t.id]==null)throw new V(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let n=this.name2Id[t];if(n==null)throw new V(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[n]}}getMask(t){if(t instanceof Fr){if(this.id2Value[t.id]==null)throw new V(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let n=this.name2Id[t];if(n==null)throw new V(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&Re(this.id2Mask)}},Dh=new pI,Mh=new pI;function VW(e){Dh!=null&&Dh.setMaxEntries(e),Mh!=null&&Mh.setMaxEntries(e)}function Xu(e,t,n,r){let a=n==null?!1:n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(m=>m.name),l=[],p=t.names();for(let m of o)p.indexOf(m)!==-1?l.push(t.getValue(m)):l.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let u=o.join(",")+"|"+t.names().sort().join(","),d=Dh.get(u),h;if(d==null){let m=UW(i,t);d=m.sorted,h=m.recipientCounts,Dh.put(u,d),Mh.put(u,h)}h={},a||Object.assign(h,Mh.get(u));let c=new jo(t);for(let m=0;m<d.length;++m){if(r!=null){let A=Eh().numTensors;A>r.maxNumTensors&&(r.maxNumTensors=A),A<r.minNumTensors&&(r.minNumTensors=A)}let f=d[m],g=f.sourceLayer;if(g instanceof Tu)continue;let y=[],b=[],x=[],v=!1;for(let A of f.inputs){let R=c.getValue(A),F=c.getMask(A);y.push(R),b.push(F),F!=null&&(v=!0),a||(h[A.name]--,h[A.name]===0&&!t.hasKey(A)&&o.indexOf(A.name)===-1&&!R.isDisposed&&A.sourceLayer.stateful!==!0&&x.push(R))}v&&(n=n||{},n.mask=b[0]);let I=st(g.apply(y,n)),N=null;g.supportsMasking&&(N=g.computeMask(y,b));let C=HW(f),E=Array.isArray(C)?C:[C];for(let A=0;A<E.length;++A){c.hasKey(E[A])||c.add(E[A],I[A],Array.isArray(N)?N[0]:N);let R=o.indexOf(E[A].name);R!==-1&&(l[R]=I[A])}a||Re(x)}return c.disposeMasks(),s?l:l[0]}function UW(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(e.length===1){let a=gw(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:i,recipientMap:o}=gw(s,t);for(let l of i)a.has(l.name)||(n.push(l),a.add(l.name));for(let l in o)r[l]==null&&(r[l]=new Set),o[l].forEach(p=>r[l].add(p))}}return{sorted:n,recipientCounts:GW(r)}}function GW(e){let t={};for(let n in e)t[n]=e[n].size;return t}function gw(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),r.push(o),n.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let p of o.inputs)a[p.name]==null&&(a[p.name]=new Set),a[p.name].add(o.name),!n.has(p.name)&&s.push(p)}}return{sorted:r,recipientMap:a}}function HW(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let a of e.sourceLayer.inboundNodes[r].outputTensors)if(a.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}var jW=H();jW.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,VW);var SI={};De(SI,{maxNorm:()=>qW,minMaxNorm:()=>ZW,nonNeg:()=>XW,unitNorm:()=>KW});function Jy(e,t){return W(()=>nn(xe(z(e,e),t,!0)))}var wd=class extends ne.Serializable{getConfig(){return{}}},Yy=class extends wd{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=Jy(e,this.axis),n=cn(t,0,this.maxValue);return z(e,ye(n,J(Ut(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Yy.className="MaxNorm";ne.registerClass(Yy);var Qy=class extends wd{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>ye(e,J(Ut(),Jy(e,this.axis))))}getConfig(){return{axis:this.axis}}};Qy.className="UnitNorm";ne.registerClass(Qy);var eb=class extends wd{apply(e){return it(e)}};eb.className="NonNeg";ne.registerClass(eb);var tb=class extends wd{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=Jy(e,this.axis),n=J(z(this.rate,cn(t,this.minValue,this.maxValue)),z(1-this.rate,t));return z(e,ye(n,J(Ut(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};tb.className="MinMaxNorm";ne.registerClass(tb);var yw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ht(e){return By(e)}function bw(e,t={}){return yd(e,ne.SerializationMap.getMap().classNameMap,t,"constraint")}function jt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in yw?yw[e]:e,config:{}};return bw(t)}else return e instanceof wd?e:bw(e)}function qW(e){return new Yy(e)}function KW(e){return new Qy(e)}function XW(){return new eb}function ZW(e){return new tb(e)}var NI={};De(NI,{constant:()=>QW,glorotNormal:()=>i4,glorotUniform:()=>s4,heNormal:()=>o4,heUniform:()=>l4,identity:()=>r4,leCunNormal:()=>u4,leCunUniform:()=>p4,ones:()=>YW,orthogonal:()=>d4,randomNormal:()=>t4,randomUniform:()=>e4,truncatedNormal:()=>n4,varianceScaling:()=>a4,zeros:()=>JW});function JW(){return new Uy}function YW(){return new tm}function QW(e){return new Gy(e)}function e4(e){return new Hy(e)}function t4(e){return new jy(e)}function n4(e){return new qy(e)}function r4(e){return new Ky(e)}function a4(e){return new Dn(e)}function s4(e){return new nm(e)}function i4(e){return new rm(e)}function o4(e){return new am(e)}function l4(e){return new sm(e)}function u4(e){return new im(e)}function p4(e){return new om(e)}function d4(e){return new Xy(e)}var TI={};De(TI,{Layer:()=>je,RNN:()=>wa,RNNCell:()=>Id,activation:()=>VV,add:()=>JV,alphaDropout:()=>DU,average:()=>YV,averagePooling1d:()=>cx,averagePooling2d:()=>mx,averagePooling3d:()=>fx,avgPool1d:()=>oU,avgPool2d:()=>uU,avgPool3d:()=>dU,avgPooling1d:()=>lU,avgPooling2d:()=>pU,avgPooling3d:()=>hU,batchNormalization:()=>aU,bidirectional:()=>TU,categoryEncoding:()=>PU,centerCrop:()=>LU,concatenate:()=>QV,conv1d:()=>RV,conv2d:()=>DV,conv2dTranspose:()=>MV,conv3d:()=>OV,conv3dTranspose:()=>LV,convLstm2d:()=>kU,convLstm2dCell:()=>IU,cropping2D:()=>PV,dense:()=>UV,depthwiseConv2d:()=>WV,dot:()=>rU,dropout:()=>GV,elu:()=>_V,embedding:()=>ZV,flatten:()=>jV,gaussianDropout:()=>RU,gaussianNoise:()=>FU,globalAveragePooling1d:()=>cU,globalAveragePooling2d:()=>mU,globalMaxPool1d:()=>CU,globalMaxPool2d:()=>EU,globalMaxPooling1d:()=>CS,globalMaxPooling2d:()=>ES,gru:()=>gU,gruCell:()=>yU,input:()=>GI,inputLayer:()=>TV,layerNormalization:()=>sU,leakyReLU:()=>EV,lstm:()=>bU,lstmCell:()=>xU,masking:()=>MU,maxPool1d:()=>$U,maxPool2d:()=>AU,maxPooling1d:()=>$S,maxPooling2d:()=>AS,maxPooling3d:()=>fU,maximum:()=>eU,minimum:()=>tU,multiply:()=>nU,permute:()=>XV,prelu:()=>$V,randomWidth:()=>BU,reLU:()=>CV,repeatVector:()=>qV,rescaling:()=>OU,reshape:()=>KV,resizing:()=>zU,rnn:()=>SU,separableConv2d:()=>zV,simpleRNN:()=>vU,simpleRNNCell:()=>wU,softmax:()=>AV,spatialDropout1d:()=>HV,stackedRNNCells:()=>NU,thresholdedReLU:()=>FV,timeDistributed:()=>_U,upSampling2d:()=>BV,zeroPadding2d:()=>iU});async function Ea(e){if(e==null)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if(typeof s!="number"){let i=s;t.push(i.data()),n.push(a),r.push(i)}}if(t.length>0){let a=await Promise.all(t);for(let s=0;s<a.length;++s)e[n[s]]=a[s][0];Re(r)}}function _I(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var xw;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(xw||(xw={}));var h4=125,ul=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},CI=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},c4=class extends ul{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let r in t){let a=t[r];if(typeof a=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+a*n;else{let s;r in this.totals?s=this.totals[r]:this.totals[r]=0;let i=W(()=>J(this.totals[r],z(a,n)));this.totals[r]=i,s!=null&&s.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:W(()=>{let r=z(ye(1,this.seen),this.totals[n]);t[n]=r,this.totals[n].dispose(),Vt(t[n])}))}},EI=class extends ul{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let s=this.history[a];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(a),n.push(i)}}let r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},$I=class extends ul{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||zy,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=h4),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=hW(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];this.yield!=null&&(await Ea(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ea(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ea(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ea(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ea(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ea(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ea(e),await this.trainEnd(e))}};function AI(e,t){return e==null&&(e={}),e instanceof ul?[e]:Array.isArray(e)&&e[0]instanceof ul?e:st(e).map(n=>new $I(n,t))}var nb=class zr{constructor(){}static registerCallbackConstructor(t,n){w.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),zr.checkForDuplicate(n),zr.constructors[t]==null&&(zr.constructors[t]=[]),zr.constructors[t].push(n)}static checkForDuplicate(t){for(let n in zr.constructors)zr.constructors[+n].forEach(r=>{if(r===t)throw new V("Duplicate callback constructor.")})}static clear(){zr.constructors={}}static createCallbacks(t){let n=[];for(let r in zr.constructors){let a=+r;t>=a&&n.push(...zr.constructors[a])}return n.map(r=>new r)}};nb.constructors={};function FI(e,t,n,r,a,s,i,o,l){let p=new EI,u=[new c4,...nb.createCallbacks(t)];e!=null&&u.push(...e),u.push(p);let d=new CI(u);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:p}}function Cr(e,t={},n=!1){return yd(e,ne.SerializationMap.getMap().classNameMap,t,"layer",n)}function Oh(e,t){return W(()=>{e.dtype!=="float32"&&(e=ie(e,"float32"));let n=xe(xd(e),t,!0),r=Gn(n.shape,Ut()),a=nn(ea(n,r));return ye(e,a)})}function Eo(e,t){return W(()=>St(xd(fe(t,e)),-1))}function um(e,t){return W(()=>St(Dt(fe(t,e)),-1))}function _u(e,t){return W(()=>{let n=fe(e,t),r=cn(Dt(e),Ut(),Number.MAX_VALUE),a=Dt(ye(n,r));return z(100,St(a,-1))})}function m4(e,t){return W(()=>{let n=cn(t,Ut(),Number.MAX_VALUE),r=jn(J(1,n)),a=cn(e,Ut(),Number.MAX_VALUE),s=jn(J(1,a));return St(xd(fe(r,s)),-1)})}function f4(e,t){return W(()=>{let n=ea(0,fe(1,z(e,t)));return St(xd(n),-1)})}function g4(e,t){return W(()=>{let n=ea(0,fe(1,z(e,t)));return St(n,-1)})}function y4(e,t){return W(()=>{let n=xe(z(e,t),-1),r=ir(z(fe(1,e),t),-1);return ea(0,J(1,fe(r,n)))})}function b4(e,t){return W(()=>{let n=Math.log(2),r=fe(t,e),a=fe(J(r,To(z(-2,r))),n);return St(a,-1)})}function yp(e,t,n=!1){return W(()=>{if(n)t=ps(t);else{let r=xe(t,t.shape.length-1,!0);t=ye(t,r)}return t=cn(t,Ut(),1-Ut()),bt(xe(z(ie(e,"float32"),jn(t)),t.shape.length-1))})}function Lh(e,t,n=!1){return W(()=>{let r=ie(wu(SW(e)),"int32");t=cn(t,Ut(),1-Ut());let a=t.shape,s=B(rl(r,a[a.length-1]),a);return yp(s,t,n)})}function x4(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return W(()=>{let n=it(t),r=bt(Dt(t));return J(fe(n,z(t,e)),od(mn(r)))})}function pm(e,t){return W(()=>{let n;return n=cn(t,Ut(),1-Ut()),n=jn(ye(n,fe(1,n))),St(x4(e,n),-1)})}function v4(e,t){return W(()=>{let n=cn(e,Ut(),1),r=cn(t,Ut(),1);return xe(z(e,jn(ye(n,r))),-1)})}function w4(e,t){return W(()=>{let n=jn(J(Ut(),t));return St(fe(t,z(e,n)),-1)})}function rb(e,t){return W(()=>{let n=Oh(e,-1),r=Oh(t,-1),a=z(n,r);return bt(xe(a,-1))})}var zh={meanSquaredError:Eo,meanAbsoluteError:um,meanAbsolutePercentageError:_u,meanSquaredLogarithmicError:m4,squaredHinge:f4,hinge:g4,categoricalHinge:y4,logcosh:b4,categoricalCrossentropy:yp,sparseCategoricalCrossentropy:Lh,binaryCrossentropy:pm,kullbackLeiblerDivergence:v4,poisson:w4,cosineProximity:rb};function Gm(e){if(typeof e=="string"){if(e in zh)return zh[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(t)}else return e}function ab(e,t){return W(()=>{let n=z(.5,qn(t)),r=ma(_n(t,n),e.dtype);return St(Hn(e,r),-1)})}function sb(e,t){return W(()=>ma(Hn(Hs(e,-1),Hs(t,-1)),"float32"))}function RI(e,t){return W(()=>ie(xe(br(Hn(e,1),Hn(t,1))),"float32"))}function k4(e,t){return W(()=>ie(xe(br(Hn(e,1),Hn(t,0))),"float32"))}function I4(e,t){return W(()=>ie(xe(br(Hn(e,0),Hn(t,1))),"float32"))}function DI(e,t){return W(()=>{let n=RI(e,t),r=I4(e,t),a=J(n,r);return ie(tn(_n(a,0),ye(n,a),0),"float32")})}function S4(e,t){return W(()=>{let n=RI(e,t),r=k4(e,t),a=J(n,r);return ie(tn(_n(a,0),ye(n,a),0),"float32")})}function MI(e,t){return pm(e,t)}function OI(e,t){return e.rank===t.rank&&(e=ds(e,[e.rank-1])),t=Hs(t,-1),t.dtype!==e.dtype&&(t=ie(t,e.dtype)),ie(Hn(e,t),"float32")}function N4(e,t){return W(()=>{let n=e.sub(t).square().sum(),r=e.sub(e.mean()).square().sum();return Se(1).sub(n.div(r))})}var T4=Eo,_4=Eo,C4=um,E4=um,$4=_u,A4=_u,ib=yp,F4=rb,LI=Lh,Ph={binaryAccuracy:ab,categoricalAccuracy:sb,precision:DI,categoricalCrossentropy:ib,sparseCategoricalCrossentropy:LI,mse:T4,MSE:_4,mae:C4,MAE:E4,mape:$4,MAPE:A4,cosine:F4};function R4(e){if(typeof e=="string"&&e in Ph)return Ph[e];if(typeof e!="string"&&e!=null)return e;throw new V(`Unknown metric ${e}`)}function nh(e){if(Vr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(zh))if(zh[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Ph))if(Ph[n]===e){t=n;break}return t!==void 0?t:e.name}}function D4(e){let t={Adagrad:()=>Ss.adagrad(.01),Adadelta:()=>Ss.adadelta(1,.95,Ut()),Adam:()=>Ss.adam(.001,.9,.999,Ut()),Adamax:()=>Ss.adamax(.002,.9,.999,Ut(),0),RMSProp:()=>Ss.rmsprop(.001,.9,0,Ut()),SGD:()=>Ss.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new V(`Unknown Optimizer ${e}`)}function vw(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!Tf(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Tf(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!Tf(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!Tf(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function M4(e,t,n,r=console.log){let a=L4(e),s=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let i;if(!a){s.push("Receives inputs"),i=[];for(let u in e.nodesByDepth)i.push(...e.nodesByDepth[u])}r("_".repeat(t)),Bh(s,n,r),r("=".repeat(t));let o=e.layers;for(let u=0;u<o.length;++u)a?z4(o[u],n,r):P4(o[u],n,i,r),r((u===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=O4(e),p=Rh(e.nonTrainableWeights);r(`Total params: ${l+p}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${p}`),r("_".repeat(t))}function O4(e){let t;return e.collectedTrainableWeights!=null?t=Rh(e.collectedTrainableWeights):t=Rh(e.trainableWeights),t}function L4(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let s=!1;for(let i of a.inboundNodes)if(r.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function Bh(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function z4(e,t,n){let r,a;try{a=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,r,e.countParams().toString()];Bh(o,t,n)}function P4(e,t,n,r){let a,s;try{s=e.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{s="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}let i=[];for(let d of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){let c=d.inboundLayers[h].name,m=d.nodeIndices[h],f=d.tensorIndices[h];i.push(`${c}[${m}][${f}]`)}let o=e.name,l=e.getClassName(),p=i.length===0?"":i[0],u=[`${o} (${l})`,s,a,e.countParams().toString(),p];Bh(u,t,r);for(let d=1;d<i.length;++d)Bh(["","","","",i[d]],t,r)}function zI(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function bp(e,t){if(e===null)return null;if(typeof e=="string")return Cs(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];zI(t,a,s)?n.push(s):n.push(bp(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r];if(r==="name"&&typeof a=="string")n[r]=a;else{let s=Cs(r);n[s]=bp(a,s)}}return n}}function _f(e,t){if(e==null)return null;if(typeof e=="string")return ia(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];zI(t,a,s)?n.push(s):n.push(_f(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r],s=ia(r);(r==="name"||r==="className")&&typeof a=="string"?n[s]=a:n[s]=_f(a,r)}return n}}var ob="4.22.0",B4=e=>{let t=Object.keys(e);if(t.length===0)return!1;let n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))},W4=class Pr extends je{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=Qc(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Pa(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Pa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let x=b.sourceLayer,v=b.nodeIndex,I=b.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(I)}for(let b of this.inputs){let x=b.sourceLayer,v=b.nodeIndex,I=b.tensorIndex;Vr(v===0,"input layer has >1 nodes"),Vr(I===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let x=this.inputLayers[b];if(!(x instanceof Tu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let n={},r={},a={},s={},i={},o=[],l=(b,x,v,I,N,C)=>{(I==null||N==null||C==null)&&(I=b.sourceLayer,N=b.nodeIndex,C=b.tensorIndex);let E=I.inboundNodes[N];if(v.indexOf(E)!==-1)throw new Gr(`The tensor ${b.name} at layer "${I.name}" is part of a cycle.`);if(x.indexOf(E)!==-1)return;this.containerNodes.add(Pr.nodeKey(I,N)),I.id in i||(i[I.id]=Object.keys(i).length),v.indexOf(E)===-1&&v.push(E);let A=E.inboundLayers.length;for(let R=0;R<A;R++){let F=E.inputTensors[R],S=E.inboundLayers[R],D=E.nodeIndices[R],P=E.tensorIndices[R];l(F,x,v,S,D,P)}for(x.push(E);v.indexOf(E)>=0;)v.splice(v.indexOf(E),1);o.push(E)},p=[],u=[];for(let b of this.outputs)l(b,p,u);let d=o.slice().reverse();for(let b of d){r[b.id]=b,b.id in n||(n[b.id]=0);let x=n[b.id],v=a[b.outboundLayer.id]==null?0:a[b.outboundLayer.id];x=Math.max(x,v),a[b.outboundLayer.id]=x,s[b.outboundLayer.id]=b.outboundLayer,n[b.id]=x;for(let I=0;I<b.inboundLayers.length;I++){let N=b.inboundLayers[I],C=b.nodeIndices[I],E=N.inboundNodes[C],A=n[E.id]==null?0:n[E.id];n[E.id]=Math.max(x+1,A),r[E.id]=E}}let h={};for(let b in n){let x=n[b];x in h||(h[x]=[]),h[x].push(r[b])}let c={};for(let b in a){let x=a[b];x in c||(c[x]=[]),c[x].push(s[b])}let m=Object.keys(c).map(b=>parseInt(b,10)).sort(Qd);this.layers=[];for(let b of m){let x=c[b];x.sort((v,I)=>{let N=i[v.id],C=i[I.id];return N<C?-1:N>C?1:0});for(let v of x)v instanceof Pr&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=c,m=Object.keys(h).map(b=>parseInt(b,10)).sort(Qd);let f=this.inputs.slice(),g=[];for(let b of m)for(let x of h[b]){let v=x.outboundLayer;if(v!=null){for(let I of x.inputTensors)if(f.indexOf(I)===-1)throw new Gr(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${v.name}". The following previous layers were accessed without issue: ${g}`);for(let I of x.outputTensors)f.push(I);g.push(v.name)}}this.nodesByDepth=h;let y=this.layers.map(b=>b.name);for(let b of y){let x=y.filter(v=>v===b).length;if(x!==1)throw new Gr(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new lm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let n of this.layers)t.numDisposedVariables+=n.dispose().numDisposedVariables;for(let n of this.internalContainerRefs)t.numDisposedVariables+=n.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(n=>{n._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let n of this.layers)t=t.concat(n.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let n of this.layers)t.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let r of this.layers)n.push(...r.trainableWeights);return n.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,n=!0){let r={},a=0,s=B4(t);s&&this.parseWeights(t);for(let o of this.layers)for(let[l,p]of o.weights.entries()){let u=s?`${p.name.split("/").slice(0,-1).join("/")+"/"}${l}`:p.originalName;if(r[u]!=null)throw new V(`Duplicate weight name: ${u}`);r[u]=p,a++}let i=[];for(let o in t){let l=o;if(r[o]==null){let p=o.split("/");l=p.slice(0,-2).concat([p[p.length-1]]).join("/")}if(r[l]!=null)i.push([r[l],t[o]]);else if(n)throw new V(`Provided weight data has no target variable: ${o}`);delete r[l]}if(n){let o=[];for(let l in r)o.push(l);if(o.length>0)throw new V(`${o.length} of ${a} weights are not set: ${o}`)}Zy(i)}parseWeights(t){for(let n in Object.keys(t)){let r=n.split("/"),a=["vars","layer_checkpoint_dependencies"],s=r.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");s!==n&&(t[s]=t[n],delete t[n])}}updatedConfig(){let t=this.getConfig(),n={};return n.className=this.getClassName(),n.config=t,n.kerasVersion=`tfjs-layers ${ob}`,n.backend="TensorFlow.js",n}toJSON(t,n=!0){let r=_f(this.updatedConfig());return n?JSON.stringify(r):r}call(t,n){return W(()=>{t=st(t);let r=new jo;for(let a=0;a<this.inputs.length;++a)r.add(this.inputs[a],t[a]);return Xu(this.outputs,r,n)})}computeMask(t,n){return W(()=>{t=st(t);let r;return n==null?r=Zs(null,t.length):r=st(n),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){let n=Fh(t);if(n.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let r={};for(let o=0;o<n.length;o++){let l=this.inputLayers[o],p=n[o],u=l.name+"_0_0";r[u]=p}let a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Qd);if(a.length>1)for(let o of a){let l=this.nodesByDepth[o];for(let p of l){let u=p.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(u.id)!==-1)continue;let d=[];for(let f=0;f<p.inboundLayers.length;f++){let g=p.inboundLayers[f],y=p.nodeIndices[f],b=p.tensorIndices[f],x=`${g.name}_${y}_${b}`,v=r[x];d.push(v)}let h=u.computeOutputShape(En(d)),c=Fh(h),m=u.inboundNodes.indexOf(p);for(let f=0;f<c.length;f++){let g=`${u.name}_${m}_${f}`;r[g]=c[f]}}}let s=[],i=[];for(let o=0;o<this.outputLayers.length;o++){let l=this.outputLayers[o],p=this.outputLayersNodeIndices[o],u=this.outputLayersTensorIndices[o],d=`${l.name}_${p}_${u}`;i.push(d)}for(let o=0;o<i.length;o++){let l=i[o];Vr(l in r),s.push(r[l])}return En(s)}runInternalGraph(t,n){n==null&&(n=Zs(null,t.length));let r={};for(let l=0;l<this.inputs.length;++l){let p=this.inputs[l],u=t[l],d=n[l];r[p.id]=[u,d]}let a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Qd);for(let l of a){let p=this.nodesByDepth[l];for(let u of p){let d=u.outboundLayer,h=u.inputTensors,c=u.outputTensors,m=new Array;for(let f of h)f.id in r&&m.push(r[f.id]);if(m.length===h.length){let f={},g,y,b,x;if(u.callArgs!=null&&(f=u.callArgs),m.length===1){let[v,I]=m[0];f.mask==null&&(f.mask=I),b=st(d.call(v,f)),x=st(d.computeMask(v,I)),g=[v],y=[I]}else g=m.map(v=>v[0]),y=m.map(v=>v[1]),f.mask==null&&(f.mask=y),b=st(d.call(g,f)),x=st(d.computeMask(g,y));if(d.activityRegularizer)throw new He("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<c.length;++v){let I=c[v],N=b[v],C=x[v];r[I.id]=[N,C]}}}}let s=[],i=[],o=[];for(let l of this.outputs){Vr(l.id in r,`Could not compute output ${l.name} : ${l.id}`);let[p,u]=r[l.id];o.push(p.shape),s.push(p),i.push(u)}return[s,i,o]}buildNodeConversionMap(t){let n={},r;for(let a of this.layers){r=a instanceof Pr?1:0;for(let s=0;s<a.inboundNodes.length;s++){let i=Pr.nodeKey(a,s);this.containerNodes.has(i)&&(n[i]=r,r+=1)}}return n}getLayer(t,n){if(n!=null)return this.findLayer(n);if(t==null)throw new V("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(let r of this.layers)if(r.name===t)return r;throw new V(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new V(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return W(()=>{let t=[];for(let n of this.layers)for(let r=0;r<n.inboundNodes.length;++r){let a=Pr.nodeKey(n,r);this.containerNodes.has(a)&&t.push(...n.calculateLosses())}return t})}getConfig(){let t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[];for(let i of this.layers){let o=i.getClassName(),l=i.getConfig(),p=[];for(let d=0;d<i.inboundNodes.length;d++){let h=i.inboundNodes[d],c=Pr.nodeKey(i,d),m={};if(this.containerNodes.has(c)){if(h.callArgs)try{JSON.stringify(h.callArgs),m=h.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),m={}}if(h.inboundLayers.length>0){let f=[];for(let g=0;g<h.inboundLayers.length;g++){let y=h.inboundLayers[g],b=h.nodeIndices[g],x=h.tensorIndices[g],v=Pr.nodeKey(y,b),I=n[v];I==null&&(I=0),f.push([y.name,I,x,m])}p.push(f)}}}let u={};u.name=i.name,u.className=o,u.config=l,u.inboundNodes=p,r.push(u)}t.layers=r;let a=[];for(let i=0;i<this.inputLayers.length;i++){let o=this.inputLayers[i],l=this.inputLayersNodeIndices[i],p=Pr.nodeKey(o,l);if(!this.containerNodes.has(p))continue;let u=n[p];u==null&&(u=0);let d=this.inputLayersTensorIndices[i];a.push([o.name,u,d])}t.inputLayers=a;let s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],p=Pr.nodeKey(o,l);if(!this.containerNodes.has(p))continue;let u=n[p];u==null&&(u=0);let d=this.outputLayersTensorIndices[i];s.push([o.name,u,d])}return t.outputLayers=s,t}static fromConfig(t,n,r={},a=!1){let s={},i={};function o(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function l(g,y){let b=[],x;for(let v of y){let I=v[0],N=v[1],C=v[2];if(x=v[3]==null?{}:v[3],!(I in s)){o(g,y);return}let E=s[I];if(E.inboundNodes.length<=N){o(g,y);return}let A=E.inboundNodes[N];b.push(A.outputTensors[C])}b.length>0&&g.apply(En(b),x)}function p(g){let y=g.name,b=Cr(g,n.customObjects!=null?n.customObjects:{});b.setFastWeightInitDuringBuild(a),s[y]=b,g.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${x}`);o(b,x)})}let u=n.name,d=n.layers;for(let g of d)p(g);for(;!dW(i);)for(let g of d){let y=s[g.name];if(y.name in i){let b=i[y.name];delete i[y.name];for(let x of b)l(y,x)}}let h=[],c=[],m=n.inputLayers;for(let g of m){let y=g[0],b=g[1],x=g[2];Vr(y in s);let v=s[y].inboundNodes[b].outputTensors;h.push(v[x])}let f=n.outputLayers;for(let g of f){let y=g[0],b=g[1],x=g[2];Vr(y in s);let v=s[y].inboundNodes[b].outputTensors;c.push(v[x])}return new t({inputs:h,outputs:c,name:u})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}};function V4(e,t,n){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let a=[];return t.forEach(s=>{s in e?a.push(e[s]):a.push(null)}),a}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function PI(e,t){return V4(e,t,"classWeight")}async function BI(e,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let a=W(()=>{if(e.shape.length===1)return jr(e);if(e.shape.length===2){if(e.shape[1]>1)return Hs(e,1);if(e.shape[1]===1)return B(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await a.data());Re(a);let i=[];return s.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),at(i,"float32")}else return null}function U4(e,t){return z(e,t)}var G4=32;function WI(e,t){let n,r,a=t;n=a.xs,r=a.ys,w.assert(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=ww("input",e.inputNames,n),i=ww("output",e.outputNames,r),o=s[0].shape[0];w.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)w.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)w.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function ww(e,t,n){if(n instanceof Ge)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(n[a]==null)throw new V(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function H4(e){if(e.length===3)throw new He("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function j4(e,t,n){let r=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a=n.validationData!=null,s,i;if(a)if(kw(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=H4(n.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),p;a?p=l.slice().concat(l.map(g=>"val_"+g)):p=l.slice();let u=AI(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:h,history:c}=FI(u,d,n.epochs,null,null,q4(t,n),null,a,p);h.setModel(e),e.history=c,await h.onTrainBegin(),e.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){let g={};await h.onEpochBegin(m);let y=0,b=0;for(r||(f=await t.iterator());!r||y<n.batchesPerEpoch;){let x=await f.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:v,ys:I}=WI(e,x.value),N={};N.batch=b,N.size=v[0].shape[0],await h.onBatchBegin(b,N);let C=[];if(n.classWeight!=null){let R=PI(n.classWeight,e.outputNames);for(let F=0;F<R.length;++F)C.push(await BI(I[F],null,R[F]))}let E=v.concat(I).concat(C),A=o(E);Re(E);for(let R=0;R<l.length;++R){let F=l[R],S=A[R];N[F]=S,Vt(S)}await h.onBatchEnd(b,N),_I(N),b++,y++}if(r?y>=n.batchesPerEpoch:x.done){if(a){let v;kw(n.validationData)?v=st(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):v=st(e.evaluate(s,i,{batchSize:n.validationBatchSize==null?G4:n.validationBatchSize,verbose:0}));for(let I=0;I<e.metricsNames.length;++I)g[`val_${e.metricsNames[I]}`]=v[I]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(m,g),m++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function q4(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function kw(e){return typeof e.iterator=="function"}function K4(e){return typeof e.next=="function"}async function X4(e,t,n){n=n||{};let r=n.batches!=null,a=e.testFunction,s=[];if(n.verbose>0)throw new He("Verbose mode is not implemented yet.");w.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=K4(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let p=await i.next();if(s=W(()=>{if(p.value){let{xs:u,ys:d}=WI(e,p.value),h=u.concat(d),c=W(()=>a(h));if(Re(h),l===0)for(let f=0;f<c.length;++f)s.push(Se(0));let m=h[0].shape[0];for(let f=0;f<c.length;++f){let g=c[f],y=s[f];s[f]=W(()=>J(s[f],z(m,g))),l>0&&Re(y)}Re(c),o+=m,++l}return s}),p.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let p=0;p<s.length;++p){let u=s[p];s[p]=ye(s[p],o),Re(u)}return En(s)}function Hm(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Uu(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(r=>Ms(r,t,n-t)):Ms(e,t,n-t)}function Cf(e,t){return W(()=>e==null?null:Array.isArray(e)?e.map(n=>Cf(n,t)):bI(e,t.dtype==="int32"?t:ie(t,"int32")))}function jm(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function VI(e){let t=[];e instanceof Ge&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(r.rank===1)t.push(bd(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Ir(e,t){if(e==null)return;let n=[];if(t instanceof Ge)n.push(t.id);else if(Array.isArray(t))t.forEach(a=>n.push(a.id));else if(t!=null)for(let a in t){let s=t[a];n.push(s.id)}let r=[];if(e instanceof Ge)n.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(a=>{n.indexOf(a.id)===-1&&r.push(a)});else if(e!=null)for(let a in e){let s=e[a];n.indexOf(s.id)===-1&&r.push(s)}r.forEach(a=>{a.isDisposed||a.dispose()})}function Z4(e){return e instanceof Ge}function Ef(e){return Array.isArray(e)}function Iw(e){return!Z4(e)&&!Ef(e)}function Sw(e,t,n,r=!0,a=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(Ef(e)&&e.length>0)i=!0;else if(Iw(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new V(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(Iw(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new V(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(Ef(e)){if(e=e,e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new V(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=VI(s),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let p=o.shape[l],u=n[i][l];if(u!=null&&u>=0&&p!==u)throw new V(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function J4(e,t,n){let r=Pa(e.map(s=>s.shape[0]));r.sort();let a=Pa(t.map(s=>s.shape[0]));if(a.sort(),r.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(a.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&a.length>0&&!w.arraysEqual(r,a))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function Y4(e,t,n){let r=[Eo,pm,yp];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(i!=null){if(i===yp&&s.shape[s.shape.length-1]===1)throw new V(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){let l=s.shape.slice(1),p=o.slice(1);for(let u=0;u<l.length;++u){let d=l[u],h=p[u];if(h!=null&&d!==h)throw new V(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Nw(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new V(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let p=o.shape[l],u=n[i][l];if(u!=null&&u!==p)throw new V(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function Q4(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let a of t){let s=n.hasOwnProperty(a)?n[a]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}var eV="layers-model",da=class extends W4{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");M4(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=D4(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof va))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new V(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(Gm(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>Gm(s))}else{let s=Gm(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ds("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let r=Q4(e.metrics,this.outputNames),a=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};Ds("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=r[s];(o=>{let l="",p,u,d;for(let h of o){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[s];m[m.length-1]===1||this.lossFunctions[s]===pm?["accuracy","acc"].indexOf(h)!==-1?u=ab:["crossentropy","ce"].indexOf(h)!==-1&&(u=MI):this.lossFunctions[s]===Lh?["accuracy","acc"].indexOf(h)!==-1?u=OI:["crossentropy","ce"].indexOf(h)!==-1&&(u=LI):["accuracy","acc"].indexOf(h)!==-1?u=sb:["crossentropy","ce"].indexOf(h)!==-1&&(u=ib);let f;["accuracy","acc"].indexOf(h)!==-1?f="acc":["crossentropy","ce"].indexOf(h)!==-1&&(f="ce"),d=u,p=l+f}else d=R4(h),p=l+nh(h);let c;Ds(p,()=>{c=d}),a(s,p,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=n.batchSize==null?32:n.batchSize;Hm(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,o=this.testLoop(i,s,r,n.verbose,n.steps);return En(o)}finally{Ir(a[0],e),Ir(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),X4(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(n!=null){if(a=null,t!=null)throw new V(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new V(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new V("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new jo;if(e instanceof Ge&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new V(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new V(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=Xu(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Zs(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=a[o],n--),n===0)break}if(n===0)break}if(n>0){let r=[];throw t.forEach((a,s)=>{a==null&&r.push(e[s])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return W(()=>{let r=this.checkNumSamples(e);if(n)throw new He("Verbose predictLoop() is not implemented yet.");let a=jm(r,t),s=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)W(()=>{let o=a[i][0],l=a[i][1],p=Uu(e,o,l),u=[];if(Array.isArray(p))for(let h=0;h<p.length;++h)u.push({key:this.inputs[h],value:p[h]});else u.push({key:this.inputs[0],value:p});let d=new jo(u);return Xu(this.outputs,d)}).forEach((o,l)=>s[l].push(o));return En(s.map(i=>dt(i,0)))})}predict(e,t={}){let n=VI(e);Nw(n,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return Hm(r),this.predictLoop(n,r)}finally{Ir(n,e)}}predictOnBatch(e){Nw(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(this.optimizer_==null)throw new Gr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===Lh?a.push(i.slice(0,i.length-1).concat([1])):a.push(i)}if(e=Sw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Sw(t,this.feedOutputNames,a,!1,"target"),J4(e,t),Y4(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){let p=PI(r,this.outputNames);l=[];for(let u=0;u<p.length;++u)l.push(await BI(o[u],null,p[u]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return W(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new He("Verbose mode is not implemented yet.");if(a!=null)throw new He("steps mode in testLoop() is not implemented yet");{let o=jm(s,n),l=at($r(0,s));for(let p=0;p<o.length;++p){let u=o[p][0],d=o[p][1],h=Ms(l,u,d-u),c=Cf(t,h),m=e(c);if(p===0)for(let f=0;f<m.length;++f)i.push(Se(0));for(let f=0;f<m.length;++f){let g=m[f];i[f]=J(i[f],z(d-u,g))}}for(let p=0;p<i.length;++p)i[p]=ye(i[p],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(pw(e,r)>1){let s=pw(e.slice(0,n),r);a+=`_${s}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let l=[];for(let h=0;h<this.inputs.length;++h)l.push({key:this.inputs[h],value:n[h]});let p=new jo(l),u=Xu(this.outputs,p,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let c=this.lossFunctions[h],m=c(r[h],u[h]);a[h]!=null&&(m=U4(m,a[h]));let f=St(m);t.push(f),h===0?d=m:d=J(d,m)}for(let h=0;h<this.metricsTensors.length;++h){let c;if(this.outputs.length>1&&h<this.outputs.length)c=t[h];else{let m=this.metricsTensors[h][0],f=this.metricsTensors[h][1];c=St(m(r[f],u[f]))}Vt(c),s.push(c)}return d=St(d),this.calculateLosses().forEach(h=>{d=J(d,h)}),d},o=this.collectedTrainableWeights.map(l=>l.read());return[this.optimizer_.minimize(i,!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>W(()=>{let t=[],n,r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:r[l]});let i=new jo(s),o=Xu(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let p=this.lossFunctions[l],u=St(p(a[l],o[l]));l===0?n=u:n=J(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let p=this.metricsTensors[l][0],u=this.metricsTensors[l][1],d=St(p(a[u],o[u]));t.push(d)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,a,s,i,o,l,p,u,d;try{let h=n.batchSize==null?32:n.batchSize;Hm(h);let c=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,h);r=c[0],a=c[1],d=c[2];let m=!1,f;if(n.validationData!=null&&n.validationData.length>0){if(m=!0,n.validationData.length===2)o=n.validationData[0],l=n.validationData[1];else throw n.validationData.length===3?new He("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let N=await this.standardizeUserData(o,l,null,null,!0,h);p=N[0],u=N[1],f=p.concat(u)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){m=!0;let N=Math.floor(r[0].shape[0]*(1-n.validationSplit)),C=r[0].shape[0];p=Uu(r,N,C),s=r,r=Uu(r,0,N),u=Uu(a,N,C),i=a,a=Uu(a,0,N),f=p.concat(u)}else n.validationSteps!=null&&(m=!0);let g=r.concat(a).concat(d);this.checkTrainableWeightsConsistency();let y=this.makeTrainFunction(),b=this.getDedupedMetricsNames(),x,v;m?(this.makeTestFunction(),x=this.testFunction,v=b.slice().concat(b.map(N=>"val_"+N))):(x=null,f=[],v=b.slice());let I=AI(n.callbacks,n.yieldEvery);return await this.fitLoop(y,g,b,h,n.epochs,n.verbose,I,x,f,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,Ir(r,e),Ir(a,t),Ir(s,e),Ir(i,t),Ir(p,o),Ir(u,l),d!=null&&Re(d)}}async fitLoop(e,t,n,r,a,s,i,o,l,p,u,d,h,c){r==null&&(r=32),a==null&&(a=1),p==null&&(p=!0),d==null&&(d=0);let m=!1;if(o!=null&&l!=null&&(m=!0),c!=null&&(m=!0,h==null))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let f=this.checkNumSamples(t,r,h,"steps_per_epoch"),g;f!=null&&(g=$r(0,f)),s==null&&(s=1);let{callbackList:y,history:b}=FI(i,s,a,d,f,h,r,m,u);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=d;x<a;++x){await y.onEpochBegin(x);let v={};if(h!=null)throw new He("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new He("batch shuffling is not implemneted yet");p&&w.shuffle(g);let I=at(g),N=jm(f,r);for(let C=0;C<N.length;++C){let E={};if(await y.onBatchBegin(C,E),W(()=>{let A=N[C][0],R=N[C][1],F=Ms(I,A,R-A);E.batch=C,E.size=R-A;let S=Cf(t,F),D=e(S);for(let P=0;P<n.length;++P){let U=n[P],G=D[P];E[U]=G,Vt(G)}if(C===N.length-1&&m){let P=this.testLoop(o,l,r);for(let U=0;U<n.length;++U){let G=n[U],K=P[U];Vt(K),v["val_"+G]=K}}}),await y.onBatchEnd(C,E),_I(E),this.stopTraining_)break}I.dispose()}if(await y.onEpochEnd(x,v),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return j4(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return Re(s),Ir(n[0],e),Ir(n[1],t),En(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Eh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Eh().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ia(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ia(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if(typeof n[r]=="string")e[r]=ia(n[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ia(nh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ia(nh(e)));{let e={};for(let t in this.metrics)e[t]=ia(nh(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=bp(e.optimizer_config),n=Cr(t),r;if(typeof e.loss=="string")r=Cs(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(s=>Cs(s));else if(e.loss!=null){r={};for(let s in e.loss)r[s]=Cs(e.loss[s])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(s=>Cs(s));else if(e.metrics!=null){a={};for(let s in e.metrics)a[s]=Cs(e.metrics[s])}this.compile({loss:r,metrics:a,optimizer:n})}async save(e,t){if(typeof e=="string"){let a=pn.getSaveHandlers(e);if(a.length===0)throw new V(`Cannot find any save handlers for URL '${e}'`);if(a.length>1)throw new V(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(e.save==null)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await pn.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:eV,generatedBy:`TensorFlow.js tfjs-layers v${ob}`,convertedBy:null};if(t!=null&&t.includeOptimizer&&this.optimizer!=null){r.trainingConfig=this.getTrainingConfig();let a="optimizer",{data:s,specs:i}=await pn.encodeWeights(await this.optimizer.getWeights(),a);n.specs.push(...i),n.data=pn.concatenateArrayBuffers([n.data,s])}return this.userDefinedMetadata!=null&&(vw(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){vw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};da.className="Model";ne.registerClass(da);var UI=class extends da{};UI.className="Functional";ne.registerClass(UI);async function tV(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let r=bp(n),a=Cr(r,t);if(e.weightsManifest!=null){let s=await pn.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(let o of a.weights)i[o.originalName]=s[o.originalName];a.loadWeights(i),Re(s)}return a}async function nV(e,t){if(t==null&&(t={}),typeof e=="string"){let n=pn.getLoadHandlers(e,t);if(n.length===0)n.push(pn.browserHTTPRequest(e,t));else if(n.length>1)throw new V(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return rV(e,void 0,t)}async function rV(e,t,n){if(n==null&&(n={}),e.load==null)throw new V("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;a.model_config!=null&&(a=a.model_config);let s=n.strict==null?!0:n.strict,i=r.weightData!=null&&r.weightSpecs!=null&&s,o=Cr(bp(a),t,i),l=r.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new V("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:p,optimizerWeights:u}=aV(r.weightData,r.weightSpecs);o.loadWeights(p,s),o.optimizer!=null&&u.length>0&&await o.optimizer.setWeights(u),Re(p),Re(u.map(d=>d.tensor))}return o}function aV(e,t){let n=pn.decodeWeights(e,t),r={},a=[];return t.forEach(s=>{s.group==="optimizer"?a.push({name:s.name,tensor:n[s.name]}):r[s.name]=n[s.name]}),{modelWeights:r,optimizerWeights:a}}var dm=class $f extends da{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Qc("sequential_"),t.layers!=null)for(let n of t.layers)this.add(n)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new V(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let n=t instanceof $f||t instanceof da,r;if(n){if(r=t,r.outputs.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let a=kI({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(a)}if(n)this.outputs=r.outputs,this.inputs=r.inputs;else{if(t.inboundNodes.length!==1)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=wI(this.outputs[0])}this.inboundNodes=[],new lm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Zs(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{let a=t.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,n){return this.model==null&&this.build(),this.model.call(t,n)}build(t){if(tt(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new da({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,n,r=console.log){this.built||this.build(),super.summary(t,n,r)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,n,r={}){if(!this.built)throw new Gr("The model needs to be compiled before being used.");return this.model.evaluate(t,n,r)}async evaluateDataset(t,n){if(!this.built)throw new Gr("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,n)}predict(t,n={}){return this.model==null&&this.build(),this.model.predict(t,n)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,n,r={}){if(!this.built)throw new Gr("The model needs to be compiled before being used.");return this.model.fit(t,n,r)}async fitDataset(t,n){if(!this.built)throw new Gr("The model needs to be compiled before being used.");return this.model.fitDataset(t,n)}async trainOnBatch(t,n){return this.model.trainOnBatch(t,n)}static fromConfig(t,n,r={},a=!1){let s,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new V("Legacy serialization format not supported yet.");s=n}else w.assert(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=n.layers,delete n.layers,i=n;let o=new t(i);if(!(o instanceof $f))throw new He(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let l of s){let p=Cr(l,void 0,a);a&&p.setFastWeightInitDuringBuild(!0),o.add(p)}return o}set stopTraining(t){if(this.model==null)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let n of this.layers){let r={};r.className=n.getClassName(),r.config=n.getConfig(),t.push(r)}return{name:this.name,layers:t}}};dm.className="Sequential";ne.registerClass(dm);function sV(e){return new da(e)}function iV(e){return new dm(e)}function GI(e){return kI(e)}function oV(e,t){nb.registerCallbackConstructor(e,t)}var fn=class extends ne.Serializable{getConfig(){return{}}},HI=class extends fn{apply(e,t=1){return TW(e,t)}};HI.className="elu";ne.registerClass(HI);var jI=class extends fn{apply(e){return Oc(e)}};jI.className="selu";ne.registerClass(jI);var qI=class extends fn{apply(e){return it(e)}};qI.className="relu";ne.registerClass(qI);var KI=class extends fn{apply(e){return W(()=>qa(6,it(e)))}};KI.className="relu6";ne.registerClass(KI);var XI=class extends fn{apply(e){return e}};XI.className="linear";ne.registerClass(XI);var ZI=class extends fn{apply(e){return yr(e)}};ZI.className="sigmoid";ne.registerClass(ZI);var JI=class extends fn{apply(e){return CW(e)}};JI.className="hardSigmoid";ne.registerClass(JI);var YI=class extends fn{apply(e){return To(e)}};YI.className="softplus";ne.registerClass(YI);var QI=class extends fn{apply(e){return _W(e)}};QI.className="softsign";ne.registerClass(QI);var eS=class extends fn{apply(e){return ja(e)}};eS.className="tanh";ne.registerClass(eS);var lb=class extends fn{apply(e,t=-1){return ps(e,t)}};lb.className="softmax";ne.registerClass(lb);var tS=class extends fn{apply(e,t=-1){return Ec(e,t)}};tS.className="logSoftmax";ne.registerClass(tS);var nS=class extends fn{apply(e){return W(()=>W(()=>{let t=Math.sqrt(2),n=z(.5,J(1,Tc(ye(e,t))));return z(e,n)}))}};nS.className="gelu";ne.registerClass(nS);var rS=class extends fn{apply(e){return W(()=>z(.5,z(e,J(1,ja(z(nn(ye(2,Math.PI)),J(e,z(.044715,Zr(e,3)))))))))}};rS.className="gelu_new";ne.registerClass(rS);var aS=class extends fn{apply(e){return W(()=>z(e,ja(To(e))))}};aS.className="mish";ne.registerClass(aS);var sS=class extends fn{apply(e,t=1){return W(()=>z(yr(z(e,t)),e))}};sS.className="swish";ne.registerClass(sS);function Za(e){return e.getClassName()}function qm(e,t={}){return yd(e,ne.SerializationMap.getMap().classNameMap,t,"activation")}function Ja(e){if(e==null){let t={};return t.className="linear",t.config={},qm(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},qm(t)}else return e instanceof fn?e:qm(e)}function ub(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var iS=class extends ne.Serializable{},kd=class extends iS{constructor(e){super(),ub(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return W(()=>{let t=Nt([1]);return this.hasL1&&(t=J(t,xe(z(this.l1,Dt(e))))),this.hasL2&&(t=J(t,xe(z(this.l2,xd(e))))),B(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};kd.className="L1L2";ne.registerClass(kd);function lV(e){return ub(e),new kd({l1:e!=null?e.l1:null,l2:0})}function uV(e){return ub(e),new kd({l2:e!=null?e.l2:null,l1:0})}var Tw={l1l2:"L1L2"};function ft(e){return By(e)}function _w(e,t={}){return yd(e,ne.SerializationMap.getMap().classNameMap,t,"regularizer")}function kt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in Tw?Tw[e]:e,config:{}};return _w(t)}else return e instanceof iS?e:_w(e)}var pb=class extends je{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ae(e);let n=it(e);return this.maxValue!=null&&(n=cn(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};pb.className="ReLU";ne.registerClass(pb);var db=class extends je{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ae(e);return id(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};db.className="LeakyReLU";ne.registerClass(db);var hb=class extends je{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=wt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=kt(e.alphaRegularizer),this.alphaConstraint=jt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=tt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Mt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ae(e),hd(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Tt(this.alphaInitializer),alphaRegularizer:ft(this.alphaRegularizer),alphaConstraint:Ht(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};hb.className="PReLU";ne.registerClass(hb);var cb=class extends je{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new He(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ae(e);return xu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};cb.className="ELU";ne.registerClass(cb);var mb=class extends je{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ae(e);return z(n,ie(_n(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};mb.className="ThresholdedReLU";ne.registerClass(mb);var fb=class extends je{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new lb().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return W(()=>{let n=Ae(e),r=t.mask;if(r!=null){let a=z(fe($n(n.shape),ie(r,n.dtype)),Se(-1e9));n=J(n,a)}return this.axis instanceof Array?this.axis.length>1?mn(fe(n,ld(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};fb.className="Softmax";ne.registerClass(fb);function Zo(e,t,n){if(typeof e=="number")return Zs(e,t);if(e.length!==t)throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!kW(a))throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Er(e,t,n,r,a=1){if(e==null)return e;let s=t+(t-1)*(a-1),i;return n==="same"?i=e:i=e-s+1,Math.floor((i+r-1)/r)}function Ur(e,t,n,r){if(e==null)return null;if(r==="valid")e=e*t+Xa([n-t,0]);else if(r==="same")e=e*t;else throw new V(`Unsupport padding mode: ${r}.`);return e}function gb(e,t){return W(()=>($t(t),t==="channelsFirst"?We(e,[0,2,3,1]):e))}function oS(e,t){return W(()=>($t(t),t==="channelsFirst"?We(e,[0,2,3,4,1]):e))}function pV(e,t,n,r=1,a="valid",s,i=1){return W(()=>{if(s==null&&(s=Ar()),$t(s),e.shape.length!==3)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if(s==="channelsFirst"&&(e=We(e,[0,2,1])),a==="causal")throw new He("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=kc(e,t,r,a==="same"?"same":"valid","NWC",i);return n!=null&&(o=Mr(o,n)),o})}function Cw(e,t,n,r=[1,1],a="valid",s,i,o=null){return W(()=>{if(s==null&&(s=Ar()),$t(s),e.rank!==3&&e.rank!==4)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=gb(e,s);if(a==="causal")throw new He("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=ol.conv2d({x:l,filter:t,strides:r,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),s==="channelsFirst"&&(l=We(l,[0,3,1,2])),l})}function dV(e,t,n,r=[1,1,1],a="valid",s,i){return W(()=>{if(s==null&&(s=Ar()),$t(s),e.rank!==4&&e.rank!==5)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=oS(e,s);if(a==="causal")throw new He("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Gg(o,t,r,a==="same"?"same":"valid","NDHWC",i),n!=null&&(o=Mr(o,n)),s==="channelsFirst"&&(o=We(o,[0,4,1,2,3])),o})}var lS=class uS extends je{constructor(t,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",uS.verifyArgs(n),this.rank=t,en(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new He(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Zo(n.kernelSize,t,"kernelSize"),this.strides=Zo(n.strides==null?1:n.strides,t,"strides"),this.padding=n.padding==null?"valid":n.padding,pr(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,$t(this.dataFormat),this.activation=Ja(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=wt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jt(n.biasConstraint),this.biasRegularizer=kt(n.biasRegularizer),this.activityRegularizer=kt(n.activityRegularizer),this.dilationRate=Zo(n.dilationRate==null?1:n.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Vr("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Wy(t.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Za(this.activation),useBias:this.useBias,biasInitializer:Tt(this.biasInitializer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),biasConstraint:Ht(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}},hm=class pS extends lS{constructor(t,n){super(t,n),this.kernel=null,pS.verifyArgs(n),this.filters=n.filters,en(this.filters,"filters"),this.kernelInitializer=wt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jt(n.kernelConstraint),this.kernelRegularizer=kt(n.kernelRegularizer)}build(t){t=tt(t);let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new V(`The channel dimension of the input should be defined. Found ${t[n]}`);let r=t[n],a=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:r}}],this.built=!0}call(t,n){return W(()=>{t=Ae(t);let r,a=this.bias==null?null:this.bias.read(),s=hI(this.activation.getClassName());if(s!=null&&this.rank===2)r=Cw(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)r=pV(t,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=Cw(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=dV(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new He("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=tt(t);let n=[],r=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<r.length;++s){let i=Er(r[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);n.push(i)}let a=[t[0]];return this.dataFormat==="channelsLast"?(a=a.concat(n),a.push(this.filters)):(a.push(this.filters),a=a.concat(n)),a}getConfig(){let t={filters:this.filters,kernelInitializer:Tt(this.kernelInitializer),kernelRegularizer:ft(this.kernelRegularizer),kernelConstraint:Ht(this.kernelConstraint)},n=super.getConfig();return Object.assign(t,n),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}},cm=class dS extends hm{constructor(t){super(2,t),dS.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Wy(t.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}};cm.className="Conv2D";ne.registerClass(cm);var mm=class hS extends hm{constructor(t){super(3,t),hS.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}};mm.className="Conv3D";ne.registerClass(mm);var yb=class extends cm{constructor(e){if(super(e),this.inputSpec=[new Mt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==4)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Ae(e);if(n.shape.length!==4)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,a=r[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=r[s],l=r[i],p=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],h=this.strides[1],c=Ur(o,d,p,this.padding),m=Ur(l,h,u,this.padding),f=[a,c,m,this.filters];this.dataFormat!=="channelsLast"&&(n=We(n,[0,2,3,1]));let g=Ic(n,this.kernel.read(),f,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=We(g,[0,3,1,2])),this.bias!=null&&(g=Mr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,r,a;this.dataFormat==="channelsFirst"?(n=1,r=2,a=3):(n=3,r=1,a=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Ur(t[r],o,s,this.padding),t[a]=Ur(t[a],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};yb.className="Conv2DTranspose";ne.registerClass(yb);var bb=class extends mm{constructor(e){if(super(e),this.inputSpec=[new Mt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==5)throw new V("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Ae(e);if(n.shape.length!==5)throw new V(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,a=r[0],s,i,o;this.dataFormat==="channelsFirst"?(o=2,s=3,i=4):(o=1,s=2,i=3);let l=r[o],p=r[s],u=r[i],d=this.kernelSize[0],h=this.kernelSize[1],c=this.kernelSize[2],m=this.strides[0],f=this.strides[1],g=this.strides[2],y=Ur(l,m,d,this.padding),b=Ur(p,f,h,this.padding),x=Ur(u,g,c,this.padding),v=[a,y,b,x,this.filters];this.dataFormat!=="channelsLast"&&(n=We(n,[0,2,3,4,1]));let I=Hg(n,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=We(I,[0,4,1,2,3])),this.bias!==null&&(I=Mr(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,r,a,s;this.dataFormat==="channelsFirst"?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],p=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=Ur(t[r],p,i,this.padding),t[a]=Ur(t[a],u,o,this.padding),t[s]=Ur(t[s],d,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};bb.className="Conv3DTranspose";ne.registerClass(bb);var cS=class extends hm{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=kt(t.depthwiseRegularizer),this.depthwiseConstraint=jt(t.depthwiseConstraint),this.pointwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=kt(t.pointwiseRegularizer),this.pointwiseConstraint=jt(t.pointwiseConstraint)}build(e){if(e=tt(e),e.length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Mt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{e=Ae(e);let n;if(this.rank===1)throw new He("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=We(e,[0,2,3,1])),n=Iu(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Mr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=We(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.pointwiseInitializer=Tt(this.pointwiseInitializer),e.depthwiseRegularizer=ft(this.depthwiseRegularizer),e.pointwiseRegularizer=ft(this.pointwiseRegularizer),e.depthwiseConstraint=Ht(this.depthwiseConstraint),e.pointwiseConstraint=Ht(this.pointwiseConstraint),e}};cS.className="SeparableConv";var xb=class extends cS{constructor(e){super(2,e)}};xb.className="SeparableConv2D";ne.registerClass(xb);var vb=class mS extends hm{constructor(t){super(1,t),mS.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Wy(t.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}};vb.className="Conv1D";ne.registerClass(vb);var wb=class extends je{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return W(()=>{if(e=Ae(e),this.dataFormat==="channelsLast"){let n=th(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return th(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=th(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return th(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};wb.className="Cropping2D";ne.registerClass(wb);var kb=class extends je{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,$t(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,xW(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return W(()=>{let n=Ae(e),r=n.shape;if(this.dataFormat==="channelsFirst"){n=We(n,[0,2,3,1]);let a=this.size[0]*r[2],s=this.size[1]*r[3],i=this.interpolation==="nearest"?nr.resizeNearestNeighbor(n,[a,s]):nr.resizeBilinear(n,[a,s]);return We(i,[0,3,1,2])}else{let a=this.size[0]*r[1],s=this.size[1]*r[2];return this.interpolation==="nearest"?nr.resizeNearestNeighbor(n,[a,s]):nr.resizeBilinear(n,[a,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};kb.className="UpSampling2D";ne.registerClass(kb);function hV(e,t,n=[1,1],r="valid",a,s){return W(()=>{a==null&&(a=Ar()),$t(a);let i=gb(e,a);if(e.rank!==4)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=No(i,t,n,r==="same"?"same":"valid","NHWC",s),a==="channelsFirst"&&(i=We(i,[0,3,1,2])),i})}var Ib=class extends lS{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=wt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jt(e.depthwiseConstraint),this.depthwiseRegularizer=kt(e.depthwiseRegularizer)}build(e){if(e=tt(e),e.length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{e=Ae(e);let n=hV(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Mr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Er(t,this.kernelSize[0],this.padding,this.strides[0]),s=Er(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.depthwiseRegularizer=ft(this.depthwiseRegularizer),e.depthwiseConstraint=Ht(this.depthwiseRegularizer),e}};Ib.className="DepthwiseConv2D";ne.registerClass(Ib);function fS(e,t,n,r){if(Array.isArray(e)){if(t!=null||n!=null)throw new V("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(s){return s==null||Array.isArray(s)?s:[s]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function gS(e,t,n,r=!1,a,s,i=!1,o=!1){return W(()=>{let l=t.shape.length;if(l<3)throw new V(`Input should be at least 3D, but is ${l}D.`);let p=[1,0].concat($r(2,l));if(t=We(t,p),s!=null)throw new He("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=ie(ie(a,"bool"),"float32"),a.rank===l-1&&(a=Qt(a,-1)),a=We(a,p)),r&&(t=ur(t,0),a!=null&&(a=ur(a,0)));let u=[],d,h=n,c=t.shape[0],m=Et(t),f;a!=null&&(f=Et(a));for(let y=0;y<c;++y){let b=m[y],x=W(()=>e(b,h));if(a==null)d=x[0],h=x[1];else{let v=W(()=>{let I=f[y],N=fe(qn(I),I),C=J(z(x[0],I),z(h[0],N)),E=h.map((A,R)=>J(z(x[1][R],I),z(A,N)));return{output:C,newStates:E}});d=v.output,h=v.newStates}o&&u.push(d)}let g;return o&&(g=Lt(u,1)),[d,g,h]})}var wa=class yS extends je{constructor(t){super(t);let n;if(t.cell==null)throw new V("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?n=new ym({cells:t.cell}):n=t.cell,n.stateSize==null)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new Mt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return $r(0,t).map(n=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Sf(t)&&(t=t[0]),t=t;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let r=n[0],a;if(this.returnSequences?a=[t[0],t[1],r]:a=[t[0],r],this.returnState){let s=[];for(let i of n)s.push([t[0],i]);return[a].concat(s)}else return a}computeMask(t,n){return W(()=>{Array.isArray(n)&&(n=n[0]);let r=this.returnSequences?n:null;if(this.returnState){let a=this.states.map(s=>null);return[r].concat(a)}else return r})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let r=0;r<t;++r)n.push(null);return n}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new He("Constants support is not implemented in RNN yet.");Sf(t)&&(t=t[0]),t=t;let n=this.stateful?t[0]:null,r=t.slice(2);this.inputSpec[0]=new Mt({shape:[n,null,...r]});let a=[t[0]].concat(t.slice(2));this.cell.build(a);let s;if(Array.isArray(this.cell.stateSize)?s=this.cell.stateSize:s=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),s))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(i=>new Mt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,n=!1){W(()=>{if(!this.stateful)throw new Aa("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape[0];if(r==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Nt([r,a])):this.states_=[Nt([r,this.cell.stateSize])];else if(t==null)Re(this.states_),this.keptStates!=null&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Nt([r,a])):this.states_[0]=Nt([r,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n===!0?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let a=0;a<this.states_.length;++a){let s=t[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,o=[r,i];if(!w.arraysEqual(s.shape,o))throw new V(`State ${a} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${s.shape}`);this.states_[a]=s}}this.states_=this.states_.map(a=>Vt(a.clone()))})}apply(t,n){let r=n==null?null:n.initialState,a=n==null?null:n.constants;n==null&&(n={});let s=fS(t,r,a,this.numConstants);t=s.inputs,r=s.initialState,a=s.constants;let i=[],o=[];if(r!=null){n.initialState=r,i=i.concat(r),this.stateSpec=[];for(let l of r)this.stateSpec.push(new Mt({shape:l.shape}));o=o.concat(this.stateSpec)}if(a!=null&&(n.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof Fr){let l=[t].concat(i),p=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=p;let d=super.apply(l,n);return this.inputSpec=u,d}else return super.apply(t,n)}call(t,n){return W(()=>{let r=n==null?null:n.mask,a=n==null?null:n.training,s=n==null?null:n.initialState;t=Ae(t),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(t));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new V(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:a},l=gS((c,m)=>{let f=this.cell.call([c].concat(m),o);return[f[0],f.slice(1)]},t,s,this.goBackwards,r,null,this.unroll,this.returnSequences),p=l[0],u=l[1],d=l[2];this.stateful&&this.resetStates(d,a);let h=this.returnSequences?u:p;return this.returnState?[h].concat(d):h})}getInitialState(t){return W(()=>{let n=Nt(t.shape);return n=xe(n,[1,2]),n=bd(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?kf(n,[1,r]):n):this.cell.stateSize>1?[kf(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);let r=this.cell.getConfig();return this.getClassName()===yS.className&&(n.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),t),n)}static fromConfig(t,n,r={}){let a=n.cell,s=Cr(a,r);return new t(Object.assign(n,{cell:s}))}};wa.className="RNN";ne.registerClass(wa);var Id=class extends je{},fm=class extends Id{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,en(this.units,"units"),this.activation=Ja(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kt(e.kernelRegularizer),this.recurrentRegularizer=kt(e.recurrentRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ll([1,Xa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ll([1,Xa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ya({ones:()=>qn(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ya({ones:()=>qn(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?a=Kr(z(e,s),this.kernel.read()):a=Kr(e,this.kernel.read()),this.bias!=null&&(a=Mr(a,this.bias.read())),i!=null&&(n=z(n,i));let o=J(a,Kr(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Za(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ft(this.kernelRegularizer),recurrentRegularizer:ft(this.recurrentRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),recurrentConstraint:Ht(this.recurrentConstraint),biasConstraint:Ht(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};fm.className="SimpleRNNCell";ne.registerClass(fm);var Sb=class extends wa{constructor(e){e.cell=new fm(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}};Sb.className="SimpleRNN";ne.registerClass(Sb);var gm=class extends Id{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=e.units,en(this.units,"units"),this.activation=Ja(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ja(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kt(e.kernelRegularizer),this.recurrentRegularizer=kt(e.recurrentRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ll([1,Xa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ll([1,Xa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ya({ones:()=>qn(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ya({ones:()=>qn(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,s=this.recurrentDropoutMask,i,o,l;0<this.dropout&&this.dropout<1&&(e=z(e,a[0]));let p=Kr(e,this.kernel.read());this.useBias&&(p=Mr(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=z(r,s[0]));let u=this.recurrentKernel.read(),[d,h]=An(u,[2*this.units,this.units],u.rank-1),c=Kr(r,d),[m,f,g]=An(p,3,p.rank-1),[y,b]=An(c,2,c.rank-1);i=this.recurrentActivation.apply(J(m,y)),o=this.recurrentActivation.apply(J(f,b));let x=Kr(z(o,r),h);l=this.activation.apply(J(g,x));let v=J(z(i,r),z(J(1,bt(i)),l));return[v,v]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Za(this.activation),recurrentActivation:Za(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ft(this.kernelRegularizer),recurrentRegularizer:ft(this.recurrentRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),recurrentConstraint:Ht(this.recurrentConstraint),biasConstraint:Ht(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};gm.className="GRUCell";ne.registerClass(gm);var Nb=class extends wa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gm(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Nb.className="GRU";ne.registerClass(Nb);var Sd=class extends Id{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,en(this.units,"units"),this.activation=Ja(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ja(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=kt(e.kernelRegularizer),this.recurrentRegularizer=kt(e.recurrentRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ll([1,Xa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ll([1,Xa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=tt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,s=this.units;r=new(t=class extends wr{apply(i,o){let l=a.apply([s]),p=new tm().apply([s]),u=a.apply([s*2]);return hw(hw(l,p),u)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return W(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ya({ones:()=>qn(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ya({ones:()=>qn(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,p,u;0<this.dropout&&this.dropout<1&&(e=z(e,s[0]));let d=Kr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=z(r,i[0])),d=J(d,Kr(r,this.recurrentKernel.read())),this.useBias&&(d=Mr(d,this.bias.read()));let[h,c,m,f]=An(d,4,d.rank-1);o=this.recurrentActivation.apply(h),l=this.recurrentActivation.apply(c),p=J(z(l,a),z(o,this.activation.apply(m))),u=this.recurrentActivation.apply(f);let g=z(u,this.activation.apply(p));return[g,g,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Za(this.activation),recurrentActivation:Za(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ft(this.kernelRegularizer),recurrentRegularizer:ft(this.recurrentRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),recurrentConstraint:Ht(this.recurrentConstraint),biasConstraint:Ht(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};Sd.className="LSTMCell";ne.registerClass(Sd);var Tb=class extends wa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sd(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Tb.className="LSTM";ne.registerClass(Tb);var ym=class extends Id{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return W(()=>{e=e;let n=e.slice(1),r=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(n.splice(0,i.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],i===0?s=[e[0]].concat(n):s=[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(let i of a.slice().reverse())n.push(...i);return[s[0]].concat(n)})}build(e){Sf(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,r)=>{Ds(`RNNCell_${r}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),n={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),n)}static fromConfig(e,t,n={}){let r=[];for(let a of t.cells)r.push(Cr(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Nf(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let s=0;s<n.weights.length;++s)t.push([n.weights[s],a[s]])}Zy(t)}};ym.className="StackedRNNCells";ne.registerClass(ym);function Ya(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),n):xI(t(),n),o=()=>vd(i,t,r);return!a||a<=1?Vt(o().clone()):Array(a).fill(void 0).map(o).map(l=>Vt(l.clone()))}var cV=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]]);return n},bS=class extends wa{constructor(e){if(e.unroll)throw new He("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new He("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Mt({ndim:5})]}call(e,t){return W(()=>{if(this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new V("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return W(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=Nt(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new Aa("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(n[0]==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Nt(a)):this.states_=[Nt(a)];else if(e==null)Re(this.states_),this.keptStates!=null&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Nt(a)):this.states_[0]=Nt(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=a;if(!w.arraysEqual(i.shape,o))throw new V(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Vt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],p=e[o?4:3],u=Er(l,r[0],a,s[0],i[0]),d=Er(p,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,u,d]:[u,d,n]]}};bS.className="ConvRNN2D";var bm=class extends Sd{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,en(this.filters,"filters"),this.kernelSize=Zo(n,2,"kernelSize"),this.kernelSize.forEach(o=>en(o,"kernelSize")),this.strides=Zo(r||1,2,"strides"),this.strides.forEach(o=>en(o,"strides")),this.padding=a||"valid",pr(this.padding),this.dataFormat=s||"channelsLast",$t(this.dataFormat),this.dilationRate=Zo(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>en(o,"dilationRate"))}build(e){var t;e=tt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=4,s=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,p=this.filters;o=new(t=class extends wr{apply(u,d){let h=l.apply([p]),c=$n([p]),m=l.apply([p*2]);return Vy([h,c,m])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return W(()=>{if(e.length!==3)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ya({ones:()=>qn(r),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(Z,ee,X)=>!ee||!ee[X]?Z:z(ee[X],Z),p=l(r,o,0),u=l(r,o,1),d=l(r,o,2),h=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ya({ones:()=>qn(a),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,m=l(a,c,0),f=l(a,c,1),g=l(a,c,2),y=l(a,c,3),b=3,[x,v,I,N]=An(this.kernel.read(),i,b),[C,E,A,R]=this.useBias?An(this.bias.read(),i):[null,null,null,null];p=this.inputConv(p,x,C,this.padding),u=this.inputConv(u,v,E,this.padding),d=this.inputConv(d,I,A,this.padding),h=this.inputConv(h,N,R,this.padding);let[F,S,D,P]=An(this.recurrentKernel.read(),i,b);m=this.recurrentConv(m,F),f=this.recurrentConv(f,S),g=this.recurrentConv(g,D),y=this.recurrentConv(y,P);let U=this.recurrentActivation.apply(J(p,m)),G=this.recurrentActivation.apply(J(u,f)),K=J(z(G,s),z(U,this.activation.apply(J(d,g)))),j=z(this.recurrentActivation.apply(J(h,y)),this.activation.apply(K));return[j,j,K]})}getConfig(){let e=super.getConfig(),t=cV(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),n)}inputConv(e,t,n,r){let a=kn(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?Mr(a,n,this.dataFormat):a}recurrentConv(e,t){return kn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};bm.className="ConvLSTM2DCell";ne.registerClass(bm);var _b=class extends bS{constructor(e){let t=new bm(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};_b.className="ConvLSTM2D";ne.registerClass(_b);var xm=class extends je{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return n}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ae(e);if(0<this.rate&&this.rate<1){let r=t.training==null?!1:t.training,a=this.getNoiseShape(n);return vd(()=>xI(n,this.rate,a,this.seed),()=>n,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};xm.className="Dropout";ne.registerClass(xm);var Cb=class extends xm{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Cb.className="SpatialDropout1D";ne.registerClass(Cb);var Eb=class extends je{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,en(this.units,"units"),this.activation=Ja(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jt(e.kernelConstraint),this.biasConstraint=jt(e.biasConstraint),this.kernelRegularizer=kt(e.kernelRegularizer),this.biasRegularizer=kt(e.biasRegularizer),this.activityRegularizer=kt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=tt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=tt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ae(e),r=hI(this.activation.getClassName()),a;return r!=null?a=Kr(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Kr(n,this.kernel.read()),this.bias!=null&&(a=Mr(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:Za(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ft(this.kernelRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),biasConstraint:Ht(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Eb.className="Dense";ne.registerClass(Eb);var $b=class extends je{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tt(e);for(let t of e.slice(1))if(t==null)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ba(e,1)]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ae(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let r=[0];for(let a=2;a<n.rank;++a)r.push(a);r.push(1),n=We(n,r)}return NW(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};$b.className="Flatten";ne.registerClass($b);var Ab=class extends je{constructor(e){super(e),this.supportsMasking=!0,this.activation=Ja(e.activation)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ae(e);return this.activation.apply(n)})}getConfig(){let e={activation:Za(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Ab.className="Activation";ne.registerClass(Ab);var Fb=class extends je{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return W(()=>(e=Ae(e),IW(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Fb.className="RepeatVector";ne.registerClass(Fb);var Rb=class extends je{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let o=0;o<r.length;++o){let l=r[o];if(this.isUnknown(l))if(s===null)s=o;else throw new V("Can only specifiy one unknown dimension.");else a*=l}let i=Ba(e);if(s!==null){if(a===0||i%a!==0)throw new V(n);r[s]=i/a}else if(i!==a)throw new V(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ae(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return B(n,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Rb.className="Reshape";ne.registerClass(Rb);var Db=class extends je{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=$r(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Mt({ndim:this.dims.length+1})]}computeOutputShape(e){e=tt(e);let t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return We(Ae(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Db.className="Permute";ne.registerClass(Db);var Mb=class extends je{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ae(e);return cp(Ks(n,this.maskValue),-1)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ae(e),r=cp(Ks(n,this.maskValue),-1,!0);return z(n,ie(r,n.dtype))})}};Mb.className="Masking";ne.registerClass(Mb);var Ob=class extends je{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(st(e.inputLength))}this.inputDim=e.inputDim,en(this.inputDim,"inputDim"),this.outputDim=e.outputDim,en(this.outputDim,"outputDim"),this.embeddingsInitializer=wt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=kt(e.embeddingsRegularizer),this.activityRegularizer=kt(e.activityRegularizer),this.embeddingsConstraint=jt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return W(()=>this.maskZero?(e=Ae(e),Ks(e,Je(e))):null)}computeOutputShape(e){if(e=tt(e),this.inputLength==null)return[...e,this.outputDim];let t=st(this.inputLength);if(t.length!==e.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(a!=null&&s!=null&&a!==s)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ae(e);n.dtype!=="int32"&&(n=ma(n,"int32"));let r=bI(this.embeddings.read(),B(n,[n.size]));return B(r,tt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Tt(this.embeddingsInitializer),embeddingsRegularizer:ft(this.embeddingsRegularizer),activityRegularizer:ft(this.activityRegularizer),embeddingsConstraint:Ht(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Ob.className="Embedding";ne.registerClass(Ob);var $o=class extends je{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new He}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(a==null||s==null||a<0||s<0)n.push(null);else if(a===1)n.push(s);else if(s===1)n.push(a);else{if(a!==s)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tt(e)]),e=e,e.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)a!=null&&a[0]!==null&&t.push(a[0]);if(t=Pa(t),t.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let s=e[a]==null?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let r=e.map(a=>a.length);e.indexOf(null)===-1&&Pa(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return W(()=>{if(e=e,this.reshapeRequired){let n=[],r=e.map(a=>a.rank);if(r.indexOf(null)===-1){let a=Xa(r);for(let s of e){let i=s.rank;for(let o=0;o<a-i;++o)s=bd(s,1);n.push(s)}return this.mergeFunction(n)}else{let a=!1;for(let o of e){let l=o.rank;if(l==null){let p=o.shape,u=p[0],d=p.slice(1).concat([u]),h=B(o,[u].concat(Ba(p.slice(1))));h=We(h,[1,0]),h=B(h,d),n.push(h),a=!0}else if(l>1){let p=$r(1,l).concat([0]);n.push(We(o,p)),a=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(a){if(i==null){let o=s.shape,l=o.length,p=o[l-1],u=[p].concat(o.slice(0,o.length-1));s=B(We(B(s,[-1,p]),[1,0]),u)}else if(i>1){let o=[i-1].concat($r(0,i-1));s=We(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(let r of e)r!=null&&r[0]!==null&&n.push(r[0]);return n=Pa(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return W(()=>{if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an Array");if(!Array.isArray(e))throw new V("`inputs` should be an Array");if(t.length!==e.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Qt(r,0));let n=t[0];for(let r=1;r<t.length-1;++r)n=br(n,t[r]);return n})}},Lb=class extends $o{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=J(t,e[n]);return t})}};Lb.className="Add";ne.registerClass(Lb);var zb=class extends $o{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=z(t,e[n]);return t})}};zb.className="Multiply";ne.registerClass(zb);var Pb=class extends $o{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=J(t,e[n]);return z(1/e.length,t)})}};Pb.className="Average";ne.registerClass(Pb);var Bb=class extends $o{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ea(t,e[n]);return t})}};Bb.className="Maximum";ne.registerClass(Bb);var Wb=class extends $o{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qa(t,e[n]);return t})}};Wb.className="Minimum";ne.registerClass(Wb);var Vb=class extends $o{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(r!=null){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let a=e[r].slice();a.splice(this.axis,1);let s=!1;for(let i of n)if(w.arraysEqual(i,a)){s=!0;break}s||n.push(a)}if(n.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return W(()=>Vy(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new V("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let a of t.slice(1)){if(n[r]==null||a[r]==null){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new V("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new V(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return W(()=>{let n=!0;if(t.forEach(s=>{if(s!=null){n=!1;return}}),n)return null;let r=[];for(let s=0;s<e.length;++s)t[s]==null?r.push(ie(qn(e[s]),"bool")):t[s].rank<e[s].rank?r.push(Qt(t[s],-1)):r.push(t[s]);let a=dt(r,this.axis);return wc(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Vb.className="Concatenate";ne.registerClass(Vb);function Gu(e,t){for(;e<0;)e+=t;return e}function mV(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new He("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new He("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;n==null&&(n=[r-1,a-2]);let s=n;return W(()=>{let i;if(r>a){i=r-a;let l=[];for(let p=0;p<i;++p)l.push(1);t=B(t,t.shape.concat(l))}else if(a>r){i=a-r;let l=[];for(let p=0;p<i;++p)l.push(1);e=B(e,e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=xe(z(e,t),s[0]):o=xe(z(We(e,[1,0]),t),s[1]);else{let l=s[0]!==e.shape.length-1,p=s[1]===t.shape.length-1;o=Be(e,t,l,p)}if(i>0){let l;r>a?l=r+a-3:l=r-1;let p=[];for(let u=l;u<l+i;++u)p.push(u);o=ds(o,p)}return o.shape.length===1&&(o=Qt(o,1)),o})}var Ub=class extends $o{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new He("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new V(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((a,s)=>Gu(a,e[s].shape.length)):r=[Gu(this.axes,t.shape.length),Gu(this.axes,n.shape.length)],this.normalize&&(t=Oh(t,r[0]),n=Oh(n,r[1])),mV(t,n,r)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Gu(this.axes,e.length),Gu(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new He("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return a.length===1&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Ub.className="Dot";ne.registerClass(Ub);var Gb=class extends je{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ae(e);return vd(()=>J(em(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Gb.className="GaussianNoise";ne.registerClass(Gb);var Hb=class extends je{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ae(e);return this.rate>0&&this.rate<1?vd(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return z(n,em(n.shape,1,r))},()=>n,t.training||!1):n})}};Hb.className="GaussianDropout";ne.registerClass(Hb);var jb=class extends je{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ae(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return vd(()=>{let r=Ae(e),a=-1.6732632423543772*1.0507009873554805,s=ba(us(n),this.rate);s=ma(s,"float32");let i=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-i*a*this.rate,l=J(z(r,s),z(J(s,-1),a));return J(z(l,i),o)},()=>Ae(e),t.training||!1)}return e})}};jb.className="AlphaDropout";ne.registerClass(jb);function xp(e,t,n,r,a,s=.001){let i;if(e.rank===2)i=Dg(e,t,n,r,a,s);else if(e.rank===3)i=Mg(e,t,n,r,a,s);else if(e.rank===4)i=Og(e,t,n,r,a,s);else throw new He(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function fV(e,t,n,r,a=.001){return W(()=>{let s=pd(e,r),i=s.mean,o=s.variance;return[xp(e,i,o,n,t,a),i,o]})}function gV(e,t,n,r,a=.001){return W(()=>{let s=pd(e,r),i=s.mean,o=s.variance,l=[];for(let c of $r(0,e.rank))r.indexOf(c)!==-1?l.push(1):l.push(e.shape[c]);let p=B(i,l),u=B(o,l),d=t==null?null:B(t,l),h=n==null?null:B(n,l);return[xp(e,p,u,h,d,a),i,o]})}function yV(e,t,n,r,a=.001){return w.arraysEqual(r.slice().sort(),$r(0,e.rank-1))?fV(e,t,n,r,a):gV(e,t,n,r,a)}var qb=class extends je{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.movingMeanInitializer=wt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=wt(e.movingVarianceInitializer||"ones"),this.betaConstraint=jt(e.betaConstraint),this.gammaConstraint=jt(e.gammaConstraint),this.betaRegularizer=kt(e.betaRegularizer),this.gammaRegularizer=kt(e.gammaRegularizer)}build(e){e=tt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new V(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Mt({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return W(()=>{let n=t.training==null?!1:t.training,r=Ae(e),a=r.shape,s=a.length,i=$r(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=Zs(1,s);l[o]=a[o];let p=i.slice();p.sort();let u=!w.arraysEqual(p,$r(0,s).slice(0,s-1)),d=()=>{if(u){let g=B(this.movingMean.read(),l),y=B(this.movingVariance.read(),l),b=this.center?B(this.beta.read(),l):null,x=this.scale?B(this.gamma.read(),l):null;return xp(r,g,y,b,x,this.epsilon)}else return xp(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[h,c,m]=yV(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(g,y,b)=>{W(()=>{let x=1-b,v=g.read(),I=z(fe(v,y),x);g.write(fe(v,I))})};return f(this.movingMean,c,this.momentum),f(this.movingVariance,m,this.momentum),h})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),movingMeanInitializer:Tt(this.movingMeanInitializer),movingVarianceInitializer:Tt(this.movingVarianceInitializer),betaRegularizer:ft(this.betaRegularizer),gammaRegularizer:ft(this.gammaRegularizer),betaConstraint:Ht(this.betaConstraint),gammaConstraint:Ht(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};qb.className="BatchNormalization";ne.registerClass(qb);var Kb=class extends je{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.betaRegularizer=kt(e.betaRegularizer),this.gammaRegularizer=kt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=tt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Pa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(a=>e[a]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Ae(e),r=n.shape,a=r.length;return W(()=>{let{mean:s,variance:i}=pd(n,this.axis,!0),o=Zs(1,a);for(let c of this.axis)o[c]=r[c];let l=c=>c!=null&&c.shape.length!==a?B(c,o):c,p=this.scale?l(this.gamma.read()):null,u=this.center?l(this.beta.read()):null,d=[],h=[];for(let c=0;c<a;++c)this.axis.indexOf(c)!==-1?(d.push(r[c]),h.push(1)):(d.push(1),h.push(r[c]));return s=Un(s,d),i=Un(i,d),p!=null&&(p=Un(p,h)),u!=null&&(u=Un(u,h)),xp(n,s,i,u,p,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),betaRegularizer:ft(this.betaRegularizer),gammaRegularizer:ft(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Kb.className="LayerNormalization";ne.registerClass(Kb);function bV(e,t,n){return W(()=>{if(e.rank!==4)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Ar()),n!=="channelsLast"&&n!=="channelsFirst")throw new V(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],Dr(e,r)})}var Xb=class extends je{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Ar():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=tt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return W(()=>bV(Ae(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Xb.className="ZeroPadding2D";ne.registerClass(Xb);function vm(e,t,n,r,a,s){return W(()=>{$t(a),mI(s),pr(r),n==null&&(n=[1,1]),r==null&&(r="valid"),a==null&&(a=Ar()),s==null&&(s="max"),e=gb(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=Zt(e,t,n,o):i=ya(e,t,n,o),a==="channelsFirst"&&(i=We(i,[0,3,1,2])),i})}function xS(e,t,n,r,a,s){return W(()=>{$t(a),mI(s),pr(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),a==null&&(a=Ar()),s==null&&(s="max"),e=oS(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=iy(e,t,n,o):i=Rg(e,t,n,o),a==="channelsFirst"&&(i=We(i,[0,4,1,2,3])),i})}var vS=class extends je{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(en(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);en(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,pr(this.padding),this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){e=tt(e);let t=Er(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return W(()=>{this.invokeCallHook(e,t),e=bd(Ae(e),2);let n=this.poolingFunction(Ae(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ds(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Zb=class extends vS{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $t(a),pr(r),vm(e,t,n,r,a,"max")}};Zb.className="MaxPooling1D";ne.registerClass(Zb);var Jb=class extends vS{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $t(a),pr(r),vm(e,t,n,r,a,"avg")}};Jb.className="AveragePooling1D";ne.registerClass(Jb);var wS=class extends je{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];en(this.poolSize,"poolSize"),en(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,$t(this.dataFormat),pr(this.padding),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Er(t,this.poolSize[0],this.padding,this.strides[0]),n=Er(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ae(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Yb=class extends wS{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $t(a),pr(r),vm(e,t,n,r,a,"max")}};Yb.className="MaxPooling2D";ne.registerClass(Yb);var Qb=class extends wS{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $t(a),pr(r),vm(e,t,n,r,a,"avg")}};Qb.className="AveragePooling2D";ne.registerClass(Qb);var kS=class extends je{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];en(this.poolSize,"poolSize"),en(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,$t(this.dataFormat),pr(this.padding),this.inputSpec=[new Mt({ndim:5})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Er(t,this.poolSize[0],this.padding,this.strides[0]),n=Er(n,this.poolSize[1],this.padding,this.strides[1]),r=Er(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ae(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ex=class extends kS{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $t(a),pr(r),xS(e,t,n,r,a,"max")}};ex.className="MaxPooling3D";ne.registerClass(ex);var tx=class extends kS{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return $t(a),pr(r),xS(e,t,n,r,a,"avg")}};tx.className="AveragePooling3D";ne.registerClass(tx);var IS=class extends je{constructor(e){super(e),this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new He}},nx=class extends IS{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Ae(e);return St(n,1)})}};nx.className="GlobalAveragePooling1D";ne.registerClass(nx);var rx=class extends IS{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Ae(e);return ir(n,1)})}};rx.className="GlobalMaxPooling1D";ne.registerClass(rx);var SS=class extends je{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,$t(this.dataFormat),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new He}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ax=class extends SS{call(e,t){return W(()=>{let n=Ae(e);return this.dataFormat==="channelsLast"?St(n,[1,2]):St(n,[2,3])})}};ax.className="GlobalAveragePooling2D";ne.registerClass(ax);var sx=class extends SS{call(e,t){return W(()=>{let n=Ae(e);return this.dataFormat==="channelsLast"?ir(n,[1,2]):ir(n,[2,3])})}};sx.className="GlobalMaxPooling2D";ne.registerClass(sx);var NS=class extends je{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,a=Cr(r,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},ix=class extends NS{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=tt(e),e.length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=tt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return W(()=>(e=Ae(e),gS((n,r)=>[Ae(this.layer.call(n,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};ix.className="TimeDistributed";ne.registerClass(ix);function xV(e){Co(bW,"BidirectionalMergeMode",e)}var vV="concat",ox=class extends NS{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Cr(n),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Cr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?vV:e.mergeMode,xV(this.mergeMode),e.weights)throw new He("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,r,a;return this.returnState&&(a=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,r=[n]):this.mergeMode==null?r=[n,n.slice()]:r=[n],this.returnState?this.mergeMode==null?r.concat(a).concat(a.slice()):[n].concat(a).concat(a.slice()):En(r)}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let a=fS(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&r==null)return super.apply(e,t);let s=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let p=n.map(u=>new Mt({shape:u.shape}));this.forwardLayer.stateSpec=p.slice(0,l/2),this.backwardLayer.stateSpec=p.slice(l/2),i.push(...p)}if(r!=null)throw new He("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Fr;for(let l of s)if(l instanceof Fr!==o)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),p=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=p;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return W(()=>{let n=t.initialState,r,a;if(n==null)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=ur(a,1));let i;return this.mergeMode==="concat"?i=Vy([r,a]):this.mergeMode==="sum"?i=J(r,a):this.mergeMode==="ave"?i=z(.5,J(r,a)):this.mergeMode==="mul"?i=z(r,a):this.mergeMode==null&&(i=[r,a]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ds(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ds(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Cr(t.layer);if(delete t.layer,t.numConstants!=null)throw new He("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};ox.className="Bidirectional";ne.registerClass(ox);var lx=class extends je{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>(e=Ae(e),e.dtype!=="float32"&&(e=ma(e,"float32")),J(z(e,this.scale),this.offset)))}};lx.className="Rescaling";ne.registerClass(lx);var{resizeBilinear:wV,cropAndResize:kV}=nr,ux=class extends je{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return W(()=>{let l,p=!1,u=t/s,d=n/i,h=(r+t)/s,c=(a+n)/i,m=[u,d,h,c],f=[];e.rank===3?(p=!0,l=Lt([e])):l=e;for(let x=0;x<l.shape[0];x++)f.push(m);let g=wn(f,[f.length,4]),y=Xs(0,f.length,1,"int32"),b=kV(l,g,y,[r,a],"nearest");return ma(p?Ae(Et(b)):b,o)})}upsize(e,t,n,r){return W(()=>{let a=wV(e,[t,n]);return ma(a,r)})}call(e,t){return W(()=>{let n=Ae(e),r=n.dtype,a=n.shape,s=a[a.length-3],i=a[a.length-2],o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let l=0;return i!==this.width&&(l=Math.floor((i-this.width)/2),l===0&&(l=1)),o>=0&&l>=0?this.centerCrop(n,o,l,this.height,this.width,s,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=tt(e);let t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};ux.className="CenterCrop";ne.registerClass(ux);function IV(e,t,n,r){let a=Ae(e);if(a.dtype!=="int32"&&(a=ma(a,"int32")),t==="int")return a;let s=a.shape;if(a.rank===0&&(a=Qt(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Qt(a,-1)),a.rank>2)throw new V(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i=["multiHot","oneHot"].includes(t),o=a,l;if(typeof r<"u"&&t==="count"?l=$h(o,r,n,i):l=$h(o,[],n,i),t!=="tfIdf")return l;if(r)return z(l,r);throw new V("When outputMode is 'tfIdf', weights must be provided.")}var px=class extends je{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=tt(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return W(()=>{e=Ae(e),e.dtype!=="int32"&&(e=ma(e,"int32"));let n;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new V(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);n=Ae(t.countWeights)}let r=ir(e),a=tl(e),s=_n(this.numTokens,r).bufferSync().get(0),i=ba(a,0).bufferSync().get(0);if(!(s&&i))throw new V(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return IV(e,this.outputMode,this.numTokens,n)})}};px.className="CategoryEncoding";ne.registerClass(px);var SV=["bilinear","nearest"],Ew=new Set(SV),dx=class extends je{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(Ew.has(e.interpolation))this.interpolation=e.interpolation;else throw new V(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=tt(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>{let n=[this.height,this.width];if(this.interpolation==="bilinear")return nr.resizeBilinear(e,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return nr.resizeNearestNeighbor(e,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Ew]} are supported`)})}};dx.className="Resizing";ne.registerClass(dx);var TS=class{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}};TS.className="RandomSeed";var _S=class extends je{constructor(e){super(e),this.randomGenerator=new TS(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}};_S.className="BaseRandomLayer";var NV=["bilinear","nearest"],$w=new Set(NV),hx=class extends _S{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new V(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new V(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new V(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n)if($w.has(n))this.interpolation=n;else throw new V(`Invalid interpolation parameter: ${n} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=tt(e);let t=e[2];return[this.imgHeight,-1,t]}call(e,t){return W(()=>{let n=Ae(e);this.imgHeight=n.shape[n.shape.length-3];let r=n.shape[n.shape.length-2];this.widthFactor=us([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*r;a=Math.round(a);let s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return nr.resizeBilinear(e,s);case"nearest":return nr.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...$w]} are supported`)}})}};hx.className="RandomWidth";ne.registerClass(hx);function TV(e){return new Tu(e)}function _V(e){return new cb(e)}function CV(e){return new pb(e)}function EV(e){return new db(e)}function $V(e){return new hb(e)}function AV(e){return new fb(e)}function FV(e){return new mb(e)}function RV(e){return new vb(e)}function DV(e){return new cm(e)}function MV(e){return new yb(e)}function OV(e){return new mm(e)}function LV(e){return new bb(e)}function zV(e){return new xb(e)}function PV(e){return new wb(e)}function BV(e){return new kb(e)}function WV(e){return new Ib(e)}function VV(e){return new Ab(e)}function UV(e){return new Eb(e)}function GV(e){return new xm(e)}function HV(e){return new Cb(e)}function jV(e){return new $b(e)}function qV(e){return new Fb(e)}function KV(e){return new Rb(e)}function XV(e){return new Db(e)}function ZV(e){return new Ob(e)}function JV(e){return new Lb(e)}function YV(e){return new Pb(e)}function QV(e){return new Vb(e)}function eU(e){return new Bb(e)}function tU(e){return new Wb(e)}function nU(e){return new zb(e)}function rU(e){return new Ub(e)}function aU(e){return new qb(e)}function sU(e){return new Kb(e)}function iU(e){return new Xb(e)}function cx(e){return new Jb(e)}function oU(e){return cx(e)}function lU(e){return cx(e)}function mx(e){return new Qb(e)}function uU(e){return mx(e)}function pU(e){return mx(e)}function fx(e){return new tx(e)}function dU(e){return fx(e)}function hU(e){return fx(e)}function cU(e){return new nx(e)}function mU(e){return new ax(e)}function CS(e){return new rx(e)}function ES(e){return new sx(e)}function $S(e){return new Zb(e)}function AS(e){return new Yb(e)}function fU(e){return new ex(e)}function gU(e){return new Nb(e)}function yU(e){return new gm(e)}function bU(e){return new Tb(e)}function xU(e){return new Sd(e)}function vU(e){return new Sb(e)}function wU(e){return new fm(e)}function kU(e){return new _b(e)}function IU(e){return new bm(e)}function SU(e){return new wa(e)}function NU(e){return new ym(e)}function TU(e){return new ox(e)}function _U(e){return new ix(e)}var CU=CS,EU=ES,$U=$S,AU=AS;function FU(e){return new Gb(e)}function RU(e){return new Hb(e)}function DU(e){return new jb(e)}function MU(e){return new Mb(e)}function OU(e){return new lx(e)}function LU(e){return new ux(e)}function zU(e){return new dx(e)}function PU(e){return new px(e)}function BU(e){return new hx(e)}var FS={};De(FS,{MAPE:()=>JU,MSE:()=>eG,binaryAccuracy:()=>WU,binaryCrossentropy:()=>VU,categoricalAccuracy:()=>GU,categoricalCrossentropy:()=>HU,cosineProximity:()=>KU,mape:()=>YU,meanAbsoluteError:()=>XU,meanAbsolutePercentageError:()=>ZU,meanSquaredError:()=>QU,mse:()=>tG,precision:()=>jU,r2Score:()=>nG,recall:()=>qU,sparseCategoricalAccuracy:()=>UU});function WU(e,t){return ab(e,t)}function VU(e,t){return MI(e,t)}function UU(e,t){return OI(e,t)}function GU(e,t){return sb(e,t)}function HU(e,t){return ib(e,t)}function jU(e,t){return DI(e,t)}function qU(e,t){return S4(e,t)}function KU(e,t){return rb(e,t)}function XU(e,t){return um(e,t)}function ZU(e,t){return _u(e,t)}function JU(e,t){return _u(e,t)}function YU(e,t){return _u(e,t)}function QU(e,t){return Eo(e,t)}function eG(e,t){return Eo(e,t)}function tG(e,t){return Eo(e,t)}function nG(e,t){return N4(e,t)}var RS={};De(RS,{modelFromJSON:()=>tV});var DS={};De(DS,{l1:()=>aG,l1l2:()=>rG,l2:()=>sG});function rG(e){return new kd(e)}function aG(e){return lV(e)}function sG(e){return uV(e)}var MS=class extends ul{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof da))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function rh(e,t){return e<t}function Aw(e,t){return e>t}var OS=class extends MS{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new He("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=rh:this.mode==="max"?this.monitorFunc=Aw:this.monitor.indexOf("acc")!==-1?this.monitorFunc=Aw:this.monitorFunc=rh,this.monitorFunc===rh&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===rh?1/0:-1/0}async onEpochEnd(e,t){await Ea(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function iG(e){return new OS(e)}var oG={earlyStopping:iG},lG=H();lG.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Pn;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(Pn||(Pn={}));var Fw;(function(e){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Fw||(Fw={}));var gx={};function uG(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};gx[e]=n}function LS(e){return gx[e]}function pG(e){delete gx[e]}function k(e,t,n,r,a){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd,p=o<0?t.inputNames.length+o:o;if(s.type==="tensor")return ln(t.inputNames[p],n,r,a);if(s.type==="tensors"){let h=t.inputs.slice(o,l);return t.inputNames.slice(o,l).filter((c,m)=>{var f;return((f=h[m])===null||f===void 0?void 0:f.op)!=="NoOp"}).map(c=>ln(c,n,r,a))}let u=ln(t.inputNames[p],n,r,a),d=u.dataSync();return s.type==="number"?d[0]:w.toNestedArray(u.shape,d)}let i=t.attrParams[e];return i&&i.value}function ln(e,t,n,r){let[a,s]=Wn(e,n);if(r!=null){let o=r.getHashTableHandleByName(a);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[Wh(a,o)]);return i!==void 0?t[Wh(a,i)][s]:void 0}function Rw(e,t,n){return t[Wh(e,n.currentContextId)]}function oa(e,t){let[n,r,a]=Wn(e,t);return[Wh(n,t&&t.currentContextId),r,a]}function Wh(e,t){return t?`${e}-${t}`:e}function Wn(e,t){if(e==="")return["",0,void 0];let n=t!=null&&t.parseNodeNameCache!=null;if(n){let s=t.parseNodeNameCache.get(e);if(s!=null)return s}let r=e.split(":"),a;if(r.length===1)a=[e,0,void 0];else{let s=r[0],i=r.length===3?r[1]:void 0,o=Number(r[r.length-1]);a=[s,o,i]}return n&&t.parseNodeNameCache.set(e,a),a}function gh(e,t,n){let r=k("pad",e,t,n);if(r==="explicit"){r=k("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)a[s][0]=r[s*2],a[s][1]=r[s*2+1];return a}return r}function la(e){return e.kept?e:jr(e)}var zS={};De(zS,{json:()=>dG});var dG=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],PS={};De(PS,{json:()=>hG});var hG=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],BS={};De(BS,{json:()=>cG});var cG=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],WS={};De(WS,{json:()=>mG});var mG=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],VS={};De(VS,{json:()=>fG});var fG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],US={};De(US,{json:()=>gG});var gG=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],GS={};De(GS,{json:()=>yG});var yG=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],HS={};De(HS,{json:()=>bG});var bG=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],jS={};De(jS,{json:()=>xG});var xG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],qS={};De(qS,{json:()=>vG});var vG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],KS={};De(KS,{json:()=>wG});var wG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],XS={};De(XS,{json:()=>kG});var kG=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],ZS={};De(ZS,{json:()=>IG});var IG=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],JS={};De(JS,{json:()=>SG});var SG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],YS={};De(YS,{json:()=>NG});var NG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],QS={};De(QS,{json:()=>TG});var TG=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],eN={};De(eN,{json:()=>_G});var _G=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],tN={};De(tN,{json:()=>CG});var CG=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],nN={};De(nN,{json:()=>EG});var EG=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Dw=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[zS,PS,BS,WS,VS,US,GS,HS,jS,qS,KS,XS,ZS,JS,YS,QS,eN,tN,nN],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((m,f)=>(m[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?r.push(m[f.name]):f.op==="Const"?a.push(m[f.name]):(f.input==null||f.input.length===0)&&s.push(m[f.name]),m),{}),o=[],l=[],p={},u={};t!=null&&(p=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let d=Object.keys(i);d.forEach(m=>{let f=i[m];f.inputNames.forEach((g,y)=>{let[b,,x]=oa(g),v=i[b];if(v.outputs!=null){let I=v.outputs.indexOf(x);if(I!==-1){let N=`${b}:${I}`;f.inputNames[y]=N}}f.inputs.push(v),v.children.push(f)})}),Object.keys(u).length===0?d.forEach(m=>{let f=i[m];f.children.length===0&&l.push(f)}):Object.keys(u).forEach(m=>{let[f]=oa(m),g=i[f];g!=null&&(g.signatureKey=u[m],l.push(g))}),Object.keys(p).length>0?Object.keys(p).forEach(m=>{let[f]=oa(m),g=i[f];g&&(g.signatureKey=p[m],o.push(g))}):o=r;let h={};e.library!=null&&e.library.function!=null&&(h=e.library.function.reduce((m,f)=>(m[f.signature.name]=this.mapFunction(f),m),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=LS(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((r,a)=>{let s=a.type,i;switch(a.type){case"string":i=Af(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Af(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=zf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=zf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=Rf(e.attr,a.tfName,a.defaultValue||0),i===void 0&&a.tfDeprecatedName&&(i=Rf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=Lf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Lf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=Ff(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Ff(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=Bf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Bf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=Of(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Of(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=Pf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Pf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=Df(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Df(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=Mf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Mf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=Mw(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Mw(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:i,type:s},r},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],a={};t!=null&&(a=t.reduce((p,u)=>(p[u.name]=this.mapNode(u),u.op==="Const"&&r.push(p[u.name]),p),{}));let s=[],i=[];e.signature.inputArg.forEach(p=>{let[u]=oa(p.name),d={name:u,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:yx(p.type),type:"dtype"}},children:[]};d.signatureKey=p.name,s.push(d),a[u]=d}),Object.keys(a).forEach(p=>{let u=a[p];u.inputNames.forEach((d,h)=>{let[c,,m]=oa(d),f=a[c];if(f.outputs!=null){let g=f.outputs.indexOf(m);if(g!==-1){let y=`${c}:${g}`;u.inputNames[h]=y}}u.inputs.push(f),f.children.push(u)})});let o=e.ret;e.signature.outputArg.forEach(p=>{let[u,d]=oa(o[p.name]),h=a[u];h!=null&&(h.defaultOutput=d,i.push(h))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function $G(e){let t=H().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function rN(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):$G(e);return t?n:n.toLowerCase()}function Af(e,t,n,r=!1){let a=e[t];return a!=null?rN(a.s,r):n}function Ff(e,t,n){let r=e[t];return r?r.b:n}function Rf(e,t,n){let r=e[t]||{},a=r.i!=null?r.i:r.f!=null?r.f:n;return typeof a=="number"?a:parseInt(a,10)}function yx(e){switch(typeof e=="string"&&(e=Pn[e]),e){case Pn.DT_FLOAT:case Pn.DT_HALF:return"float32";case Pn.DT_INT32:case Pn.DT_INT64:case Pn.DT_INT8:case Pn.DT_UINT8:return"int32";case Pn.DT_BOOL:return"bool";case Pn.DT_DOUBLE:return"float32";case Pn.DT_STRING:return"string";case Pn.DT_COMPLEX64:case Pn.DT_COMPLEX128:return"complex64";default:return null}}function Mw(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function Df(e,t,n){let r=e[t];return r&&r.type?yx(r.type):n}function Mf(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(a=>yx(a)):n}function aN(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Of(e,t,n){let r=e[t];return r&&r.shape?aN(r.shape):n}function Lf(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):n}function zf(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(s=>rN(s,r)):n}function Pf(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(a=>aN(a)):n}function Bf(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var AG=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return ln(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return ln(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Rf(this.node.rawAttrs,e,t);if(n.s!=null)return Af(this.node.rawAttrs,e,t);if(n.b!=null)return Ff(this.node.rawAttrs,e,t);if(n.shape!=null)return Of(this.node.rawAttrs,e,t);if(n.type!=null)return Df(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Lf(this.node.rawAttrs,e,t);if(n.list.s!=null)return zf(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Pf(this.node.rawAttrs,e,t);if(n.list.b!=null)return Bf(this.node.rawAttrs,e,t);if(n.list.type!=null)return Mf(this.node.rawAttrs,e,t)}return t}},an={};De(an,{OP_SCOPE_SUFFIX:()=>xg,abs:()=>Dt,acos:()=>Sg,acosh:()=>Ng,add:()=>J,addN:()=>b1,all:()=>wc,any:()=>cp,argMax:()=>Hs,argMin:()=>Tg,asin:()=>_g,asinh:()=>Cg,atan:()=>Eg,atan2:()=>$g,atanh:()=>Ag,avgPool:()=>ya,avgPool3d:()=>Rg,basicLSTMCell:()=>k1,batchNorm:()=>So,batchNorm2d:()=>Dg,batchNorm3d:()=>Mg,batchNorm4d:()=>Og,batchToSpaceND:()=>rd,bincount:()=>Lg,bitwiseAnd:()=>I1,booleanMaskAsync:()=>hk,broadcastArgs:()=>S1,broadcastTo:()=>Rs,buffer:()=>Ve,cast:()=>ie,ceil:()=>zg,clipByValue:()=>cn,clone:()=>jr,complex:()=>ca,concat:()=>dt,concat1d:()=>Pg,concat2d:()=>Bg,concat3d:()=>Wg,concat4d:()=>Vg,conv1d:()=>kc,conv2d:()=>kn,conv2dTranspose:()=>Ic,conv3d:()=>Gg,conv3dTranspose:()=>Hg,cos:()=>ad,cosh:()=>Sc,cosineWindow:()=>qc,cumprod:()=>gp,cumsum:()=>Nc,denseBincount:()=>$h,depthToSpace:()=>jg,depthwiseConv2d:()=>No,diag:()=>T1,dilation2d:()=>qg,div:()=>ye,divNoNan:()=>Kg,dot:()=>Xg,dropout:()=>Sy,einsum:()=>_s,elu:()=>xu,enclosingPowerOfTwo:()=>Ny,ensureShape:()=>C1,equal:()=>Hn,erf:()=>Tc,euclideanNorm:()=>Yg,exp:()=>mn,expandDims:()=>Qt,expm1:()=>Qg,eye:()=>_c,fft:()=>md,fill:()=>Gn,floor:()=>wu,floorDiv:()=>vc,fused:()=>ol,gather:()=>ku,gatherND:()=>gk,greater:()=>_n,greaterEqual:()=>ba,ifft:()=>il,imag:()=>sd,image:()=>nr,inTopKAsync:()=>yk,irfft:()=>Bc,isFinite:()=>ey,isInf:()=>ty,isNaN:()=>ny,leakyRelu:()=>id,less:()=>nl,lessEqual:()=>ls,linalg:()=>Cy,linspace:()=>R1,localResponseNormalization:()=>ry,log:()=>jn,log1p:()=>od,logSigmoid:()=>ay,logSoftmax:()=>Ec,logSumExp:()=>ld,logicalAnd:()=>br,logicalNot:()=>ud,logicalOr:()=>$c,logicalXor:()=>sy,losses:()=>Ek,lowerBound:()=>M1,matMul:()=>Be,max:()=>ir,maxPool:()=>Zt,maxPool3d:()=>iy,maxPoolWithArgmax:()=>O1,maximum:()=>ea,mean:()=>St,meshgrid:()=>L1,min:()=>tl,minimum:()=>qa,mirrorPad:()=>oy,mod:()=>ly,moments:()=>pd,movingAverage:()=>ck,mul:()=>z,multiRNNCell:()=>z1,multinomial:()=>P1,neg:()=>bt,norm:()=>vu,notEqual:()=>Ks,oneHot:()=>rl,ones:()=>$n,onesLike:()=>qn,op:()=>L,outerProduct:()=>B1,pad:()=>Dr,pad1d:()=>W1,pad2d:()=>V1,pad3d:()=>U1,pad4d:()=>G1,pool:()=>uy,pow:()=>Zr,prelu:()=>hd,print:()=>Ig,prod:()=>py,raggedGather:()=>H1,raggedRange:()=>j1,raggedTensorToTensor:()=>q1,rand:()=>K1,randomGamma:()=>Y1,randomNormal:()=>Fc,randomStandardNormal:()=>Q1,randomUniform:()=>us,randomUniformInt:()=>ek,range:()=>Xs,real:()=>al,reciprocal:()=>fy,relu:()=>it,relu6:()=>Rc,reshape:()=>B,reverse:()=>ur,reverse1d:()=>tk,reverse2d:()=>nk,reverse3d:()=>rk,reverse4d:()=>ak,rfft:()=>fd,round:()=>Dc,rsqrt:()=>Mc,scalar:()=>Se,scatterND:()=>mk,searchSorted:()=>Ac,selu:()=>Oc,separableConv2d:()=>Iu,setdiff1dAsync:()=>sk,sigmoid:()=>yr,sign:()=>gy,signal:()=>Ck,sin:()=>Lc,sinh:()=>zc,slice:()=>Ze,slice1d:()=>cd,slice2d:()=>Pc,slice3d:()=>Su,slice4d:()=>sl,softmax:()=>ps,softplus:()=>To,spaceToBatchND:()=>dd,sparse:()=>$k,sparseToDense:()=>fk,spectral:()=>_k,split:()=>An,sqrt:()=>nn,square:()=>pt,squaredDifference:()=>Wc,squeeze:()=>ds,stack:()=>Lt,step:()=>_o,stridedSlice:()=>yy,string:()=>Ak,sub:()=>fe,sum:()=>xe,tan:()=>by,tanh:()=>ja,tensor:()=>wn,tensor1d:()=>at,tensor2d:()=>qr,tensor3d:()=>Vc,tensor4d:()=>Ka,tensor5d:()=>ik,tensor6d:()=>ok,tensorScatterUpdate:()=>uk,tile:()=>Un,topk:()=>vy,transpose:()=>We,truncatedNormal:()=>Hc,unique:()=>wy,unsortedSegmentSum:()=>jc,unstack:()=>Et,upperBound:()=>pk,variable:()=>ky,where:()=>tn,whereAsync:()=>Iy,zeros:()=>Nt,zerosLike:()=>Je});var FG=(e,t,n,r=an)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[r.addN(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[r.mul(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[r.div(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[r.divNoNan(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[r.floorDiv(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[r.sub(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[r.minimum(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[r.maximum(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[r.pow(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},RG=(e,t,n,r=an)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(k("x",e,t,n))];case"Acos":return[r.acos(k("x",e,t,n))];case"Acosh":return[r.acosh(k("x",e,t,n))];case"Asin":return[r.asin(k("x",e,t,n))];case"Asinh":return[r.asinh(k("x",e,t,n))];case"Atan":return[r.atan(k("x",e,t,n))];case"Atan2":return[r.atan2(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[r.atanh(k("x",e,t,n))];case"Ceil":return[r.ceil(k("x",e,t,n))];case"Complex":return[r.complex(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[r.cos(k("x",e,t,n))];case"Cosh":return[r.cosh(k("x",e,t,n))];case"Elu":return[r.elu(k("x",e,t,n))];case"Erf":return[r.erf(k("x",e,t,n))];case"Exp":return[r.exp(k("x",e,t,n))];case"Expm1":return[r.expm1(k("x",e,t,n))];case"Floor":return[r.floor(k("x",e,t,n))];case"Log":return[r.log(k("x",e,t,n))];case"Log1p":return[r.log1p(k("x",e,t,n))];case"Imag":return[r.imag(k("x",e,t,n))];case"Neg":return[r.neg(k("x",e,t,n))];case"Reciprocal":return[r.reciprocal(k("x",e,t,n))];case"Real":return[r.real(k("x",e,t,n))];case"Relu":return[r.relu(k("x",e,t,n))];case"Round":return[r.round(k("x",e,t,n))];case"Selu":return[r.selu(k("x",e,t,n))];case"Sigmoid":return[r.sigmoid(k("x",e,t,n))];case"Sin":return[r.sin(k("x",e,t,n))];case"Sign":return[r.sign(k("x",e,t,n))];case"Sinh":return[r.sinh(k("x",e,t,n))];case"Softplus":return[r.softplus(k("x",e,t,n))];case"Sqrt":return[r.sqrt(k("x",e,t,n))];case"Square":return[r.square(k("x",e,t,n))];case"Tanh":return[r.tanh(k("x",e,t,n))];case"Tan":return[r.tan(k("x",e,t,n))];case"ClipByValue":return[r.clipByValue(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(k("x",e,t,n))];case"Rsqrt":return[r.rsqrt(ln(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[r.prelu(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[r.isNaN(ln(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(ln(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(ln(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function gr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];w.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function Ow(e){return!(typeof e=="number"||e.some(t=>t<0))}function Hu(e,t,n){let r=Wf(e,n),a=!Ow(r);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(s=>{r=Wf(s.shape,r)}),!Ow(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Wf(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var DG=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Se(0),Vt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),gr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Vt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return wn([],[0].concat(this.elementShape));let n=this.readMany(e);return gr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Lt(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return wn([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return gr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),dt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Et(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=n===0?0:t.size/n,s=[];W(()=>{t=B(t,[1,n,a]);for(let o=0;o<e.length;++o){let l=[0,o===0?0:r[o-1],0],p=[1,e[o],a];s[o]=B(Ze(t,l,p),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},wm=class Vf{get id(){return this.idTensor.id}constructor(t,n,r,a=-1){this.tensors=t,this.elementShape=n,this.elementDtype=r,t!=null&&t.forEach(s=>{if(r!==s.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${s.dtype}`);gr(n,s.shape,"TensorList shape mismatch: "),Vt(s)}),this.idTensor=Se(0),this.maxNumElements=a,Vt(this.idTensor)}copy(){return new Vf([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(n=>{(t==null||!t.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,n,r=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);gr(t,this.elementShape,"TensorList shape mismatch: ");let a=Hu(this.elementShape,this.tensors,t);return W(()=>{let s=this.tensors.map(i=>B(i,a));return Lt(s,0)})}popBack(t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let r=Hu(this.elementShape,this.tensors,t),a=this.tensors.pop();return a.kept=!1,gr(a.shape,t,"TensorList shape mismatch: "),B(a,r)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(gr(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Vt(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let n=new Vf([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let r=0;r<Math.min(this.tensors.length,t);++r)n.tensors[r]=this.tensors[r];return n}getItem(t,n,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);gr(this.tensors[t].shape,n,"TensorList shape mismatch: ");let a=Hu(this.elementShape,this.tensors,n);return B(this.tensors[t],a)}setItem(t,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);gr(this.elementShape,n.shape,"TensorList shape mismatch: "),Vt(n),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=n}gather(t,n,r){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);gr(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size());let a=Hu(this.elementShape,this.tensors,r);return t.length===0?wn([],[0].concat(a)):W(()=>{let s=t.map(i=>B(this.tensors[i],a));return Lt(s,0)})}concat(t,n){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);gr(this.elementShape,n,"TensorList shape mismatch: ");let r=Hu(this.elementShape,this.tensors,n);return this.size()===0?wn([],[0].concat(r)):W(()=>{let a=this.tensors.map(s=>B(s,r));return dt(a,0)})}};function MG(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let a=e.shape.slice(1);gr(a,t,"TensorList shape mismatch: ");let s=Et(e);return new wm(s,t,r)}function OG(e,t,n,r){return new wm([],e,t,r)}function LG(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(r!=null&&r!==-1&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new wm([],n,e.dtype,r),i=Et(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function zG(e,t,n){let r=0,a=t.map(u=>(r+=u,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=Wf(s,n),o=r===0?0:e.size/r,l=W(()=>{let u=[];e=B(e,[1,r,o]);for(let d=0;d<t.length;++d){let h=[0,d===0?0:a[d-1],0],c=[1,t[d],o];u[d]=B(Ze(e,h,c),i)}return e.dispose(),u}),p=new wm([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)p.setItem(u,l[u]);return p}var PG=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=k("thenBranch",e,t,n),a=k("elseBranch",e,t,n),s=k("cond",e,t,n),i=k("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=k("body",e,t,n),a=k("cond",e,t,n),s=k("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(u=>u.id),l=await i[0].data();i.forEach(u=>{!u.kept&&o.indexOf(u.id)===-1&&u.dispose()});let p=s;for(;l[0];){let u=p;p=await n.functionMap[r].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap);let d=p.map(c=>c.id);u.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&d.indexOf(c.id)===-1&&c.dispose()});let h=await n.functionMap[a].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap);l=await h[0].data(),h.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&d.indexOf(c.id)===-1&&c.dispose()})}return p}case"LoopCond":{let r=k("pred",e,t,n);return[la(r)]}case"Switch":{let r=k("pred",e,t,n),a=k("data",e,t,n);return a.kept||(a=la(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(a=>ln(a,t,n)!==void 0);if(r){let a=ln(r,t,n);return[la(a)]}return}case"Enter":{let r=k("frameName",e,t,n),a=k("tensor",e,t,n);return n.enterFrame(r),[la(a)]}case"Exit":{let r=k("tensor",e,t,n);return n.exitFrame(),[la(r)]}case"NextIteration":{let r=k("tensor",e,t,n);return n.nextIteration(),[la(r)]}case"TensorArrayV3":{let r=k("size",e,t,n),a=k("dtype",e,t,n),s=k("elementShape",e,t,n),i=k("dynamicSize",e,t,n),o=k("clearAfterRead",e,t,n),l=k("identicalElementShapes",e,t,n),p=k("name",e,t,n),u=new DG(p,a,r,s,l,i,o);return n.addTensorArray(u),[u.idTensor,Se(1)]}case"TensorArrayWriteV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=k("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=k("tensorArrayId",e,t,n),a=k("tensor",e,t,n),s=k("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[Se(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=k("indices",e,t,n),a=k("tensor",e,t,n),s=k("elementShape",e,t,n),i=k("numElements",e,t,n),o=LG(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,n),o=e.op==="TensorListReserve"?-1:i,l=OG(r,a,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let r=k("tensorListId",e,t,n),a=k("indices",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=k("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=MG(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id),s=k("dtype",e,t,n),i=k("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=k("tensorListId",e,t,n),a=k("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("lengths",e,t,n),i=zG(r,s,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id);return[Se(a.size(),"int32")]}case"TensorListResize":{let r=k("tensorListId",e,t,n),a=k("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Lw(e,t,n){let[r,a]=k("fusedOps",e,t,n),s=r==="biasadd",i=!s,o=a==="prelu",l=r==="fusedbatchnorm",p=k("numArgs",e,t,n);if(s){if(o&&p!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&p!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=k("strides",e,t,n),d=gh(e,t,n),h=k("dataFormat",e,t,n).toUpperCase(),c=k("dilations",e,t,n),[m,f]=k("args",e,t,n);i&&(f=m,m=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:u,pad:d,dataFormat:h,dilations:c,biasArg:m,preluArg:f,activationFunc:a,leakyreluAlpha:g}}var BG=(e,t,n,r=an)=>{switch(e.op){case"Conv1D":{let a=k("stride",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[r.conv1d(k("x",e,t,n),k("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=k("strides",e,t,n),s=gh(e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv2d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:p,activationFunc:u,leakyreluAlpha:d}=Lw(e,t,n);return[r.fused.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:u,preluActivationWeights:p,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:p,activationFunc:u,leakyreluAlpha:d}=Lw(e,t,n);return[r.fused.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:u,preluActivationWeights:p,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=k("outputShape",e,t,n),s=k("strides",e,t,n),i=gh(e,t,n);return[r.conv2dTranspose(k("x",e,t,n),k("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=k("strides",e,t,n),s=gh(e,t,n),i=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(k("input",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv3d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:l,indexes:p}=r.maxPoolWithArgmax(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,p]}case"AvgPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dilations",e,t,n),o=a[1],l=a[2],p=i[1],u=i[2];return[r.dilation2d(k("x",e,t,n),k("filter",e,t,n),[o,l],s,[p,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},WG=(e,t,n,r=an)=>{switch(e.op){case"Fill":{let a=k("shape",e,t,n),s=k("dtype",e,t,n),i=k("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=k("logits",e,t,n),s=k("numSamples",e,t,n),i=k("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=k("indices",e,t,n),s=k("depth",e,t,n),i=k("onValue",e,t,n),o=k("offValue",e,t,n),l=k("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[r.onesLike(k("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(k("shape",e,t,n),k("dtype",e,t,n),k("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("seed",e,t,n))];case"Range":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("step",e,t,n);return[r.range(a,s,i,k("dtype",e,t,n))]}case"TruncatedNormal":{let a=k("shape",e,t,n),s=k("mean",e,t,n),i=k("stdDev",e,t,n),o=k("seed",e,t,n);return[r.truncatedNormal(a,s,i,k("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Km(e,t,n){let r=k("boxes",e,t,n),a=k("scores",e,t,n),s=k("maxOutputSize",e,t,n),i=k("iouThreshold",e,t,n),o=k("scoreThreshold",e,t,n),l=k("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var VG=async(e,t,n,r,a=an)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:p,softNmsSigma:u}=Km(e,t,n),d=await a.image.nonMaxSuppressionWithScoreAsync(s,i,o,l,p,u);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:p}=Km(e,t,n),u=k("padToMaxOutputSize",e,t,n),d=await a.image.nonMaxSuppressionPaddedAsync(s,i,o,l,p,u);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:p}=Km(e,t,n);return[await a.image.nonMaxSuppressionAsync(s,i,o,l,p)]}case"Where":{let s=a.cast(k("condition",e,t,n),"bool"),i=[await a.whereAsync(s)];return s.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},UG=(e,t,n,r=an)=>{switch(e.op){case"LowerBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=k("x",e,t,n),s=k("k",e,t,n),i=k("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=k("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=k("x",e,t,n),s=k("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},GG=(e,t,n,r=an)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=k("default",e,t,n);return[ln(e.name,t,n)||a];case"Placeholder":return[ln(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=k("x",e,t,n);return[la(u)]}case"IdentityN":return k("x",e,t,n).map(u=>la(u));case"Snapshot":let s=k("x",e,t,n);return[la(s)];case"Shape":return[r.tensor1d(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(u=>r.tensor1d(u.shape));case"Size":return[r.scalar(k("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(k("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=k("x",e,t,n),o=k("data",e,t,n),l=k("message",e,t,n),p=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let u=0;u<o.length;u++)console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0,p));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},HG=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Se(0),this.tensorMap=new Map,Vt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Se(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),W(()=>{let r=Et(t),a=n.length,s=r.length;w.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let i=0;i<a;i++){let o=n[i],l=r[i];Vt(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return W(()=>{let r=[];for(let a=0;a<n.length;a++){let s=n[a],i=this.findWithDefault(s,t);r.push(i)}return Lt(r)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},jG=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(a!=null)return[a];{let s=k("keyDType",e,t,n),i=k("valueDType",e,t,n),o=new HG(s,i);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=k("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},qG=(e,t,n,r=an)=>{switch(e.op){case"ResizeBilinear":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=k("image",e,t,n),s=k("boxes",e,t,n),i=k("boxInd",e,t,n),o=k("cropSize",e,t,n),l=k("method",e,t,n),p=k("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,p)]}case"ImageProjectiveTransformV3":{let a=k("images",e,t,n),s=k("transforms",e,t,n),i=k("outputShape",e,t,n),o=k("fillValue",e,t,n),l=k("interpolation",e,t,n),p=k("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),p.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},KG=(e,t,n,r=an)=>{switch(e.op){case"Equal":return[r.equal(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[r.notEqual(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[r.greater(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(k("a",e,t,n),k("b",e,t,n))];case"Less":return[r.less(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[r.lessEqual(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[r.logicalNot(k("a",e,t,n))];case"LogicalOr":return[r.logicalOr(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[r.where(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},XG=(e,t,n,r=an)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[r.einsum(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[r.transpose(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[a,s]=k("fusedOps",e,t,n),i=a==="biasadd",o=s==="prelu",l=k("numArgs",e,t,n),p=k("leakyreluAlpha",e,t,n);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,d]=k("args",e,t,n);return[r.fused.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:d,leakyreluAlpha:p})];case"MatrixBandPart":return[r.linalg.bandPart(k("a",e,t,n),k("numLower",e,t,n),k("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ZG=(e,t,n,r=an)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(k("x",e,t,n),k("axis",e,t,n),k("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[r.softmax(k("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},JG=(e,t,n,r=an)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(k("paramsNestedSplits",e,t,n),k("paramsDenseValues",e,t,n),k("indices",e,t,n),k("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(k("starts",e,t,n),k("limits",e,t,n),k("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(k("shape",e,t,n),k("values",e,t,n),k("defaultValue",e,t,n),k("rowPartitionTensors",e,t,n),k("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},YG=(e,t,n,r=an)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.max(k("x",e,t,n),o,l)]}case"Mean":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.mean(k("x",e,t,n),o,l)]}case"Min":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.min(k("x",e,t,n),o,l)]}case"Sum":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.sum(k("x",e,t,n),o,l)]}case"All":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.all(k("x",e,t,n),o,l)]}case"Any":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.any(k("x",e,t,n),o,l)]}case"ArgMax":{let o=k("axis",e,t,n);return[r.argMax(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[r.argMin(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.prod(k("x",e,t,n),o,l)]}case"Cumprod":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),p=k("reverse",e,t,n);return[r.cumprod(k("x",e,t,n),o,l,p)]}case"Cumsum":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),p=k("reverse",e,t,n);return[r.cumsum(k("x",e,t,n),o,l,p)]}case"Bincount":let a=k("x",e,t,n),s=k("weights",e,t,n),i=k("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let o=k("x",e,t,n),l=k("weights",e,t,n),p=k("size",e,t,n),u=k("binaryOutput",e,t,n);return[r.denseBincount(o,l,p,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},QG=(e,t,n,r=an)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=k("n",e,t,n),s=k("axis",e,t,n),i=k("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=k("axis",e,t,n),s=k("batchDims",e,t,n),i=k("x",e,t,n),o=k("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=k("dims",e,t,n),s=[];for(let o=0;o<a.length;o++)a[o]&&s.push(o);let i=k("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=k("axis",e,t,n),s=k("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=k("begin",e,t,n),s=k("size",e,t,n);return[r.slice(k("x",e,t,n),a,s)]}case"StridedSlice":{let a=k("begin",e,t,n),s=k("end",e,t,n),i=k("strides",e,t,n),o=k("beginMask",e,t,n),l=k("endMask",e,t,n),p=k("ellipsisMask",e,t,n),u=k("newAxisMask",e,t,n),d=k("shrinkAxisMask",e,t,n),h=k("x",e,t,n);return[r.stridedSlice(h,a,s,i,o,l,p,u,d)]}case"Pack":return W(()=>{let a=k("axis",e,t,n),s=k("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(p=>{let u=w.arraysEqual(p.shape,i);if(!u&&!w.arraysEqual(r.squeeze(p).shape,o))throw new Error("the input tensors shape does not match");return u?p:r.reshape(p,i)});return[r.stack(l,a)]});case"Unpack":{let a=k("axis",e,t,n),s=k("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=k("reps",e,t,n);return[r.tile(k("x",e,t,n),a)]}case"Split":case"SplitV":{let a=k("axis",e,t,n),s=k("numOrSizeSplits",e,t,n),i=k("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=k("sparseIndices",e,t,n),s=k("outputShape",e,t,n),i=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},eH=(e,t,n,r=an)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},tH=(e,t,n,r=an)=>{switch(e.op){case"FFT":return[r.fft(k("x",e,t,n))];case"IFFT":return[r.ifft(k("x",e,t,n))];case"RFFT":return[r.rfft(k("x",e,t,n))];case"IRFFT":return[r.irfft(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},nH=(e,t,n,r=an)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(k("input",e,t,n),k("pattern",e,t,n),k("rewrite",e,t,n),k("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},rH=(e,t,n,r=an)=>{switch(e.op){case"Cast":return[r.cast(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let a=k("axis",e,t,n);return[r.expandDims(k("x",e,t,n),a)]}case"Squeeze":{let a=k("axis",e,t,n);return[r.squeeze(k("x",e,t,n),a)]}case"Reshape":return[r.reshape(k("x",e,t,n),k("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let a=k("blockShape",e,t,n),s=k("paddings",e,t,n);return[r.spaceToBatchND(k("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=k("blockShape",e,t,n),s=k("crops",e,t,n);return[r.batchToSpaceND(k("x",e,t,n),a,s)]}case"DepthToSpace":{let a=k("blockSize",e,t,n),s=k("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(k("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function zw(e,t,n,r,a=W){let s=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>FG(i,o,l));case"basic_math":return a(()=>RG(i,o,l));case"control":return PG(i,o,l);case"convolution":return a(()=>BG(i,o,l));case"creation":return a(()=>WG(i,o,l));case"dynamic":return VG(i,o,l);case"evaluation":return a(()=>UG(i,o,l));case"image":return a(()=>qG(i,o,l));case"graph":return a(()=>GG(i,o,l));case"logical":return a(()=>KG(i,o,l));case"matrices":return a(()=>XG(i,o,l));case"normalization":return a(()=>ZG(i,o,l));case"ragged":return a(()=>JG(i,o,l));case"reduction":return a(()=>YG(i,o,l));case"slice_join":return a(()=>QG(i,o,l));case"sparse":return a(()=>eH(i,o,l));case"spectral":return a(()=>tH(i,o,l));case"string":return a(()=>nH(i,o,l));case"transformation":return a(()=>rH(i,o,l));case"hash_table":return jG(i,o,l,r);case"custom":let p=LS(i.op);if(p&&p.customExecutor)return p.customExecutor(new AG(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var Pw=class{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Bw(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,p=new Set(Object.keys(e).map(h=>Wn(h)[0]));r=r||[];let u=new Set(r.map(h=>Wn(h.name)[0])),d=[...t];for(;d.length>0;){let h=d.pop();if((Es(h)||dH(h)||hH(h))&&i==null&&(i=h,o=i.children.map(c=>c.name).filter(c=>a.has(c))),a.add(h.name),n[h.name]==null&&!p.has(h.name)&&!u.has(h.name)){if(h.inputs.length===0){s.push(h.name);continue}h.inputs.forEach(c=>{l.has(c.name)||(l.add(c.name),d.push(c))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function aH(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(g=>Wn(g)[0]).map(g=>e.nodes[g]),s=e.initNodes||[],i=g=>n.has(typeof g=="string"?g:g.name);function o(g){return[...new Map(g.map(y=>[y.name,y])).values()]}let l=o([...a,...e.weights,...s]).filter(i),p=o([...l,...Object.values(e.nodes)]).filter(i),u=new Map(p.map(g=>[g.name,g])),d={};for(let g of p){d[g.name]=d[g.name]||0;for(let y of g.children)i(y)||(d[y.name]=Number.POSITIVE_INFINITY),d[y.name]=(d[y.name]||0)+1}let h=Object.entries(d).filter(([,g])=>g===0).map(([g])=>g),c=[...h];for(;h.length>0;){let g=h.pop(),y=u.get(g);for(let b of y.children.filter(i))--d[b.name]===0&&(c.push(b.name),h.push(b.name))}let m=c.map(g=>u.get(g)),f=sH(m,l);return iH(f,l),f}function sH(e,t){let n=new Map(e.map(s=>[s.name,s])),r=t.map(s=>s.name),a=new Set(r);for(;r.length>0;){let s=r.pop(),i=n.get(s);for(let o of i.children)!n.has(o.name)||a.has(o.name)||(a.add(o.name),r.push(o.name))}return e.filter(s=>a.has(s.name))}var ah=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};function iH(e,t){let n=new Map(e.map((o,l)=>[o.name,l])),r=new Set(t.map(o=>o.name)),a=o=>r.has(typeof o=="string"?o:o.name),s=new Set(e.map(o=>o.name)),i=o=>s.has(typeof o=="string"?o:o.name);for(let o of e){for(let l of o.children.filter(i)){if(!n.has(l.name))throw new ah(`Child ${l.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(l.name))throw new ah(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!a(o))for(let l of o.inputs){if(!n.has(l.name))throw new ah(`Input ${l.name} of node ${o.name} is unreachable.`);if(n.get(l.name)>n.get(o.name))throw new ah(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function oH(e){let t=new Map(e.map((o,l)=>[o.name,l])),n=Number.MAX_SAFE_INTEGER,r=e.map((o,l)=>Es(o)?n:l),a=o=>{let l=r[t.get(o.name)];return l??-1},s=e.map((o,l)=>o.children.map(a).reduce((p,u)=>Math.max(p,u),r[l])),i=new Map;for(let o=0;o<e.length;++o){let l=s[o];if(l===n)continue;let p=e[o],u=e[l];i.has(u.name)||i.set(u.name,[]),i.get(u.name).push(p)}return i}var lH=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),uH=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),pH=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Es(e){return lH.has(e.op)}function dH(e){return uH.has(e.op)}function hH(e){return pH.has(e.op)}var Ww=class sN{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let n=Object.keys(t).map(r=>t[r].map(a=>a.id));this._weightIds=[].concat(...n),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let n=t.signatureKey||t.name;return t.defaultOutput?`${n}:${t.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((t,n)=>(t[n]=this._functions[n].signature,t),{})}constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new sN(t.functions[r],this)})}getCompilationKey(t,n){let r=t.map(s=>s.name).sort(),a=n.map(s=>s.name).sort();return r.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(t,n){let r=Bw(t,n,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:s,syncInputs:i}=r;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){let p=n.map(d=>d.name),u=Object.keys(t);throw new Error(`Cannot compute the outputs [${p}] from the provided inputs [${u}]. Missing the following inputs: [${a}]`)}let o=aH(this.graph,r),l=oH(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;let n=t.clone();return Vt(n),n}cloneTensorList(t){return t?t.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([n,r])=>[n,this.cloneTensorList(r)]))}execute(t,n){this.disposeIntermediateTensors(),t=this.mapInputs(t);let r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n);let a=r.map(h=>this.graph.nodes[Wn(h)[0]]),s=n.map(h=>Wn(h)[0]),i=new Set(s),o=s.map(h=>this.graph.nodes[h]);o.length===0&&(o=this._outputs);let l=this.getCompilationKey(a,o),p=this.compiledMap.get(l);p==null&&(p=this.compile(t,o),this.compiledMap.set(l,p));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}let u={},d={};return W(()=>{let h=new Pw(this.weightMap,u,d,this.functionExecutorMap,this.parseNodeNameCache),c=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{let[b,x]=Wn(y,h),v=[];v[x]=t[y],c[b]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(v))});let m=this.getFrozenTensorIds(c),{orderedNodes:f,nodeLiveUntilMap:g}=p;for(let y of f){if(c[y.name])continue;let b=zw(y,c,h,this._resourceManager);if(w.isPromise(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);c[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,c,h,m,i,g.get(y.name))}return this.parent==null&&h.dispose(m),n.map(y=>ln(y,c,h))})}getFrozenTensorIds(t){let n=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(a=>a.id)));return new Set(n)}checkTensorForDisposal(t,n,r,a,s,i,o){if(!(Es(n)||i.has(t))){for(let l of r[t])l!=null&&(o[l.id]=(o[l.id]||0)+n.children.length);for(let l of n.inputs){if(Es(l))continue;let p=Rw(l.name,r,a);if(p!=null)for(let u of p){if(!u||u.kept||s.has(u.id))continue;let d=o[u.id];d===1?(u.dispose(),delete o[u.id]):d!=null&&o[u.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,n,r,a,s,i){function o(l){return Es(l)||s.has(l.name)}if(!(Es(t)||i==null))for(let l of i){if(o(l))continue;let p=Rw(l.name,n,r);for(let u of p)!u||u.kept||a.has(u.id)||u.dispose()}}async executeAsync(t,n){return this._executeAsync(t,n)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let n of t)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,n,r=!1,a={},s={}){this.disposeIntermediateTensors(),r||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}let i=new Pw(this.weightMap,a,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let o=await this.executeWithControlFlow(t,i,n,r),l=n.map(h=>ln(h,o,i)),p=l.map(h=>h.id),u=Object.keys(t).map(h=>t[h].id),d=new Set([...p,...u,...this.weightIds]);return Object.values(o).forEach(h=>{h.forEach(c=>{c&&!c.isDisposed&&!d.has(c.id)&&c.dispose()})}),this.parent==null&&i.dispose(d),l}async executeFunctionAsync(t,n,r){let a=t.reduce((s,i,o)=>(s[this.inputs[o].name]=i,s),{});return this._executeAsync(a,this.outputNodes,!0,n,r)}async executeWithControlFlow(t,n,r,a){let s=Object.keys(t),i=s.map(v=>this.graph.nodes[Wn(v)[0]]),o=r.map(v=>Wn(v)[0]),l=new Set(o),p=o.map(v=>this.graph.nodes[v]);p.length===0&&(p=this._outputs);let{usedNodes:u,missingInputs:d,dynamicNode:h,syncInputs:c}=Bw(t,p,this.weightMap,this._initNodes),m=[...i,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:n.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(v=>{let[I,N]=Wn(v),C=[];C[N]=t[v],f[I]=C});let g={},y=this.getFrozenTensorIds(f),b={};for(;m.length>0;){let v=this.processStack(i,m,n,f,b,y,l,g,u);await Promise.all(v)}h==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=p.filter(v=>!Es(v)&&!ln(v.name,f,n)).map(v=>v.name);if(x.length>0){let v="";throw h!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${d}]. ${v}`)}return f}processStack(t,n,r,a,s,i,o,l,p){let u=[];for(;n.length>0;){let d=n.pop();r.currentContext=d.contexts;let h="";if(d.node.op==="Enter"&&k("isConstant",d.node,a,r)&&([h]=oa(d.node.name,r)),a[d.node.name]==null){let c=zw(d.node,a,r,this._resourceManager);h||([h]=oa(d.node.name,r));let m=r.currentContext;w.isPromise(c)?u.push(c.then(f=>(a[h]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(f)),r.currentContext=m,this.checkTensorForDisposal(h,d.node,a,r,i,o,l),this.processChildNodes(d.node,n,r,a,s,p),f))):(a[h]=c,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(c)),this.checkTensorForDisposal(h,d.node,a,r,i,o,l),this.processChildNodes(d.node,n,r,a,s,p))}else this.processChildNodes(d.node,n,r,a,s,p)}return u}processChildNodes(t,n,r,a,s,i){t.children.forEach(o=>{let[l]=oa(o.name,r);s[l]||!i.has(o.name)||(o.op==="Merge"?o.inputNames.some(p=>!!ln(p,a,r))&&(s[l]=!0,n.push({contexts:r.currentContext,node:o})):o.inputNames.every(p=>!!ln(p,a,r))&&(s[l]=!0,n.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(n=>n.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(n=>{let r=t[n],[a]=Wn(n),s=this.graph.nodes[a];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,o=i.length===r.shape.length&&r.shape.every((l,p)=>i[p]===-1||i[p]===l);w.assert(o,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&w.assert(r.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){var n,r;let a={};for(let s in t){let i=(r=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||r===void 0?void 0:r[s];i!=null?a[i.name]=t[s]:a[s]=t[s]}return a}checkInputs(t){let n=Object.keys(t).filter(r=>{let[a]=Wn(r);return this.graph.nodes[a]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(t){return t.map(n=>{var r,a;let s=(a=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||a===void 0?void 0:a[n];return s!=null?s.name:n},{})}checkOutputs(t){t.forEach(n=>{let[r]=Wn(n);if(!this.graph.nodes[r])throw new Error(`The output '${n}' is not found in the graph`)})}},cH=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},mH="?tfjs-format=file",fH="model.json",bx=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=pn){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new cH}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return w.isPromise(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let t=await l1(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let a=this.artifacts.userDefinedMetadata;a.signature!=null&&(r=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Ww(Dw.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let a=Dw.Instance.transformGraph(e.modelInitializer);this.initializer=new Ww(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof Ge?[e]:e,n={};return t.forEach((r,a)=>n[this.structuredOutputKeys[a]]=r),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ge)&&!Array.isArray(e)){let a=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(a!=null)for(let s in a){let i=a[s];i.resourceId!=null&&(e[s]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((a,s)=>{var i,o,l;let p=(l=(o=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||o===void 0?void 0:o[s])===null||l===void 0?void 0:l.resourceId;return p!=null?a[s]=this.resourceIdToCapturedInput[p]:a[s]=e[r++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=n[r],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Re(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function gH(e,t={},n=pn){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=bH(e));let r=new bx(e,t,n);return await r.load(),r}function yH(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[r,a]=e;if(!r)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");let s=pn.getWeightSpecs(r.weightsManifest),i=pn.getModelArtifactsForJSONSync(r,s,a);t=pn.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=pn.fromMemorySync(e);else throw new Error("Unknown model format");let n=new bx(t);return n.load(),n}function bH(e){return e.endsWith("/")||(e=e+"/"),`${e}${fH}${mH}`}var xH="4.22.0",iN={};De(iN,{CSVDataset:()=>yN,Dataset:()=>Cu,FileDataSource:()=>SN,TextLineDataset:()=>gN,URLDataSource:()=>NN,array:()=>VH,csv:()=>t6,func:()=>n6,generator:()=>r6,microphone:()=>s6,version_data:()=>i6,webcam:()=>a6,zip:()=>UH});var vH=ns(ec()),wH=ns(ec());function kH(e,t){return Vh(e,t)}function Vh(e,t,n=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse)if(pl(e)){let s=Array.isArray(e)?[]:{};r.add(e);for(let i in e){let o=e[i],l=Vh(o,t,n,r);s[i]=l}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,a.value),a.value}function IH(e,t=lN){return oN(e,t)}function oN(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse)if(pl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let o=e.map(p=>p[i]),l=oN(o,t,n);s[i]=l}return n.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return a.value}function lN(e){return e===null?null:pl(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function uN(e,t){let n=new Map;Vh(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let s=await a;n.set(r,s)}}return Vh(e,t,n)}function pl(e){let t=!1;if(H().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=C0();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Ge)&&!(e instanceof Promise)&&!t)}function SH(e){return e==null||NH(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Ge||w.isTypedArray(e)}function NH(e){return e===null||typeof e!="object"&&typeof e!="function"}function TH(e){return kH(e,_H)}function _H(e){return e instanceof Ge?{value:e.clone(),recurse:!1}:pl(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var pN=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},dN=class hN extends pN{constructor(){super(hN.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,n=new Array(t),r=this.length();for(let a=0;a<r;a++)n[a]=this.get(this.wrap(this.begin+a));this.data=n,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}};dN.INITIAL_CAPACITY=32;function cN(e){return new $H(e)}function xx(e){return new AH(e)}function CH(e,t){return new mN(e,t)}function EH(e,t=Oa.FAIL){return new BH(e,t)}var rn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new zH(this,e)}filter(e){return new OH(this,e)}map(e){return new LH(this,e)}mapAsync(e){return new Vw(this,e)}serialMapAsync(e){return new Vw(this,e).serial()}flatmap(e){return new PH(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new MH(this,e,t)}columnMajorBatch(e,t=!0,n=lN){return this.rowMajorBatch(e,t).map(r=>IH(r,n))}concatenate(e,t){return new mN(cN([this,e]),t)}take(e){return e<0||e==null?this:new DH(this,e)}skip(e){return e<0||e==null?this:new RH(this,e)}prefetch(e){return new fN(this,e)}shuffle(e,t){return new WH(this,e,t)}serial(){return new FH(this)}},$H=class extends rn{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:TH(e),done:!1}}},AH=class extends rn{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},FH=class extends rn{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},RH=class extends rn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Re(e.value)}return this.upstream.next()}},DH=class extends rn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},MH=class extends rn{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},OH=class extends rn{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Re(e.value)}}},LH=class extends rn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=_r.getTensorsInContainer(e.value),n=this.transform(e.value),r=_r.getTensorsInContainer(n);for(let a of t)_r.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},zH=class extends rn{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Vw=class extends rn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=_r.getTensorsInContainer(e.value),n=await this.transform(e.value),r=_r.getTensorsInContainer(n);for(let a of t)_r.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},vx=class extends rn{constructor(){super(),this.outputQueue=new dN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},PH=class extends vx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=_r.getTensorsInContainer(e.value),n=this.transform(e.value),r=_r.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)_r.isTensorInList(a,r)||a.dispose();return!0}},mN=class extends rn{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Oa;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Oa||(Oa={}));var BH=class extends rn{constructor(e,t=Oa.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(s){return s instanceof rn?{value:s.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let a=await uN(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Oa.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Oa.SHORTEST:return{value:null,done:!0};case Oa.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},fN=class extends rn{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new pN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},WH=class extends fN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=wH.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Cu=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),Bn(async()=>(await n.iterator()).columnMajorBatch(e,t,GH),r)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Bn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Bn(async()=>(await t.iterator()).filter(r=>W(()=>e(r))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Bn(async()=>(await t.iterator()).map(n=>W(()=>e(n))),this.size)}mapAsync(e){let t=this;return Bn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Bn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Bn(async()=>{let r=xx(async()=>({value:await t.iterator(),done:!1}));return CH(r.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Bn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=vH.alea(t||w.now().toString());return Bn(async()=>{let s=a.int32();return n&&(s+=a.int32()),(await r.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Bn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Cu.MAX_BUFFER_SIZE=1e4;function Bn(e,t=null){return new class extends Cu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function VH(e){return Bn(async()=>cN(e),e.length)}function UH(e){if(!pl(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Bn(async()=>{let n=await uN(e,r=>{if(r instanceof Cu)return{value:r.iterator(),recurse:!1};if(pl(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return EH(n,Oa.SHORTEST)},t)}function GH(e){if(e===null)return null;let t=e[0];return SH(t)?{value:HH(e),recurse:!1}:{value:null,recurse:!0}}function HH(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ge?Lt(e):wn(e)}var gN=class extends Cu{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},sh='"',ju=Symbol("out"),Uw=Symbol("field"),ih=Symbol("quote"),Xm=Symbol("quoteafterquote"),Gw=Symbol("quoteinquote"),yN=class extends Cu{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,a)=>(r[a]=r[a]+1||1,r),{}),n=Object.keys(t).filter(r=>t[r]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new gN(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[a],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let p=Number(o);if(isNaN(p))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=p;else switch(i.dtype){case"float32":l=p;break;case"int32":l=Math.floor(p);break;case"bool":l=this.getBoolean(o);break;default:l=p}}i&&i.isLabel?r[s]=l:n[s]=l}}return Object.keys(r).length===0?n:{xs:n,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=ju;for(let i=0;i<a;i++)switch(s){case ju:switch(e.charAt(i)){case sh:r=i+1,s=ih;break;case this.delimiter:if(r=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),s=ju;break;default:s=Uw,r=i;break}break;case Uw:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=ju,r=i+1;break}break;case ih:switch(e.charAt(i)){case sh:s=Xm;break}break;case Xm:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=ju,r=i+1;break;case sh:s=ih;break;default:s=Gw;break}break;case Gw:switch(e.charAt(i)){case sh:s=ih;break}break}if(s===Xm?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},jH=class bN extends rn{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;let n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=t.includeSpectrogram!==!1,this.includeWaveform=t.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(!H().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new bN(t);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,n,r=await this.getAudioData();if(this.includeSpectrogram){let a=this.flattenQueue(r.freqDataQueue);t=this.getTensorFromAudioDataArray(a,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let a=this.flattenQueue(r.timeDataQueue);n=this.getTensorFromAudioDataArray(a,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let t=[],n=[],r=0;return new Promise(a=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&a({freqDataQueue:t,timeDataQueue:n}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(s),a({freqDataQueue:t,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){let n=t[0].length,r=new Float32Array(t.length*n);return t.forEach((a,s)=>r.set(a,s*n)),r}getTensorFromAudioDataArray(t,n){let r=new Float32Array(w.sizeFromShape(n));return r.set(t,r.length-t.length),wn(r,n)}},qH=class xN extends rn{constructor(t,n){if(super(),this.webcamVideoElement=t,this.webcamConfig=n,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=at([0],"int32"),this.webcamConfig.centerCrop){let r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,a=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-r)/2,i=(1-a)/2,o=s+r,l=a+i;this.cropBox=qr([i,s,l,o],[1,4])}else this.cropBox=qr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,n={}){if(!H().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}let r=new xN(t,n);return await r.start(),r}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=gd.fromPixels(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{t.dispose()}else return{value:t,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(t){return W(()=>{let n=Qt(ie(t,"float32"),0),r;r=nr.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let a=r.shape;return B(r,a.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},vN=class{},wN=class extends rn{split(e){return new KH(this,e)}},KH=class extends wN{constructor(e,t){super(),this.upstream=e,this.impl=new XH(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},XH=class extends vx{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},ZH=class extends rn{decodeUTF8(){return new JH(this)}},JH=class extends wN{constructor(e){super(),this.upstream=e,this.impl=new YH(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},YH=class extends vx{constructor(e){if(super(),this.upstream=e,H().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=C0();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return H().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},kN=class extends ZH{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(H().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=s=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},r.onabort=s=>t(new Error("Aborted")),r.onerror=s=>t(new Error(s.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}),done:!1}}};async function QH(e,t={},n){let r,a;typeof e=="string"?r=e:(r=e.url,a=e6(e));let s=await(n||w.fetch)(r,a);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new kN(i,t)}else throw new Error(s.statusText)}var e6=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function IN(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var SN=class extends vN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(IN(this.input)&&H().get("IS_NODE")){let e=dg();this.input=e.readFileSync(this.input.slice(7))}return new kN(this.input,this.options)}},NN=class extends vN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return IN(this.url)?new SN(this.url,this.fileOptions).iterator():QH(this.url,this.fileOptions)}};function t6(e,t={}){return new yN(new NN(e),t)}function n6(e){let t=xx(e);return Bn(async()=>t)}function r6(e){return Bn(async()=>{let t=await e();return xx(()=>t.next())})}async function a6(e,t){return qH.create(e,t)}async function s6(e){return jH.create(e)}var i6="4.22.0";function ke(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var o6=ta.whereImpl,wx=class TN extends Cp{nextDataId(){return TN.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new tc(this,fr())}write(t,n,r){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:r,refCount:1}),a}makeTensorInfo(t,n,r){let a;if(n==="string"&&r!=null&&r.length>0&&w.isString(r[0])){let s=r.map(i=>w.encodeString(i));a=this.write(s,t,n)}else a=this.write(r,t,n);return{dataId:a,shape:t,dtype:n}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){let n=this.data.get(t);n.refCount--}}move(t,n,r,a,s){this.data.set(t,{values:n,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){let{dtype:n,complexTensorInfos:r}=this.data.get(t);if(n==="complex64"){let a=this.readSync(r.real.dataId),s=this.readSync(r.imag.dataId);return T.mergeRealAndImagArrays(a,s)}return w.convertBackendValuesAndArrayBuffer(this.data.get(t).values,n)}bufferSync(t){let n=this.readSync(t.dataId);if(t.dtype==="string")try{let r=n.map(a=>w.decodeString(a));return Ve(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ve(t.shape,t.dtype,n)}makeOutput(t,n,r){return fr().makeTensorFromTensorInfo(this.makeTensorInfo(n,r,t),this)}disposeData(t,n=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!n&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(t);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){let n=w.now();return t(),{kernelMs:w.now()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){ke([t],"where");let n=this.readSync(t.dataId);return o6(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};wx.nextDataId=0;var kx={};De(kx,{addImpl:()=>EN,bincountImpl:()=>Sx,bincountReduceImpl:()=>$N,bitwiseAndImpl:()=>AN,castImpl:()=>CN,ceilImpl:()=>FN,concatImpl:()=>Nx,equalImpl:()=>RN,expImpl:()=>MN,expm1Impl:()=>LN,floorDivImpl:()=>PN,floorImpl:()=>zN,gatherNdImpl:()=>BN,gatherV2Impl:()=>WN,greaterEqualImpl:()=>UN,greaterImpl:()=>VN,lessEqualImpl:()=>HN,lessImpl:()=>GN,linSpaceImpl:()=>jN,logImpl:()=>qN,maxImpl:()=>KN,maximumImpl:()=>XN,minimumImpl:()=>ZN,multiplyImpl:()=>Tx,negImpl:()=>JN,notEqualImpl:()=>YN,prodImpl:()=>QN,raggedGatherImpl:()=>e2,raggedRangeImpl:()=>t2,raggedTensorToTensorImpl:()=>n2,rangeImpl:()=>Cx,rsqrtImpl:()=>r2,scatterImpl:()=>Fs,sigmoidImpl:()=>ij,simpleAbsImpl:()=>_N,sliceImpl:()=>Gh,sparseFillEmptyRowsImpl:()=>s2,sparseReshapeImpl:()=>i2,sparseSegmentReductionImpl:()=>Ex,sqrtImpl:()=>uj,squaredDifferenceImpl:()=>o2,staticRegexReplaceImpl:()=>l2,stridedSliceImpl:()=>u2,stringNGramsImpl:()=>$x,stringSplitImpl:()=>Ax,stringToHashBucketFastImpl:()=>Fx,subImpl:()=>p2,tileImpl:()=>d2,topKImpl:()=>c2,transposeImpl:()=>_x,uniqueImpl:()=>Dx});function _N(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var l6=e=>{let{x:t}=e.inputs,n=e.backend;ke(t,"abs");let r=new Float32Array(w.sizeFromShape(t.shape)),a=n.data.get(t.dataId).values;return r=_N(a),n.makeOutput(r,t.shape,t.dtype)},u6={kernelName:gl,backendName:"cpu",kernelFunc:l6};function At(e){return(t,n,r,a,s)=>{let i=T.assertAndGetBroadcastShape(t,n),o=i.length,l=w.computeStrides(i),p=w.sizeFromShape(i),u=w.getTypedArrayFromDType(s,p),d=t.length,h=n.length,c=w.computeStrides(t),m=w.computeStrides(n),f=T.getBroadcastDims(t,i),g=T.getBroadcastDims(n,i);if(f.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<u.length;++y){let b=w.indexToLoc(y,o,l),x=b.slice(-d);f.forEach(C=>x[C]=0);let v=w.locToIndex(x,d,c),I=b.slice(-h);g.forEach(C=>I[C]=0);let N=w.locToIndex(I,h,m);u[y]=e(r[v],a[N])}return[u,i]}}function Vn(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var p6={kernelName:ac,backendName:"cpu",kernelFunc:Vn};function Uh(e,t,n="float32"){if(n==="complex64"){let a=Uh(e,t,"float32"),s=Uh(e,t,"float32");return Vn({inputs:{real:a,imag:s},backend:e})}let r=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Yr(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var d6={kernelName:Di,backendName:"cpu",kernelFunc:Yr};function Js(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var h6={kernelName:gc,backendName:"cpu",kernelFunc:Js};function CN(e,t,n,r){if(r==="int32"){let a=Int32Array.from(e);return[t,"int32",a]}if(r==="bool"){let a=w.toTypedArray([0],n),[s,i]=At((o,l)=>o!==l?1:0)(t,[],e,a,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function Qa(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return Yr({inputs:{x:a},backend:n});let u=Uh(n,a.shape,a.dtype),d=Qa({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),h=Vn({inputs:{real:d,imag:u},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),h}if(a.dtype==="complex64"){let u=Js({inputs:{input:a},backend:n}),d=Qa({inputs:{x:u},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(u),d}if(!w.hasEncodingLoss(a.dtype,s)){let u=Yr({inputs:{x:a},backend:n});return{dataId:u.dataId,shape:u.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,p]=CN(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,p)}var c6={kernelName:fi,backendName:"cpu",kernelFunc:Qa};function qt(e,t,n,r){return n==null?({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;ke([i,o],e);let p=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,d=i.dtype==="string"?T.fromUint8ToStringArray(p):p,h=i.dtype==="string"?T.fromUint8ToStringArray(u):u,c=r||i.dtype,[m,f]=t(i.shape,o.shape,d,h,c);return l.makeTensorInfo(f,c,m)}:({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let p=Qa({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(p.dataId),d=u.complexTensorInfos.real,h=u.complexTensorInfos.imag,c=l.data.get(d.dataId).values,m=l.data.get(h.dataId).values,f=Qa({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(f.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,v=l.data.get(b.dataId).values,[I,N,C]=n(i.shape,o.shape,c,m,x,v),E=l.makeTensorInfo(C,"float32",I),A=l.makeTensorInfo(C,"float32",N),R=Vn({inputs:{real:E,imag:A},backend:l});return l.disposeIntermediateTensorInfo(p),l.disposeIntermediateTensorInfo(f),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(A),R}else{let p=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,d=r||i.dtype,[h,c]=t(i.shape,o.shape,p,u,d);return l.makeTensorInfo(c,d,h)}}}function Ix(e){return(t,n,r,a,s,i)=>{let o=T.assertAndGetBroadcastShape(t,n),l=w.sizeFromShape(o),p=o.length,u=w.computeStrides(o),d=w.getTypedArrayFromDType("float32",l),h=w.getTypedArrayFromDType("float32",l),c=T.getBroadcastDims(t,o),m=T.getBroadcastDims(n,o),f=T.mergeRealAndImagArrays(r,a),g=T.mergeRealAndImagArrays(s,i),y=t.length,b=w.computeStrides(t),x=n.length,v=w.computeStrides(n);if(c.length+m.length===0)for(let I=0;I<d.length;I++){let N=I%f.length,C=I%g.length,E=e(f[N*2],f[N*2+1],g[C*2],g[C*2+1]);d[I]=E.real,h[I]=E.imag}else for(let I=0;I<d.length;I++){let N=w.indexToLoc(I,p,u),C=N.slice(-y);c.forEach(S=>C[S]=0);let E=w.locToIndex(C,y,b),A=N.slice(-x);m.forEach(S=>A[S]=0);let R=w.locToIndex(A,x,v),F=e(f[E*2],f[E*2+1],g[R*2],g[R*2+1]);d[I]=F.real,h[I]=F.imag}return[d,h,o]}}var EN=At((e,t)=>e+t),m6=Ix((e,t,n,r)=>({real:e+n,imag:t+r})),dl=qt(rs,EN,m6),f6={kernelName:rs,backendName:"cpu",kernelFunc:dl};function Sx(e,t,n,r,a){let s=w.sizeFromShape(r),i=w.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function $N(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Ve([a,n],t.dtype);for(let o=0;o<a;o++)for(let l=0;l<s;l++){let p=e.get(o,l);if(p<0)throw new Error("Input x must be non-negative!");p>=n||(r?i.set(1,o,p):t.size>0?i.set(i.get(o,p)+t.get(o,l),o,p):i.set(i.get(o,p)+1,o,p))}return i}var AN=At((e,t)=>e&t),g6=qt(Sl,AN),y6={kernelName:Sl,backendName:"cpu",kernelFunc:g6};function na(e){return(t,n,r)=>{let a=w.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function lt(e,t,n){let r=na(t);return hs(e,r,n)}function hs(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;ke(i,e);let o=s,l=o.data.get(i.dataId).values,p;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");p=T.fromUint8ToStringArray(l)}else p=l;let u=n||i.dtype,d=t(p,u,a);return o.makeTensorInfo(i.shape,u,d)}}var FN=na(e=>Math.ceil(e)),b6=hs(gi,FN),x6={kernelName:gi,backendName:"cpu",kernelFunc:b6};function Nx(e,t,n,r){let a=w.getArrayFromDType(n,w.sizeFromShape(t));if(r&&n!=="string"){let s=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);a.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?T.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let p=0;p<i.shape[0];++p){let u=p*t[1]+s;for(let d=0;d<i.shape[1];++d)a[u+d]=o[l++]}s+=i.shape[1]})}return a}var RN=At((e,t)=>e===t?1:0),DN=qt(Fl,RN,null,"bool"),v6={kernelName:Fl,backendName:"cpu",kernelFunc:DN},MN=na(e=>Math.exp(e)),ON=hs(Ci,MN,"float32"),w6={kernelName:Ci,backendName:"cpu",kernelFunc:ON},LN=na(e=>Math.expm1(e)),k6=hs(Ei,LN),I6={kernelName:Ei,backendName:"cpu",kernelFunc:k6},zN=na(e=>Math.floor(e)),S6=hs($i,zN),N6={kernelName:$i,backendName:"cpu",kernelFunc:S6},PN=At((e,t)=>Math.floor(e/t)),T6=qt(Ai,PN,null,"int32"),_6={kernelName:Ai,backendName:"cpu",kernelFunc:T6};function BN(e,t,n,r,a,s,i,o,l){let p=Ve([r,s],n);for(let u=0;u<r;u++){let d=[],h=0;for(let c=0;c<a;c++){let m=e[u*a+c];h+=m*i[c],d.push(m)}if(h<0||h>=l/s)throw new Error(`Invalid indices: ${d} does not index into ${o}`);for(let c=0;c<s;c++)p.values[u*s+c]=t.get(...t.indexToLoc(h*s+c))}return p}function WN(e,t,n){let r=Ve(n,e.dtype);for(let a=0;a<r.size;++a){let s=r.indexToLoc(a).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let p=e.locToIndex(s);0<=p&&p<e.values.length&&(r.values[a]=e.values[p])}return r}var VN=At((e,t)=>e>t?1:0),C6=qt(Ll,VN,null,"bool"),E6={kernelName:Ll,backendName:"cpu",kernelFunc:C6},UN=At((e,t)=>e>=t?1:0),$6=qt(Ri,UN,null,"bool"),A6={kernelName:Ri,backendName:"cpu",kernelFunc:$6},GN=At((e,t)=>e<t?1:0),F6=qt(zl,GN,null,"bool"),R6={kernelName:zl,backendName:"cpu",kernelFunc:F6},HN=At((e,t)=>e<=t?1:0),D6=qt(Pl,HN,null,"bool"),M6={kernelName:Pl,backendName:"cpu",kernelFunc:D6};function jN(e,t,n){let r=(t-e)/(n-1),a=w.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var qN=na(e=>Math.log(e)),O6=hs(Pi,qN),L6={kernelName:Pi,backendName:"cpu",kernelFunc:O6};function KN(e,t,n,r){let a=w.getTypedArrayFromDType(r,w.sizeFromShape(n));for(let s=0;s<a.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let p=e[i+l];(Number.isNaN(p)||p>o)&&(o=p)}a[s]=o}return a}var XN=At((e,t)=>Math.max(e,t)),z6=qt(Ui,XN),P6={kernelName:Ui,backendName:"cpu",kernelFunc:z6},ZN=At((e,t)=>Math.min(e,t)),B6=qt(qi,ZN),W6={kernelName:qi,backendName:"cpu",kernelFunc:B6},Tx=At((e,t)=>e*t),V6=Ix((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),km=qt(Zi,Tx,V6),U6={kernelName:Zi,backendName:"cpu",kernelFunc:km};function JN(e,t,n){let r=w.createScalarValue(-1,n);return Tx([],t,r,e,n)}function G6(e){let{inputs:t,backend:n}=e,{x:r}=t;ke(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=JN(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}var H6={kernelName:ql,backendName:"cpu",kernelFunc:G6},YN=At((e,t)=>e!==t?1:0),j6=qt(Kl,YN,null,"bool"),q6={kernelName:Kl,backendName:"cpu",kernelFunc:j6};function _x(e,t,n,r,a){let s=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),l=w.computeStrides(a),p=w.getTypedArrayFromDType(n,w.sizeFromShape(a));for(let u=0;u<i;++u){let d=w.indexToLoc(u,s,o),h=new Array(d.length);for(let m=0;m<h.length;m++)h[m]=d[r[m]];let c=w.locToIndex(h,s,l);p[c]=e[u]}return p}function Mn(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;ke(a,"transpose");let i=a.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=a.shape[s[u]];let l=r.data.get(a.dataId).values,p=_x(l,a.shape,a.dtype,s,o);return{dataId:r.write(p,o,a.dtype),shape:o,dtype:a.dtype}}var K6={kernelName:pa,backendName:"cpu",kernelFunc:Mn};function QN(e,t,n,r){let[a,s]=T.computeOutAndReduceShapes(e,r),i=or(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(a),i),l=w.sizeFromShape(s);for(let p=0;p<o.length;++p){let u=p*l,d=1;for(let h=0;h<l;++h)d*=n[u+h];o[p]=d}return{outVals:o,outShape:a,outDtype:i}}function X6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ke(a,"prod");let o=a.shape.length,l=w.parseAxisParam(s,a.shape),p=T.getAxesPermutation(l,o),u=l,d=a,h=[];p!=null&&(d=Mn({inputs:{x:a},backend:n,attrs:{perm:p}}),h.push(d),u=T.getInnerMostAxes(u.length,o));let c=n.data.get(d.dataId).values,{outVals:m,outShape:f,outDtype:g}=QN(d.shape,d.dtype,c,u),y=f;return i&&(y=T.expandShapeToKeepDim(f,l)),h.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,m)}var Z6={kernelName:to,backendName:"cpu",kernelFunc:X6};function J6(e,t,n){e.forEach((r,a)=>{if(r<0||r>=n){let s=w.indexToLoc(a,t.length,w.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${r} is not in [0, ${n})`)}})}function Y6(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let s=1;s<r.length;++s)if(r[s-1]>r[s])throw new Error("Ragged splits must be sorted in ascending order")}}function Q6(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);Y6(n,r);let l=1;for(let p=0;p<t.length-1;++p){l*=t[p];let u=t[p+1];for(let d=1;d<l+1;++d)o[p].push(d*u)}for(let p=0;p<e.length;++p){let u=e[p],d=e[p]+1;for(let h=0;h<n.length;++h){let c=n[h],m=h+t.length-1;if(m>=0){let f=o[m],g=f[f.length-1]-c[u];for(let y=u;y<d;++y)o[m].push(c[y+1]+g)}u=c[u],d=c[d]}d!==u&&(a.push([u,d]),s+=d-u)}return{outSplits:o,valueSlices:a,numValues:s}}function ej(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=w.getArrayFromDType("int32",r);t.push(a),e[n].forEach((s,i)=>a[i]=s)}return t}function Hw(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function tj(e,t,n,r,a,s){let i=Hw(t,2)[1],o=Hw(s,2)[1],l=0;for(let p of n)for(let u=p[0];u<p[1];++u){for(let d=0;d<r;++d)a[l*o+d]=e[u*i+d];++l}}function nj(e,t,n,r,a){let s=t.slice();s[0]=a;let i=w.getArrayFromDType(n,w.sizeFromShape(s)),o=e.length,l=o===0?0:o/t[0];return tj(e,t,r,l,i,s),[i,s]}function e2(e,t,n,r,a,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(J6(s,i,l),r.length===0)throw new Error("params.rank must be nonzero");let p=r[0],{outSplits:u,valueSlices:d,numValues:h}=Q6(s,i,e,p),c=ej(u),m=nj(n,r,a,d,h);return[c,m[0],m[1]]}var jw=2147483647;function t2(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=t.length===0,l=a.length===0,p=i.length===0,u=[];o||u.push(t[0]),l||u.push(a[0]),p||u.push(i[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");let d=u.length===0?1:u[0],h=w.getArrayFromDType("int32",d+1);h[0]=0;for(let g=0;g<d;++g){let y=o?e[0]:e[g],b=l?r[0]:r[g],x=p?s[0]:s[g];if(x===0)throw new Error("Requires delta != 0");let v;if(x>0&&b<y||x<0&&b>y)v=0;else if(v=Math.ceil(Math.abs((b-y)/x)),v>jw)throw new Error(`Requires ((limit - start) / delta) <= ${jw}`);h[g+1]=h[g]+v}let c=h[d],m=w.getArrayFromDType(n,c),f=0;for(let g=0;g<d;++g){let y=h[g+1]-h[g],b=o?e[0]:e[g],x=p?s[0]:s[g];for(let v=0;v<y;++v)m[f++]=b,b+=x}return[h,m]}var mr=T.RowPartitionType,rj=class Uf{constructor(t,n,r,a,s,i,o,l,p,u){this.shape=t,this.shapeShape=n,this.values=r,this.valuesShape=a,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=p,this.rowPartitionTypes=T.getRowPartitionTypesHelper(u),this.raggedRank=T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===mr.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===mr.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case mr.VALUE_ROWIDS:return Uf.getMaxWidthValueRowID(n);case mr.ROW_SPLITS:return Uf.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${mr[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let n=t.length;if(n===0||n===1)return 0;let r=0;for(let a=0;a<n-1;++a){let s=t[a+1]-t[a];s>r&&(r=s)}return r}static getMaxWidthValueRowID(t){let n=t.length;if(n===0)return 0;let r=0,a=t[0],s=0;for(let i=1;i<n;++i){let o=t[i];o!==a&&(a=o,s=Math.max(i-r,s),r=i)}return Math.max(n-r,s)}tensorShapeFromTensor(t,n,r=!0){if(n.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Kw(t,r)}calculateOutputSize(t){let n=this.valuesShape,r=this.defaultValueShape;T.validateDefaultValueShape(r,n);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=T.combineRaggedTensorToTensorShapes(this.raggedRank,a,n);s[0]<0&&(s[0]=t);for(let i=1;i<=this.raggedRank;++i)s[i]<0&&(s[i]=this.getMaxWidth(i));return s}calculateFirstParentOutputIndex(t,n,r){let a=Math.min(t,r),s=[],i=0;for(let o=0;o<a;++o,i+=n)s.push(i);for(let o=a;o<t;++o)s.push(-1);return w.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,n,r,a){let s=t.length,i=[];for(let o=0;o<s-1;++o){let l=t[o+1]-t[o],p=Math.min(a,l),u=n[o];u===-1&&(p=0);for(let d=0;d<p;++d)i.push(u),u+=r;for(let d=0;d<l-p;++d)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,n,r,a){let s=t.length,i=[];if(s===0)return[];let o=0,l=t[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let p=n[l];i.push(p);for(let u=1;u<s;++u){let d=t[u];if(d===l)p>=0&&(++o,o<a?p+=r:p=-1);else{if(o=0,l=d,d>=n.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${n.length}`);p=n[d]}i.push(p)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,n,r,a){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case mr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,n,r,a);case mr.ROW_SPLITS:if(s.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(s,n,r,a);default:throw new Error(`Unsupported partition type: ${mr[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let n=this.rowPartitionTypes[0];switch(n){case mr.FIRST_DIM_SIZE:return t[0];case mr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case mr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${mr[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let i=r.length-2;i>=0;--i)r[i]=r[i+1]*n[i+1];let a=Kw(n,!1),s=w.getArrayFromDType(this.valuesDType,w.sizeFromShape(a));if(r[0]*n[0]>0){let i=this.calculateFirstParentOutputIndex(t,r[0],n[0]);for(let o=1;o<=this.raggedRank;++o)i=this.calculateOutputIndex(o-1,i,r[o],n[o]);this.setOutput(this.raggedRank,i,s,a)}return[a,s]}setOutput(t,n,r,a){if(r.length===0)return;let s=this.values,i=r,o=a.slice();o=o.slice(t+1);let l=w.sizeFromShape(o),p=n.length,u=this.defaultValue;if(u.length!==l&&u.length!==1){let m=this.defaultValueShape;W(()=>{let f=B(u,m);u=Rs(f,o).dataSync()})}let d=0,h=0,c=0;for(let m=0;m<=p;++m){let f=m<p?n[m]:-1;if(f===c){++c;continue}if(h<c){let g=s.subarray(d*l),y=i.subarray(h*l),b=(c-h)*l;qw(y,g,b)}if(m>=p){let g=r.length;f=Math.floor(g/l)}if(f>c)if(this.defaultValue.length===1)i.subarray(c*l,f*l).fill(this.defaultValue[0]),c=f;else for(;f>c;){let g=i.slice(c*l);qw(g,u,l),++c}f<0?(d=m+1,h=c):(d=m,h=c,c=h+1)}}};function qw(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Kw(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function n2(e,t,n,r,a,s,i,o,l,p){return new rj(e,t,n,r,a,s,i,o,l,p).compute()}function Cx(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return w.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(o,r);t<e&&n===1&&(n=-1),l[0]=e;for(let p=1;p<l.length;p++)l[p]=l[p-1]+n;return l}var r2=na(e=>1/Math.sqrt(e)),aj=hs(uo,r2),sj={kernelName:uo,backendName:"cpu",kernelFunc:aj};function Fs(e,t,n,r,a,s,i,o,l,p){let u=[r/a,a],d=e.values,h=t.values;if(r===0)return Ve(n,t.dtype);let c=l instanceof Ot?l:Ve(u,t.dtype);typeof l=="string"||typeof l=="number"?c.values.fill(l):typeof l=="boolean"&&c.values.fill(+l);for(let m=0;m<s;m++){let f=[],g=0;for(let y=0;y<i;y++){let b=d[m*i+y];f.push(b),g+=b*o[y]}if(g<0||g>=r/a)throw new Error(`Invalid indices: ${f} does not index into ${n}`);for(let y=0;y<a;y++)p?c.values[g*a+y]+=h[m*a+y]:c.values[g*a+y]=t.rank===0?h[0]:h[m*a+y]}return c}var ij=na(e=>1/(1+Math.exp(-e))),a2=lt(fo,e=>1/(1+Math.exp(-e))),oj={kernelName:fo,backendName:"cpu",kernelFunc:a2};function Gh(e,t,n,r,a){let s=Gt.isSliceContinous(r,t,n),i=w.sizeFromShape(n),o=w.computeStrides(r);if(s){let d=Gt.computeFlatOffset(t,o);return a==="string"?e.slice(d,d+i):e.subarray(d,d+i)}let l=a==="string"?T.fromUint8ToStringArray(e):e,p=Ve(r,a,l),u=Ve(n,a);for(let d=0;d<u.size;++d){let h=u.indexToLoc(d),c=h.map((m,f)=>m+t[f]);u.set(p.get(...c),...h)}return a==="string"?T.fromStringArrayToUint8(u.values):u.values}function Ys(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;ke(a,"slice");let[o,l]=Gt.parseSliceParams(a,s,i);Gt.assertParamsValid(a,o,l);let p=n.data.get(a.dataId).values,u=Gh(p,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var lj={kernelName:ou,backendName:"cpu",kernelFunc:Ys};function s2(e,t,n,r,a,s,i){let o=t[0],l=s[0],p=new Array(l),u=new Array(o),d=t[1];if(l===0){if(o!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(n,0),y=w.getArrayFromDType(a,0);return[g,[0,d],y,p,u]}let h=!0,c=0,m=new Array(l).fill(0);for(let g=0;g<o;++g){let y=e[g*d];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++m[y],h=h&&y>=c,c=y}let f=!0;for(let g=0;g<l;++g){let y=m[g]===0;p[g]=y,f=f&&!y,m[g]=Math.max(m[g],1),g>0&&(m[g]+=m[g-1])}if(f&&h){let g=e,y=r;for(let b=0;b<o;++b)u[b]=b;return[g,[o,d],y,p,u]}else{let g=m[l-1],y=w.getArrayFromDType(n,g*d),b=w.getArrayFromDType(a,g),x=new Array(l).fill(0);for(let v=0;v<o;++v){let I=e[v*d],N=x[I],C=(I===0?0:m[I-1])+N;x[I]++;for(let E=0;E<d;++E)y[C*d+E]=e[v*d+E];b[C]=r[v],u[v]=C}for(let v=0;v<l;++v)if(x[v]===0){let I=v===0?0:m[v-1];y[I*d+0]=v;for(let N=1;N<d;++N)y[I*d+N]=0;b[I]=i}return[y,[g,d],b,p,u]}}function i2(e,t,n,r,a){let s=w.sizeFromShape(r),i=t[0],o=a.length,l=[],p=1,u=-1;for(let f=0;f<o;++f){let g=a[f];if(g===-1){if(u!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,f));u=f,l.push(1)}else{if(g<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(f,g));p*=g,l.push(g)}}if(u!==-1){if(p<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let f=Math.trunc(s/p);if(p*f!==s)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[u]=f}if(w.sizeFromShape(l)!==s)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let d=r.length,h=[];if(d>0){h[d-1]=1;for(let f=d-2;f>=0;--f)h[f]=h[f+1]*r[f+1]}let c=[];if(o>0){c[o-1]=1;for(let f=o-2;f>=0;--f)c[f]=c[f+1]*l[f+1]}let m=w.getArrayFromDType(n,i*o);for(let f=0;f<i;++f){let g=0;for(let y=0;y<d;++y)g+=e[f*d+y]*h[y];for(let y=0;y<o;++y)m[f*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[m,[i,o],l]}function Ex(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],p=l[1],u=o>0?a[o-1]+1:0;if(u<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=u;let h=d.reduce((b,x)=>b*x,1),c=w.getArrayFromDType(n,h);if(o===0)return u>0&&c.fill(i),[c,d];if(u<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,f=1,g=0,y=a[m];for(;;){let b=0;if(f<o){if(b=a[f],y===b){++f;continue}if(y>=b)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=u)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,u));y>g&&c.fill(i,g*p,y*p);for(let x=m;x<f;++x){let v=r[x];if(v<0||v>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],l[0]));for(let I=0;I<p;I++)c[y*p+I]+=e[v*p+I]}if(s)for(let x=0;x<p;x++)c[y*p+x]/=f-m;if(m=f,++f,g=y+1,y=b,f>o)break}return g<u&&c.fill(i,g*p,u*p),[c,d]}var uj=na(e=>Math.sqrt(e)),pj=lt(yo,e=>Math.sqrt(e)),dj={kernelName:yo,backendName:"cpu",kernelFunc:pj},o2=At((e,t)=>{let n=e-t;return n*n}),hj=qt(vo,o2),cj={kernelName:vo,backendName:"cpu",kernelFunc:hj},l2=na((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),mj=hs(Hp,l2),fj={kernelName:Hp,backendName:"cpu",kernelFunc:mj};function u2(e,t,n,r){let a=Ve(e,t.dtype);for(let s=0;s<a.size;s++){let i=a.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+r[l];a.set(t.get(...o),...i)}return a}var gj=class{constructor(e,t,n,r,a,s){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),p=Math.max(0,o-(a-(i+1))),u=s-(l+p),d=t+(l>0?0:i-o),h=0;h+=l*this.leftPad.length;for(let y=0;y<u;++y)h+=e[d+y].length;h+=p*this.rightPad.length;let c=l+p+u-1;h+=c*this.separator.length,n[r+i]=new Uint8Array(h);let m=n[r+i],f=0,g=y=>y.forEach(b=>m[f++]=b);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<u-1;++y)g(e[d+y]),g(this.separator);if(u>0){g(e[d+u-1]);for(let y=0;y<p;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<p-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<r;++l){let p=t[l]>=o;if(p=p&&t[l]<=n,!p)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${n}]`);o=t[l]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let a=r-1,s=w.getArrayFromDType("int32",r);if(n===0||r===0){let o=new Array(n);for(let l=0;l<=a;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=a;++o){let l=t[o]-t[o-1],p=0;this.nGramWidths.forEach(u=>{p+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&p===0&&(p=1),s[o]=s[o-1]+p}let i=new Array(s[a]);for(let o=0;o<a;++o){let l=t[o],p=s[o];if(this.nGramWidths.forEach(u=>{let d=t[o+1]-t[o],h=this.getNumNGrams(d,u);this.createNGrams(e,l,i,p,h,u),p+=h}),this.preserveShort&&p===s[o]){let u=t[o+1]-t[o];if(u===0)continue;let d=u+2*this.padWidth;this.createNGrams(e,l,i,p,1,d)}}return[i,s]}};function $x(e,t,n,r,a,s,i,o){return new gj(n,r,a,s,i,o).compute(e,t)}function yj(e,t,n,r){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)r.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&r.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!n||e.length!==0)&&r.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(a,s);(!n||i.length!==0)&&r.push(i),a=s+1}}function Ax(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let h=0;h<r;++h){let c=a.length;yj(e[h],t,n,a);let m=a.length-c;o[h]=m,s+=m,i=Math.max(i,m)}let l=w.getArrayFromDType("int32",s*2),p=new Array(s),u=[r,i],d=0;for(let h=0;h<r;++h)for(let c=0;c<o[h];++c)l[d*2]=h,l[d*2+1]=c,p[d]=a[d],++d;return[l,p,u]}function Fx(e,t){let n=w.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=w.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var p2=At((e,t)=>e-t),bj=Ix((e,t,n,r)=>({real:e-n,imag:t-r})),Rx=qt(wo,p2,bj),xj={kernelName:wo,backendName:"cpu",kernelFunc:Rx};function d2(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=Ve(n,e.dtype);for(let a=0;a<r.values.length;++a){let s=r.indexToLoc(a),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);r.values[a]=e.values[o]}return r}var Zu=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function h2(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let o=r-n+1,l=t-n+1,p=Math.log(o),u=.5*Math.exp(2*p/3),d=.5*Math.sqrt(p*u*(o-u)/o)*Math.sign(l-o/2),h=Math.max(n,Math.floor(t-l*u/o+d)),c=Math.min(r,Math.floor(t+(o-l)*u/o+d));h2(e,t,h,c)}let a=e[t],s=n,i=r;for(w.swap(e,n,t),Zu(e[r],a)>0&&w.swap(e,n,r);s<i;){for(w.swap(e,s,i),s++,i--;Zu(e[s],a)<0;)s=s+1;for(;Zu(e[i],a)>0;)i=i-1}Zu(e[n],a)===0?w.swap(e,n,i):(i=i+1,w.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function c2(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=w.getTypedArrayFromDType(n,i*r),p=w.getTypedArrayFromDType("int32",i*r);for(let d=0;d<i;d++){let h=d*o,c=e.subarray(h,h+o),m=new Array(c.length);c.forEach((b,x)=>m[x]={value:b,index:x}),r<m.length&&(h2(m,r),m=m.slice(0,r)),a&&m.sort(Zu);let f=d*r,g=l.subarray(f,f+r),y=p.subarray(f,f+r);for(let b=0;b<r;b++)g[b]=m[b].value,y[b]=m[b].index}let u=t.slice();return u[u.length-1]=r,[Ve(u,n,l),Ve(u,"int32",p)]}function Dx(e,t,n,r){let a=w.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let m=0;m<a;m++)s[0]*=n[m];s[1]=n[a];for(let m=a+1;m<n.length;m++)s[2]*=n[m];let i=new Map,o=new Int32Array(n[a]),l=new Ot(s,r,e),p=[],u=s[0]===1&&s[2]===1;for(let m=0;m<n[a];m++){let f;if(u)f=e[m].toString();else{let y=[];for(let b=0;b<s[0];b++)for(let x=0;x<s[2];x++)y.push(l.get(b,m,x));f=y.join(",")}let g=i.get(f);if(g!=null)o[m]=g;else{let y=i.size;i.set(f,y),o[m]=y,p.push(m)}}let d=s.slice();d[1]=i.size;let h=new Ot(d,r);p.forEach((m,f)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)h.set(l.get(g,m,y),g,f,y)});let c=n.slice();return c[a]=d[1],{outputValues:h.values,outputShape:c,indices:o}}var vj="4.22.0";xc("cpu",()=>new wx,1);var m2=lt(Ti,e=>e>=0?e:Math.exp(e)-1),wj={kernelName:Ti,backendName:"cpu",kernelFunc:m2};function f2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;ke([a],"leakyRelu");let i=w.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=w.getTypedArrayFromDType("float32",i);for(let p=0;p<o.length;p++)l[p]=o[p]<0?s*o[p]:o[p];return n.makeTensorInfo(a.shape,"float32",l)}var kj={kernelName:zi,backendName:"cpu",kernelFunc:f2},Ij=At((e,t)=>e<0?t*e:e);function g2(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;ke([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=Ij(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var Sj={kernelName:eo,backendName:"cpu",kernelFunc:g2},y2=lt(ro,e=>Math.max(0,e)),Nj={kernelName:ro,backendName:"cpu",kernelFunc:y2},b2=lt(io,e=>Math.min(Math.max(0,e),6)),Tj={kernelName:io,backendName:"cpu",kernelFunc:b2};function Hh(e,t,n,r,a){if(n==="linear")return Yr({inputs:{x:t},backend:e});if(n==="relu")return y2({inputs:{x:t},backend:e});if(n==="elu")return m2({inputs:{x:t},backend:e});if(n==="relu6")return b2({inputs:{x:t},backend:e});if(n==="prelu")return g2({inputs:{x:t,alpha:r},backend:e});if(n==="leakyrelu")return f2({inputs:{x:t},backend:e,attrs:{alpha:a}});if(n==="sigmoid")return a2({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function xt(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=w.sizeFromShape(a.shape),o=w.inferFromImplicitShape(s,i),l=w.sizeFromShape(o);w.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let p=n.data.get(a.dataId);if(p.complexTensorInfos!=null){let u=p.complexTensorInfos.real,d=p.complexTensorInfos.imag;u.shape=o,d.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var _j={kernelName:eu,backendName:"cpu",kernelFunc:xt};function x2(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;ke([a,s],"matMul");let l=a.shape.length,p=s.shape.length,u=i?a.shape[l-2]:a.shape[l-1],d=o?s.shape[p-1]:s.shape[p-2],h=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[p-2]:s.shape[p-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=w.sizeFromShape(m),y=w.sizeFromShape(f),b=bu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);w.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,u,h]:[g,h,u],v=o?[y,c,d]:[y,d,c],I=xt({inputs:{x:a},backend:n,attrs:{shape:x}}),N=xt({inputs:{x:s},backend:n,attrs:{shape:v}}),C=i?I.shape[1]:I.shape[2],E=i?I.shape[2]:I.shape[1],A=o?N.shape[1]:N.shape[2],R=Math.max(g,y),F=n.data.get(I.dataId).values,S=n.data.get(N.dataId).values,D=w.computeStrides(I.shape),P=w.computeStrides(N.shape),[U,G,K]=i?[D[0],1,D[1]]:[D[0],D[1],1],[j,Z,ee]=o?[1,P[1],P[0]]:[P[1],1,P[0]],X=E*A,re=Ve([R,E,A],I.dtype),te=re.values,ae=n.blockSize;for(let oe=0;oe<R;oe++){let we=oe%g,ve=oe%y;for(let ce=0;ce<E;ce+=ae){let Te=Math.min(ce+ae,E);for(let Ee=0;Ee<A;Ee+=ae){let se=Math.min(Ee+ae,A);for(let ue=0;ue<C;ue+=ae){let Le=Math.min(ue+ae,C);for(let Me=ce;Me<Te;Me++)for(let qe=Ee;qe<se;qe++){let Fe=0;for(let Ye=ue;Ye<Le;Ye++){let Xe=F[we*U+Me*G+Ye*K],Kt=S[Ye*j+qe*Z+ve*ee];Fe+=Xe*Kt}te[oe*X+(Me*A+qe)]+=Fe}}}}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(b,re.dtype,re.values)}var Cj={kernelName:mi,backendName:"cpu",kernelFunc:x2};function Ej(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:p,activation:u,leakyreluAlpha:d}=r,h,c,m,f=[];h=x2({inputs:{a,b:s},attrs:{transposeA:l,transposeB:p},backend:n}),i&&(c=dl({inputs:{a:h,b:i},backend:n}),f.push(h),h=c),u&&(m=Hh(n,h,u,o,d),f.push(h),h=m);for(let g of f)n.disposeIntermediateTensorInfo(g);return h}var $j={kernelName:zs,backendName:"cpu",kernelFunc:Ej},Aj=lt(si,e=>Math.acos(e)),Fj={kernelName:si,backendName:"cpu",kernelFunc:Aj},Rj=lt(ii,e=>Math.acosh(e)),Dj={kernelName:ii,backendName:"cpu",kernelFunc:Rj};function Mj(e){let{inputs:t,backend:n}=e,r=t;ke(t,"addN");let a=r.map(o=>n.data.get(o.dataId).values),s=Ve(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let l=a[o];for(let p=0;p<i.length;p++)i[p]+=l[p]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var Oj={kernelName:oi,backendName:"cpu",kernelFunc:Mj};function Lj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ke(a,"all");let o=w.parseAxisParam(s,a.shape),l=o,p=T.getAxesPermutation(l,a.shape.length),u=a;p!=null&&(u=Mn({inputs:{x:a},backend:n,attrs:{perm:p}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("all",l,u.shape.length);let[d,h]=T.computeOutAndReduceShapes(u.shape,l),c=w.sizeFromShape(h),m=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),f=n.data.get(u.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let v=0;v<c;++v){let I=f[b+v];x=x&&I}m[y]=x}p!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,m);if(i){let y=T.expandShapeToKeepDim(d,o),b=xt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var zj={kernelName:yl,backendName:"cpu",kernelFunc:Lj};function Pj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ke(a,"any");let o=w.parseAxisParam(s,a.shape),l=o,p=T.getAxesPermutation(l,a.shape.length),u=a;p!=null&&(u=Mn({inputs:{x:a},backend:n,attrs:{perm:p}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("any",l,u.shape.length);let[d,h]=T.computeOutAndReduceShapes(u.shape,l),c=w.sizeFromShape(h),m=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),f=n.data.get(u.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let v=0;v<c;++v){let I=f[b+v];x=x||I}m[y]=x}p!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,m);if(i){let y=T.expandShapeToKeepDim(d,o),b=xt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var Bj={kernelName:bl,backendName:"cpu",kernelFunc:Pj};function Wj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ke(a,"argMax");let i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,p=[];o!=null&&(l=Mn({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[u,d]=T.computeOutAndReduceShapes(l.shape,i),h=w.sizeFromShape(u),c=w.makeZerosTypedArray(h,"int32"),m=w.sizeFromShape(d),f=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let I=f[y+v];I>b&&(b=I,x=v)}c[g]=x}return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",c)}var Vj={kernelName:xl,backendName:"cpu",kernelFunc:Wj};function Uj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ke(a,"argMin");let i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,p=[];o!=null&&(l=Mn({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[u,d]=T.computeOutAndReduceShapes(l.shape,i),h=w.sizeFromShape(u),c=w.makeZerosTypedArray(h,"int32"),m=w.sizeFromShape(d),f=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let I=f[y+v];I<b&&(b=I,x=v)}c[g]=x}return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",c)}var Gj={kernelName:vl,backendName:"cpu",kernelFunc:Uj},Hj=lt(li,e=>Math.asin(e)),jj={kernelName:li,backendName:"cpu",kernelFunc:Hj},qj=lt(ui,e=>Math.asinh(e)),Kj={kernelName:ui,backendName:"cpu",kernelFunc:qj},Xj=lt(pi,e=>Math.atan(e)),Zj={kernelName:pi,backendName:"cpu",kernelFunc:Xj},Jj=At((e,t)=>Math.atan2(e,t)),Yj=qt(hi,Jj),Qj={kernelName:hi,backendName:"cpu",kernelFunc:Yj},eq=lt(di,e=>Math.atanh(e)),tq={kernelName:di,backendName:"cpu",kernelFunc:eq};function Mx(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,p=a.dilationWidth,u=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,c=a.padInfo.left,m=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=Ve(a.outShape,n),g=f.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let v=0;v<a.batchSize;++v){let I=v*y,N=v*r[0];for(let C=0;C<a.inChannels;++C)for(let E=0;E<a.outHeight;++E){let A=E*i-h,R=Math.max(0,A),F=Math.min(a.inHeight,u+A),S=I+E*b;for(let D=0;D<a.outWidth;++D){let P=D*o-c,U=Math.max(0,P),G=Math.min(a.inWidth,d+P),K=m,j=0,Z=0;for(let X=R;X<F;X+=l){let re=N+X*r[1];for(let te=U;te<G;te+=p){let ae=re+te*r[2],oe=e[ae+C];s==="max"&&oe>K?K=oe:s==="avg"&&(j+=oe,Z++)}if(isNaN(K))break}let ee=S+D*x+C;g[ee]=s==="avg"?j/Z:K}}}return f}function v2(e,t,n,r,a=!1,s=!1){let i=Ve(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,p=r.dilationHeight,u=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,c=r.padInfo.top,m=r.padInfo.left,f=Ve(t,n,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){let x=b*o-c,v=x;for(;v<0;)v+=p;let I=Math.min(r.inHeight,d+x);for(let N=0;N<r.outWidth;++N){let C=N*l-m,E=C;for(;E<0;)E+=u;let A=Math.min(r.inWidth,h+C),R=Number.NEGATIVE_INFINITY,F=-1;for(let S=v;S<I;S+=p){let D=S-x;for(let P=E;P<A;P+=u){let U=P-C,G=f.get(g,S,P,y);G>R&&(R=G,a?F=s?((g*r.inHeight+S)*r.inWidth+P)*r.inChannels+y:(S*r.inWidth+P)*r.inChannels+y:F=D*h+U)}}i.set(F,g,b,N,y)}}return i}function w2(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,p=a.dilationDepth,u=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,c=a.effectiveFilterHeight,m=a.effectiveFilterWidth,f=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ve(a.outShape,n),v=x.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[2]*a.outShape[3]*a.outShape[4],C=a.outShape[3]*a.outShape[4],E=a.outShape[4];for(let A=0;A<a.batchSize;++A){let R=A*I,F=A*r[0];for(let S=0;S<a.inChannels;++S)for(let D=0;D<a.outDepth;++D){let P=D*i-f,U=P;for(;U<0;)U+=p;let G=Math.min(a.inDepth,h+P),K=R+D*N;for(let j=0;j<a.outHeight;++j){let Z=j*o-g,ee=Z;for(;ee<0;)ee+=u;let X=Math.min(a.inHeight,c+Z),re=K+j*C;for(let te=0;te<a.outWidth;++te){let ae=te*l-y,oe=ae;for(;oe<0;)oe+=d;let we=Math.min(a.inWidth,m+ae),ve=re+te*E,ce=b,Te=0,Ee=0;for(let ue=U;ue<G;ue+=p){let Le=F+ue*r[1];for(let Me=ee;Me<X;Me+=u){let qe=Le+Me*r[2];for(let Fe=oe;Fe<we;Fe+=d){let Ye=qe+Fe*r[3],Xe=e[Ye+S];if(s==="max"&&Xe>ce?ce=Xe:s==="avg"&&(Te+=Xe,Ee++),isNaN(ce))break}if(isNaN(ce))break}if(isNaN(ce))break}let se=ve+S;v[se]=s==="avg"?Te/Math.max(Ee,1):ce}}}}return x}function nq(e,t){let n=Ve(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,p=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,c=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-h,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,p+b);for(let I=0;I<t.outHeight;++I){let N=I*a-c,C=N;for(;C<0;)C+=o;let E=Math.min(t.inHeight,u+N);for(let A=0;A<t.outWidth;++A){let R=A*s-m,F=R;for(;F<0;)F+=l;let S=Math.min(t.inWidth,d+R),D=Number.NEGATIVE_INFINITY,P=-1;for(let U=x;U<v;U+=i){let G=U-b;for(let K=C;K<E;K+=o){let j=K-N;for(let Z=F;Z<S;Z+=l){let ee=Z-R,X=e.get(f,U,K,Z,g);X>=D&&(D=X,P=G*u*d+j*u+ee)}}}n.set(P,f,y,I,A,g)}}}return n}function rq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ke(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,p=1;w.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let u=T.computePool2DInfo(a.shape,s,i,p,o,l),d;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))d=Yr({inputs:{x:a},backend:n});else{let h=n.data.get(a.dataId).values,c=w.computeStrides(a.shape),m=Mx(h,a.shape,a.dtype,c,u,"avg");d=n.makeTensorInfo(u.outShape,a.dtype,m.values)}return d}var aq={kernelName:ci,backendName:"cpu",kernelFunc:rq};function sq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:p}=r;ke(a,"avgPool3d");let u=T.computePool3DInfo(a.shape,s,i,1,o,l,p),d=n.data.get(a.dataId).values,h=w2(d,a.shape,a.dtype,w.computeStrides(a.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}var iq={kernelName:wl,backendName:"cpu",kernelFunc:sq};function oq(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=r;ke([a,s],"avgPool3DGrad");let u=T.computePool3DInfo(s.shape,i,o,1,l,p),d=u.strideDepth,h=u.strideHeight,c=u.strideWidth,m=u.filterDepth,f=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,I=u.effectiveFilterHeight,N=u.effectiveFilterWidth,C=v-1-u.padInfo.front,E=N-1-u.padInfo.left,A=I-1-u.padInfo.top,R=Ve(s.shape,"float32"),F=1/(m*f*g),S=n.bufferSync(a);for(let D=0;D<u.batchSize;++D)for(let P=0;P<u.inChannels;++P)for(let U=0;U<u.inDepth;++U)for(let G=0;G<u.inHeight;++G)for(let K=0;K<u.inWidth;++K){let j=U-C,Z=G-A,ee=K-E,X=0;for(let re=0;re<v;re+=y){let te=(j+re)/d;if(!(te<0||te>=u.outDepth||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let oe=(Z+ae)/h;if(!(oe<0||oe>=u.outHeight||Math.floor(oe)!==oe))for(let we=0;we<N;we+=x){let ve=(ee+we)/c;if(ve<0||ve>=u.outWidth||Math.floor(ve)!==ve)continue;let ce=S.get(D,te,oe,ve,P);X+=ce}}}R.set(X*F,D,U,G,K,P)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var lq={kernelName:Ap,backendName:"cpu",kernelFunc:oq};function uq(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;ke([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:p}=r,u=T.computePool2DInfo(i.shape,o,l,1,p),d=u.strideHeight,h=u.strideWidth,c=u.filterHeight,m=u.filterWidth,f=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,v=y-1-u.padInfo.top,I=Ve(i.shape,"float32"),N=1/(c*m),C=n.data.get(a.dataId).values,E=Ve(a.shape,"float32",C);for(let A=0;A<u.batchSize;++A)for(let R=0;R<u.inChannels;++R)for(let F=0;F<u.inHeight;++F)for(let S=0;S<u.inWidth;++S){let D=F-v,P=S-x,U=0;for(let G=0;G<y;G+=f){let K=(D+G)/d;if(!(K<0||K>=u.outHeight||Math.floor(K)!==K))for(let j=0;j<b;j+=g){let Z=(P+j)/h;if(Z<0||Z>=u.outWidth||Math.floor(Z)!==Z)continue;let ee=E.get(A,K,Z,R);U+=ee}}I.set(U*N,A,F,S,R)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var pq={kernelName:$p,backendName:"cpu",kernelFunc:uq};function dq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;w.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ke([a,o,l,s,i],"batchNorm");let{varianceEpsilon:p}=r;p==null&&(p=.001);let u=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(u.length),g=m.length,y=c.length,b=h.length,x=d.length,v=0,I=0,N=0,C=0;for(let E=0;E<u.length;++E)f[E]=m[v++]+(u[E]-d[I++])*c[N++]/Math.sqrt(h[C++]+p),v>=g&&(v=0),I>=x&&(I=0),N>=y&&(N=0),C>=b&&(C=0);return n.makeTensorInfo(a.shape,a.dtype,f)}var hq={kernelName:Fi,backendName:"cpu",kernelFunc:dq};function cq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ke([a],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),p=T.getPermuted(l.length,s.length),u=T.getReshapedPermuted(a.shape,s,o),d=T.getSliceBeginCoords(i,s.length),h=T.getSliceSize(u,i,s.length),c=xt({inputs:{x:a},backend:n,attrs:{shape:l}}),m=Mn({inputs:{x:c},backend:n,attrs:{perm:p}}),f=xt({inputs:{x:m},backend:n,attrs:{shape:u}}),g=Ys({inputs:{x:f},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var mq={kernelName:kl,backendName:"cpu",kernelFunc:cq};function fq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,p=Sx(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}var gq={kernelName:Il,backendName:"cpu",kernelFunc:fq};function yq(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var bq={kernelName:Fp,backendName:"cpu",kernelFunc:yq},xq=lt(as,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),vq={kernelName:as,backendName:"cpu",kernelFunc:xq},wq=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(w.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let p=0;p<o.length;p++){let u=o[p],d=l[p];r[p]=Math.hypot(u,d)}return n.makeOutput(r,t.shape,"float32")},kq={kernelName:Rp,backendName:"cpu",kernelFunc:wq};function hl(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var Iq={kernelName:hc,backendName:"cpu",kernelFunc:hl};function cl(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(f=>f.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(f=>f.shape),s);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(f=>w.sizeFromShape(f.shape)>0);if(l.length===1)return Yr({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){let f=l.map(v=>Js({inputs:{input:v},backend:n})),g=l.map(v=>hl({inputs:{input:v},backend:n})),y=cl({inputs:f,backend:n,attrs:{axis:s}}),b=cl({inputs:g,backend:n,attrs:{axis:s}}),x=Vn({inputs:{real:y,imag:b},backend:n});return f.forEach(v=>n.disposeIntermediateTensorInfo(v)),g.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let p=l.map(f=>{let g=[-1,w.sizeFromShape(f.shape.slice(s))];return xt({inputs:{x:f},backend:n,attrs:{shape:g}})}),u=p.map(f=>({vals:n.data.get(f.dataId).values,shape:f.shape}));o=T.computeOutShape(p.map(f=>f.shape),1);let d=p[0].shape[0]===1,h=Nx(u,o,t[0].dtype,d),c=T.computeOutShape(l.map(f=>f.shape),s),m=n.makeTensorInfo(c,t[0].dtype,h);return p.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var Sq={kernelName:Nl,backendName:"cpu",kernelFunc:cl};function k2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:p,dimRoundingMode:u}=r;ke([a,s],"conv2d");let d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!1,d),c=h.filterHeight,m=h.filterWidth,f=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x=h.dataFormat==="channelsLast",v=new Ot(h.outShape,a.dtype),I=w.computeStrides(a.shape),N=w.computeStrides(s.shape),C=I[0],E=x?I[1]:I[2],A=x?I[2]:1,R=x?1:I[1],F=v.strides[0],S=x?v.strides[1]:v.strides[2],D=x?v.strides[2]:1,P=x?1:v.strides[1],U=n.data.get(a.dataId).values,G=n.data.get(s.dataId).values,K=v.values;for(let j=0;j<h.batchSize;++j){let Z=j*C,ee=j*F;for(let X=0;X<h.outHeight;++X){let re=ee+X*S,te=X*h.strideHeight-b;for(let ae=0;ae<c;++ae){let oe=te+ae*f;if(oe<0||oe>=h.inHeight)continue;let we=ae*N[0],ve=Z+oe*E;for(let ce=0;ce<h.outWidth;++ce){let Te=re+ce*D,Ee=ce*h.strideWidth-y;for(let se=0;se<m;++se){let ue=Ee+se*g;if(ue<0||ue>=h.inWidth)continue;let Le=we+se*N[1],Me=ve+ue*A,qe=Le;for(let Fe=0;Fe<h.inChannels;++Fe){let Ye=U[Me+Fe*R];for(let Xe=0;Xe<h.outChannels;++Xe)K[Te+Xe*P]+=Ye*G[qe+Xe];qe+=h.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,K)}var Nq={kernelName:yi,backendName:"cpu",kernelFunc:k2};function Tq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:p,filterShape:u}=r;ke([a,s],"conv2dBackpropFilter");let d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(a.shape,u,i,1,o,p,!1,d),{strideHeight:c,strideWidth:m,filterHeight:f,filterWidth:g}=h,y=h.dataFormat==="channelsLast",b=new Ot(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,C=new Ot(a.shape,a.dtype,I),E=new Ot(s.shape,s.dtype,N);for(let A=0;A<f;++A){let R=Math.max(0,Math.ceil((v-A)/c)),F=Math.min(h.outHeight,(h.inHeight+v-A)/c);for(let S=0;S<g;++S){let D=Math.max(0,Math.ceil((x-S)/m)),P=Math.min(h.outWidth,(h.inWidth+x-S)/m);for(let U=0;U<h.inChannels;++U)for(let G=0;G<h.outChannels;++G){let K=0;for(let j=0;j<h.batchSize;++j)for(let Z=R;Z<F;++Z){let ee=A+Z*c-v;for(let X=D;X<P;++X){let re=S+X*m-x;y?K+=C.get(j,ee,re,U)*E.get(j,Z,X,G):K+=C.get(j,U,ee,re)*E.get(j,G,Z,X)}}b.set(K,A,S,U,G)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var _q={kernelName:sc,backendName:"cpu",kernelFunc:Tq};function Cq(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:p,dimRoundingMode:u}=r;ke([a,s],"conv2dBackpropInput");let d=w.computeStrides(s.shape),h=w.computeStrides(a.shape),c=T.convertConv2DDataFormat(p),m=T.computeConv2DInfo(i,s.shape,o,1,l,u,!1,c),f=new Ot(m.inShape,"float32"),g=f.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,I]=d,{batchSize:N,filterHeight:C,filterWidth:E,inChannels:A,inHeight:R,inWidth:F,outChannels:S,outHeight:D,outWidth:P,strideHeight:U,strideWidth:G}=m;c=m.dataFormat;let K=C-1-m.padInfo.top,j=E-1-m.padInfo.left,Z=c==="channelsLast",ee=f.strides[0],X=Z?f.strides[1]:f.strides[2],re=Z?f.strides[2]:1,te=Z?1:f.strides[1],ae=h[0],oe=Z?h[1]:h[2],we=Z?h[2]:1,ve=Z?1:h[1];for(let ce=0;ce<N;++ce)for(let Te=0;Te<A;++Te)for(let Ee=0;Ee<R;++Ee){let se=Ee-K,ue=Math.max(0,Math.ceil(se/U)),Le=Math.min(D,(C+se)/U);for(let Me=0;Me<F;++Me){let qe=Me-j,Fe=Math.max(0,Math.ceil(qe/G)),Ye=Math.min(P,(E+qe)/G),Xe=0;for(let Ne=ue;Ne<Le;++Ne){let de=Ne*U-se;for(let Wt=Fe;Wt<Ye;++Wt){let hn=Wt*G-qe,Zn=ae*ce+oe*Ne+we*Wt,rt=x*(C-1-de)+v*(E-1-hn)+I*Te;for(let Ue=0;Ue<S;++Ue){let Ct=y[Zn+ve*Ue],sn=b[rt+Ue];Xe+=Ct*sn}}}let Kt=ee*ce+X*Ee+re*Me+te*Te;g[Kt]=Xe}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var Eq={kernelName:bi,backendName:"cpu",kernelFunc:Cq};function $q(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;ke([a,s],"conv3d");let p=T.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:u,filterHeight:d,filterWidth:h,dilationDepth:c,dilationHeight:m,dilationWidth:f,padInfo:g}=p,y=g.front,b=g.left,x=g.top,v=new Ot(p.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,C=v.values,E=w.computeStrides(a.shape),A=w.computeStrides(s.shape);for(let R=0;R<p.batchSize;++R){let F=R*E[0],S=R*v.strides[0];for(let D=0;D<p.outDepth;++D){let P=S+D*v.strides[1],U=D*p.strideDepth-y;for(let G=0;G<u;++G){let K=U+G*c;if(K<0||K>=p.inDepth)continue;let j=G*A[0],Z=F+K*E[1];for(let ee=0;ee<p.outHeight;++ee){let X=P+ee*v.strides[2],re=ee*p.strideHeight-x;for(let te=0;te<d;++te){let ae=re+te*m;if(ae<0||ae>=p.inHeight)continue;let oe=j+te*A[1],we=Z+ae*E[2];for(let ve=0;ve<p.outWidth;++ve){let ce=X+ve*p.outChannels,Te=ve*p.strideWidth-b;for(let Ee=0;Ee<h;++Ee){let se=Te+Ee*f;if(se<0||se>=p.inWidth)continue;let ue=oe+Ee*A[2],Le=we+se*p.inChannels,Me=ue;for(let qe=0;qe<p.inChannels;++qe){let Fe=I[Le+qe];for(let Ye=0;Ye<p.outChannels;++Ye)C[ce+Ye]+=Fe*N[Me+Ye];Me+=p.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var Aq={kernelName:xi,backendName:"cpu",kernelFunc:$q};function Fq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;ke([a,s],"conv3dBackpropFilterV2");let p=w.computeStrides(a.shape),u=w.computeStrides(s.shape),d=T.computeConv3DInfo(a.shape,l,i,1,o),h=d.strideDepth,c=d.strideHeight,m=d.strideWidth,f=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new Ot(d.filterShape,"float32"),x=b.values,[v,I,N,C]=b.strides,E=n.data.get(s.dataId).values,[A,R,F,S]=u,D=n.data.get(a.dataId).values,[P,U,G,K]=p,j=d.padInfo.front,Z=d.padInfo.left,ee=d.padInfo.top;for(let X=0;X<f;++X){let re=Math.max(0,Math.ceil((j-X)/h)),te=Math.min(d.outDepth,(d.inDepth+j-X)/h),ae=X*v;for(let oe=0;oe<g;++oe){let we=Math.max(0,Math.ceil((ee-oe)/c)),ve=Math.min(d.outHeight,(d.inHeight+ee-oe)/c),ce=oe*I+ae;for(let Te=0;Te<y;++Te){let Ee=Math.max(0,Math.ceil((Z-Te)/m)),se=Math.min(d.outWidth,(d.inWidth+Z-Te)/m),ue=Te*N+ce;for(let Le=0;Le<d.inChannels;++Le){let Me=Le*C+ue;for(let qe=0;qe<d.outChannels;++qe){let Fe=0;for(let Ye=0;Ye<d.batchSize;++Ye){let Xe=Ye*P,Kt=Ye*A;for(let Ne=re;Ne<te;++Ne){let de=(X+Ne*h-j)*U+Xe,Wt=Ne*R+Kt;for(let hn=we;hn<ve;++hn){let Zn=(oe+hn*c-ee)*G+de,rt=hn*F+Wt;for(let Ue=Ee;Ue<se;++Ue){let Ct=(Te+Ue*m-Z)*K+Zn,sn=Ue*S+rt;Fe+=D[Ct+Le]*E[sn+qe]}}}}x[Me+qe]=Fe}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var Rq={kernelName:Tl,backendName:"cpu",kernelFunc:Fq};function Dq(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;ke([a],"conv3dBackpropInputV2");let p=w.computeStrides(a.shape),u=w.computeStrides(s.shape),d=T.computeConv3DInfo(l,s.shape,o,1,i),h=new Ot(d.inShape,"float32"),c=h.values,[m,f,g,y]=h.strides,b=n.data.get(a.dataId).values,[x,v,I,N]=p,C=n.data.get(s.dataId).values,[E,A,R,F]=u,{batchSize:S,filterDepth:D,filterHeight:P,filterWidth:U,inChannels:G,inDepth:K,inHeight:j,inWidth:Z,outChannels:ee,outDepth:X,outHeight:re,outWidth:te,strideDepth:ae,strideHeight:oe,strideWidth:we}=d,ve=D-1-d.padInfo.front,ce=P-1-d.padInfo.top,Te=U-1-d.padInfo.left;for(let Ee=0;Ee<S;++Ee)for(let se=0;se<G;++se)for(let ue=0;ue<K;++ue){let Le=ue-ve,Me=Math.max(0,Math.ceil(Le/ae)),qe=Math.min(X,(D+Le)/ae);for(let Fe=0;Fe<j;++Fe){let Ye=Fe-ce,Xe=Math.max(0,Math.ceil(Ye/oe)),Kt=Math.min(re,(P+Ye)/oe);for(let Ne=0;Ne<Z;++Ne){let de=Ne-Te,Wt=Math.max(0,Math.ceil(de/we)),hn=Math.min(te,(U+de)/we),Zn=0;for(let rt=Me;rt<qe;++rt){let Ue=rt*ae-Le;for(let Ct=Xe;Ct<Kt;++Ct){let sn=Ct*oe-Ye;for(let Jn=Wt;Jn<hn;++Jn){let Or=Jn*we-de,dr=x*Ee+v*rt+I*Ct+N*Jn,Ia=E*(D-1-Ue)+A*(P-1-sn)+R*(U-1-Or)+F*se;for(let Ln=0;Ln<ee;++Ln){let hr=b[dr+Ln],on=C[Ia+Ln];Zn+=hr*on}}}}c[m*Ee+f*ue+g*Fe+y*Ne+se]=Zn}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}var Mq={kernelName:_l,backendName:"cpu",kernelFunc:Dq},Oq=lt(vi,e=>Math.cos(e)),Lq={kernelName:vi,backendName:"cpu",kernelFunc:Oq},zq=lt(wi,e=>Math.cosh(e)),Pq={kernelName:wi,backendName:"cpu",kernelFunc:zq};function Bq(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:p}=r,[u,d,h,c]=a.shape,m=s.shape[0],[f,g]=o,y=Ve([m,f,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,I=w.computeStrides(a.shape),N=w.computeStrides(y.shape);for(let C=0;C<m;C++){let E=C*4,A=b[E],R=b[E+1],F=b[E+2],S=b[E+3],D=x[C];if(D>=u)continue;let P=f>1?(F-A)*(d-1)/(f-1):0,U=g>1?(S-R)*(h-1)/(g-1):0;for(let G=0;G<f;G++){let K=f>1?A*(d-1)+G*P:.5*(A+F)*(d-1);if(K<0||K>d-1){for(let j=0;j<g;j++)for(let Z=0;Z<c;Z++){let ee=Z+j*N[2]+G*N[1]+C*N[0];y.values[ee]=p}continue}if(l==="bilinear"){let j=Math.floor(K),Z=Math.ceil(K),ee=K-j;for(let X=0;X<g;X++){let re=g>1?R*(h-1)+X*U:.5*(R+S)*(h-1);if(re<0||re>h-1){for(let we=0;we<c;we++){let ve=we+X*N[2]+G*N[1]+C*N[0];y.values[ve]=p}continue}let te=Math.floor(re),ae=Math.ceil(re),oe=re-te;for(let we=0;we<c;we++){let ve=we+te*I[2]+j*I[1]+D*I[0],ce=v[ve];ve=we+ae*I[2]+j*I[1]+D*I[0];let Te=v[ve];ve=we+te*I[2]+Z*I[1]+D*I[0];let Ee=v[ve];ve=we+ae*I[2]+Z*I[1]+D*I[0];let se=v[ve],ue=ce+(Te-ce)*oe,Le=Ee+(se-Ee)*oe;ve=we+X*N[2]+G*N[1]+C*N[0],y.values[ve]=ue+(Le-ue)*ee}}}else for(let j=0;j<g;++j){let Z=g>1?R*(h-1)+j*U:.5*(R+S)*(h-1);if(Z<0||Z>h-1){for(let re=0;re<c;re++){let te=re+j*N[2]+G*N[1]+C*N[0];y.values[te]=p}continue}let ee=Math.round(Z),X=Math.round(K);for(let re=0;re<c;re++){let te=re+ee*I[2]+X*I[1]+D*I[0],ae=re+j*N[2]+G*N[1]+C*N[0];y.values[ae]=v[te]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var Wq={kernelName:El,backendName:"cpu",kernelFunc:Bq};function Vq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ke(a,"cumprod");let l=T.getAxesPermutation([s],a.shape.length),p=a;l!=null&&(p=Mn({inputs:{x:a},backend:n,attrs:{perm:l}}));let u=T.getInnerMostAxes(1,a.shape.length)[0];if(u!==p.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${u}`);let d=or(p.dtype,"int32"),h=w.makeOnesTypedArray(w.sizeFromShape(p.shape),d),c=n.data.get(p.dataId).values,m=p.shape[p.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)h[x]=i?1:c[x];else{let v=f(y,b-1);h[x]=i?c[v]*h[v]:c[x]*h[v]}}let g=n.makeTensorInfo(p.shape,d,h);if(l!=null){let y=T.getUndoAxesPermutation(l),b=Mn({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(p),b}return g}var Uq={kernelName:Cl,backendName:"cpu",kernelFunc:Vq};function Gq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ke(a,"cumsum");let l=T.getAxesPermutation([s],a.shape.length),p=a;l!=null&&(p=Mn({inputs:{x:a},backend:n,attrs:{perm:l}}));let u=T.getInnerMostAxes(1,a.shape.length)[0];if(u!==p.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${u}`);let d=or(p.dtype,"int32"),h=w.makeZerosTypedArray(w.sizeFromShape(p.shape),d),c=n.data.get(p.dataId).values,m=p.shape[p.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)h[x]=i?0:c[x];else{let v=f(y,b-1);h[x]=i?c[v]+h[v]:c[x]+h[v]}}let g=n.makeTensorInfo(p.shape,d,h);if(l!=null){let y=T.getUndoAxesPermutation(l),b=Mn({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(p),b}return g}var Hq={kernelName:ki,backendName:"cpu",kernelFunc:Gq};function jq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,u=Sx(l,p,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}else if(a.shape.length===2){let l=n.bufferSync(a),p=n.bufferSync(s),u=$N(l,p,i,o);return n.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var qq={kernelName:Dp,backendName:"cpu",kernelFunc:jq};function Kq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],p=a.shape[2],u=a.shape[3],d=l*s,h=p*s,c=u/(s*s),m=n.data.get(a.dataId).values,f=new Float32Array(o*d*h*c),g=0;for(let y=0;y<o;++y)for(let b=0;b<d;++b){let x=Math.floor(b/s),v=b%s;for(let I=0;I<h;++I){let N=Math.floor(I/s),C=I%s,E=(v*s+C)*c;for(let A=0;A<c;++A){let R=A+E+u*(N+p*(x+l*y));f[g++]=m[R]}}}return n.makeTensorInfo([o,d,h,c],a.dtype,f)}var Xq={kernelName:$l,backendName:"cpu",kernelFunc:Kq};function I2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:p}=r;ke([a,s],"depthwiseConv2DNative");let u=w.computeStrides(a.shape),d=w.computeStrides(s.shape),h=l;h==null&&(h=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);let c=T.computeConv2DInfo(a.shape,s.shape,i,h,o,p,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,I=c.outChannels/c.inChannels,N=new Ot(c.outShape,a.dtype),C=n.data.get(a.dataId).values,E=n.data.get(s.dataId).values,A=N.values;for(let R=0;R<c.batchSize;++R){let F=R*u[0],S=R*N.strides[0];for(let D=0;D<c.outHeight;++D){let P=S+D*N.strides[1],U=D*c.strideHeight-v;for(let G=0;G<m;++G){let K=U+G*g;if(K<0||K>=c.inHeight)continue;let j=G*d[0],Z=F+K*u[1];for(let ee=0;ee<c.outWidth;++ee){let X=P+ee*N.strides[2],re=ee*c.strideWidth-x;for(let te=0;te<f;++te){let ae=re+te*y;if(ae<0||ae>=c.inWidth)continue;let oe=j+te*d[1],we=Z+ae*c.inChannels,ve=X,ce=oe;for(let Te=0;Te<c.inChannels;++Te){let Ee=C[we+Te];for(let se=0;se<I;++se)A[ve+se]+=Ee*E[ce+se];ve+=I,ce+=I}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var Zq={kernelName:Ii,backendName:"cpu",kernelFunc:I2};function Jq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:p,filterShape:u}=r;ke([a,s],"depthwiseConv2dNativeBackpropFilter");let d=T.computeConv2DInfo(a.shape,u,i,o,l,p,!0),{strideHeight:h,strideWidth:c,filterHeight:m,filterWidth:f}=d,g=new Ot(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,v=n.data.get(a.dataId).values,I=new Ot(a.shape,a.dtype,v),N=n.data.get(s.dataId).values,C=new Ot(s.shape,s.dtype,N);for(let E=0;E<m;++E){let A=Math.max(0,Math.ceil((b-E)/h)),R=Math.min(d.outHeight,(d.inHeight+b-E)/h);for(let F=0;F<f;++F){let S=Math.max(0,Math.ceil((y-F)/c)),D=Math.min(d.outWidth,(d.inWidth+y-F)/c);for(let P=0;P<d.outChannels;++P){let U=Math.trunc(P/x),G=P%x,K=0;for(let j=0;j<d.batchSize;++j)for(let Z=A;Z<R;++Z){let ee=E+Z*h-b;for(let X=S;X<D;++X){let re=F+X*c-y;K+=I.get(j,ee,re,U)*C.get(j,Z,X,P)}}g.set(K,E,F,U,G)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var Yq={kernelName:ic,backendName:"cpu",kernelFunc:Jq};function Qq(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:p,inputShape:u}=r;ke([a,s],"depthwiseConv2DNativeBackpropInput");let d=w.computeStrides(a.shape),h=w.computeStrides(s.shape),c=T.computeConv2DInfo(u,s.shape,i,o,l,p,!0),m=new Ot(c.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(a.dataId).values,[v,I,N]=d,C=n.data.get(s.dataId).values,[E,A,R]=h,{batchSize:F,filterHeight:S,filterWidth:D,inChannels:P,inHeight:U,inWidth:G,outChannels:K,outHeight:j,outWidth:Z,strideHeight:ee,strideWidth:X}=c,re=S-1-c.padInfo.top,te=D-1-c.padInfo.left,ae=K/P;for(let oe=0;oe<F;++oe)for(let we=0;we<P;++we)for(let ve=0;ve<U;++ve){let ce=ve-re,Te=Math.max(0,Math.ceil(ce/ee)),Ee=Math.min(j,(S+ce)/ee);for(let se=0;se<G;++se){let ue=se-te,Le=Math.max(0,Math.ceil(ue/X)),Me=Math.min(Z,(D+ue)/X),qe=0;for(let Fe=Te;Fe<Ee;++Fe){let Ye=Fe*ee-ce;for(let Xe=Le;Xe<Me;++Xe){let Kt=Xe*X-ue,Ne=v*oe+I*Fe+N*Xe,de=E*(S-1-Ye)+A*(D-1-Kt)+R*we;for(let Wt=0;Wt<ae;++Wt){let hn=we*ae+Wt,Zn=x[Ne+hn],rt=C[de+Wt];qe+=Zn*rt}}}f[g*oe+y*ve+b*se+we]=qe}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var e5={kernelName:oc,backendName:"cpu",kernelFunc:Qq};function t5(e){let{inputs:t,backend:n}=e,{x:r}=t,a=w.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Ve([a,a],r.dtype),o=i.values;for(let p=0;p<s.length;p++)o[p*a+p]=s[p];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var n5={kernelName:Mp,backendName:"cpu",kernelFunc:t5},r5={kernelName:Si,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,p=l.data.get(r.dataId).values,u=r.shape.length,d=l.data.get(a.dataId).values,h=a.shape.length,{batchSize:c,inHeight:m,inWidth:f,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:I,filterHeight:N,filterWidth:C,dilationHeight:E,dilationWidth:A,outShape:R}=T.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),F=w.sizeFromShape(R),S=R.length,D=w.getArrayFromDType(r.dtype,F);for(let P=0;P<c;++P)for(let U=0;U<y;++U){let G=U*v-x.top;for(let K=0;K<b;++K){let j=K*I-x.left;for(let Z=0;Z<g;++Z){let ee=Number.MIN_SAFE_INTEGER;for(let re=0;re<N;++re){let te=G+re*E;if(te>=0&&te<m)for(let ae=0;ae<C;++ae){let oe=j+ae*A;if(oe>=0&&oe<f){let we=w.locToIndex([P,te,oe,Z],u,w.computeStrides(r.shape)),ve=w.locToIndex([re,ae,Z],h,w.computeStrides(a.shape)),ce=p[we]+d[ve];ce>ee&&(ee=ce)}}}let X=w.locToIndex([P,U,K,Z],S,w.computeStrides(R));D[X]=ee}}}return{dataId:l.write(w.toTypedArray(D,r.dtype),R,r.dtype),shape:R,dtype:r.dtype}}},a5={kernelName:Qo,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,p=t,u=w.toNestedArray(r.shape,p.data.get(r.dataId).values),d=w.toNestedArray(a.shape,p.data.get(a.dataId).values),{batchSize:h,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:E,outShape:A}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${Qo}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=w.toNestedArray(A,p.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(a.shape,a.dtype);for(let S=0;S<h;++S)for(let D=0;D<g;++D){let P=D*x-b.top;for(let U=0;U<y;++U){let G=U*v-b.left;for(let K=0;K<f;++K){let j=Number.MIN_SAFE_INTEGER,Z=0,ee=0;for(let X=0;X<I;++X){let re=P+X*C;if(re>=0&&re<c)for(let te=0;te<N;++te){let ae=G+te*E;if(ae>=0&&ae<m){let oe=u[S][re][ae][K]+d[X][te][K];oe>j&&(j=oe,Z=X,ee=te)}}}F[Z][ee][K]+=R[S][D][U][K]}}}return{dataId:p.write(w.toTypedArray(F,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},s5={kernelName:Yo,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,p=t,u=w.toNestedArray(r.shape,p.data.get(r.dataId).values),d=w.toNestedArray(a.shape,p.data.get(a.dataId).values),{batchSize:h,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:E,outShape:A}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${Yo}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=w.toNestedArray(A,p.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let S=0;S<h;++S)for(let D=0;D<g;++D){let P=D*x-b.top;for(let U=0;U<y;++U){let G=U*v-b.left;for(let K=0;K<f;++K){let j=Number.MIN_SAFE_INTEGER,Z=P<0?0:P,ee=G<0?0:G;for(let X=0;X<I;++X){let re=P+X*C;if(re>=0&&re<c)for(let te=0;te<N;++te){let ae=G+te*E;if(ae>=0&&ae<m){let oe=u[S][re][ae][K]+d[X][te][K];oe>j&&(j=oe,Z=re,ee=ae)}}}F[S][Z][ee][K]+=R[S][D][U][K]}}}return{dataId:p.write(w.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function i5(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},p=(l==null?void 0:l.alpha)||1,u=(o==null?void 0:o.contextType)||"2d";if(u!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let d=s.getContext(u,(o==null?void 0:o.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${u} type.`);let[h,c]=a.shape.slice(0,2),m=a.shape.length===2?1:a.shape[2],f=n.data.get(a.dataId).values,g=a.dtype==="float32"?255:1,y=new Uint8ClampedArray(c*h*4);for(let x=0;x<h*c;++x){let v=[0,0,0,255*p];for(let N=0;N<m;N++){let C=f[x*m+N];if(a.dtype==="float32"){if(C<0||C>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${C}.`)}else if(a.dtype==="int32"&&(C<0||C>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${C}.`);m===1?(v[0]=C*g,v[1]=C*g,v[2]=C*g):v[N]=C*g}let I=x*4;y[I+0]=Math.round(v[0]),y[I+1]=Math.round(v[1]),y[I+2]=Math.round(v[2]),y[I+3]=Math.round(v[3])}s.width=c,s.height=h;let b=new ImageData(y,c,h);return d.putImageData(b,0,0),a}var o5={kernelName:lc,backendName:"cpu",kernelFunc:i5};function Nd(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ke(a,"sum");let o;a.dtype==="bool"?o=Qa({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):o=Yr({inputs:{x:a},backend:n});let l=o.shape.length,p=w.parseAxisParam(s,o.shape),u=T.getAxesPermutation(p,l),d=p,h=o;u!=null&&(h=Mn({inputs:{x:o},backend:n,attrs:{perm:u}}),d=T.getInnerMostAxes(d.length,l)),T.assertAxesAreInnerMostDims("sum",d,h.shape.length);let[c,m]=T.computeOutAndReduceShapes(h.shape,d),f=T.upcastType(h.dtype,"int32"),g=Uh(n,c,f),y=w.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(h.dataId).values;for(let v=0;v<b.length;++v){let I=v*y,N=0;for(let C=0;C<y;++C)N+=x[I+C];b[v]=N}if(i){let v=T.expandShapeToKeepDim(g.shape,p),I=g;g=xt({inputs:{x:g},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(I)}return n.disposeIntermediateTensorInfo(o),u!=null&&n.disposeIntermediateTensorInfo(h),g}var l5={kernelName:bo,backendName:"cpu",kernelFunc:Nd};function u5(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:p,steps:u}=T.getEinsumComputePath(o,l),d=u.length,h=null,c=i.length,m=[];for(let f=0;f<d;++f){for(let g of u[f]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=Mn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=xt({inputs:{x},backend:n,attrs:{shape:v}}),m.push(x)),h===null?h=x:(h=km({inputs:{a:x,b:h},backend:n}),m.push(h))}f<d-1&&(p[f]>=0&&(h=Nd({inputs:{x:h},backend:n,attrs:{axis:p[f]-(i.length-c),keepDims:!1}}),m.push(h)),c--)}for(let f of m)f!==h&&n.disposeIntermediateTensorInfo(f);return h}var p5={kernelName:uc,backendName:"cpu",kernelFunc:u5};function d5(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;ke([r,a],"eluGrad");let s=new Float32Array(w.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let p=i[l];p>=0?s[l]=o[l]:s[l]=o[l]*(p+1)}return n.makeTensorInfo(a.shape,"float32",s)}var h5={kernelName:Al,backendName:"cpu",kernelFunc:d5},c5=T.ERF_P,m5=T.ERF_A1,f5=T.ERF_A2,g5=T.ERF_A3,y5=T.ERF_A4,b5=T.ERF_A5,x5=lt(_i,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+c5*n);return t*(1-((((b5*r+y5)*r+g5)*r+f5)*r+m5)*r*Math.exp(-n*n))}),v5={kernelName:_i,backendName:"cpu",kernelFunc:x5};function jh(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),xt({inputs:{x:a},backend:n,attrs:{shape:o}})}var w5={kernelName:Rl,backendName:"cpu",kernelFunc:jh},k5=At((e,t)=>e/t),Ox=qt(Ni,k5),Gf={kernelName:Ni,backendName:"cpu",kernelFunc:Ox};function S2(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,p=[a,s],u=w.sizeFromShape(p),d=w.getTypedArrayFromDType("float32",u),h=w.getTypedArrayFromDType("float32",u);for(let g=0;g<a;g++){let y=Ys({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=Ys({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Vn({inputs:{real:y,imag:b},backend:n}),{real:v,imag:I}=I5(x,t,n),N=T.mergeRealAndImagArrays(v,I);for(let C=0;C<s;C++){let E=T.getComplexWithIndex(N,C);d[g*s+C]=E.real,h[g*s+C]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let c=n.makeTensorInfo(p,"float32",d),m=n.makeTensorInfo(p,"float32",h),f=Vn({inputs:{real:c,imag:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}function I5(e,t,n){let r=w.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(S5(r)){let o=Hf(s,i,r,t,n),l=[e.shape[0],e.shape[1]];if(t){let p=n.makeTensorInfo(l,"float32",o.real),u=n.makeTensorInfo(l,"float32",o.imag),d=n.makeTensorInfo([],"float32",w.createScalarValue(r,"float32")),h=Yr({inputs:{x:d},backend:n}),c=Gf.kernelFunc({inputs:{a:p,b:d},backend:n}),m=Gf.kernelFunc({inputs:{a:u,b:h},backend:n}),f=n.data.get(c.dataId).values,g=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),{real:f,imag:g}}return o}else{let o=T.mergeRealAndImagArrays(s,i),l=N5(o,r,t);return T.splitRealAndImagArrays(l)}}function S5(e){return(e&e-1)===0}function Hf(e,t,n,r,a){if(n===1)return{real:e,imag:t};let s=T.mergeRealAndImagArrays(e,t),i=n/2,o=T.complexWithEvenIndex(s),l=o.real,p=o.imag,u=[l.length],d=a.makeTensorInfo(u,"float32",l),h=a.makeTensorInfo(u,"float32",p),c=Vn({inputs:{real:d,imag:h},backend:a}),m=T.complexWithOddIndex(s),f=m.real,g=m.imag,y=[f.length],b=a.makeTensorInfo(y,"float32",f),x=a.makeTensorInfo(y,"float32",g),v=Vn({inputs:{real:b,imag:x},backend:a}),I=Hf(l,p,i,r,a),N=I.real,C=I.imag,E=[N.length],A=a.makeTensorInfo(E,"float32",N),R=a.makeTensorInfo(E,"float32",C),F=Vn({inputs:{real:A,imag:R},backend:a}),S=Hf(f,g,i,r,a),D=S.real,P=S.imag,U=[D.length],G=a.makeTensorInfo(U,"float32",D),K=a.makeTensorInfo(U,"float32",P),j=Vn({inputs:{real:G,imag:K},backend:a}),Z=T.exponents(n,r),ee=[Z.real.length],X=a.makeTensorInfo(ee,"float32",Z.real),re=a.makeTensorInfo(ee,"float32",Z.imag),te=Vn({inputs:{real:X,imag:re},backend:a}),ae=km({inputs:{a:te,b:j},backend:a}),oe=dl({inputs:{a:F,b:ae},backend:a}),we=Rx({inputs:{a:F,b:ae},backend:a}),ve=Js({inputs:{input:oe},backend:a}),ce=Js({inputs:{input:we},backend:a}),Te=hl({inputs:{input:oe},backend:a}),Ee=hl({inputs:{input:we},backend:a}),se=cl({inputs:[ve,ce],backend:a,attrs:{axis:0}}),ue=cl({inputs:[Te,Ee],backend:a,attrs:{axis:0}}),Le=a.data.get(se.dataId).values,Me=a.data.get(ue.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(re),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(oe),a.disposeIntermediateTensorInfo(we),a.disposeIntermediateTensorInfo(ve),a.disposeIntermediateTensorInfo(Te),a.disposeIntermediateTensorInfo(ce),a.disposeIntermediateTensorInfo(Ee),a.disposeIntermediateTensorInfo(se),a.disposeIntermediateTensorInfo(ue),{real:Le,imag:Me}}function N5(e,t,n){let r=new Float32Array(t*2);for(let a=0;a<t;a++){let s=0,i=0;for(let o=0;o<t;o++){let l=T.exponent(a*o,t,n),p=T.getComplexWithIndex(e,o);s+=p.real*l.real-p.imag*l.imag,i+=p.real*l.imag+p.imag*l.real}n&&(s/=t,i/=t),T.assignToTypedArray(r,s,i,a)}return r}function T5(e){let{inputs:t,backend:n}=e,{input:r}=t,a=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=xt({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=S2(o,!1,n),p=xt({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),p}var _5={kernelName:pc,backendName:"cpu",kernelFunc:T5};function Lx(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||w.inferDtype(a),o=w.getArrayFromDType(i,w.sizeFromShape(r));return E5(o,a),t.makeTensorInfo(r,i,o)}var C5={kernelName:Op,backendName:"cpu",kernelFunc:Lx};function E5(e,t,n){e.fill(t)}var $5={kernelName:Dl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[i,o,l,p]=r.shape,u=a.data.get(r.dataId).values;for(let d=0;d<i;d++){let h=d*l*o*p;for(let c=0;c<o;c++){let m=c*(l*p);for(let f=0;f<l;f++){let g=f*p;for(let y=0;y<p;y++){let b=Math.round(l-f-1),x=h+m+g+y,v=u[x];if(b>=0&&b<l){let I=b*p,N=h+m+I+y;v=u[N]}s[x]=v}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function A5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dataFormat:u,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=r,f=k2({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:p,dataFormat:u,dilations:d,dimRoundingMode:h}});if(i){let g=f;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=xt({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});f=dl({inputs:{a:f,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else f=dl({inputs:{a:f,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(c){let g=f;if(u==="NCHW"&&c==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=xt({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=Hh(n,f,c,y,m),n.disposeIntermediateTensorInfo(y)}else f=Hh(n,f,c,o,m);n.disposeIntermediateTensorInfo(g)}return f}var F5={kernelName:Ps,backendName:"cpu",kernelFunc:A5};function R5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dataFormat:u,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=r,f=I2({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:p,dataFormat:u,dilations:d,dimRoundingMode:h}});if(i){let g=f;f=dl({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(c){let g=f;f=Hh(n,f,c,o,m),n.disposeIntermediateTensorInfo(g)}return f}var D5={kernelName:Bs,backendName:"cpu",kernelFunc:R5};function M5(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=w.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,p,u,d]=T.prepareAndValidate(r,a);if(p===0)return n.makeTensorInfo(l,r.dtype,[]);let h=n.data.get(a.dataId).values,c=n.bufferSync(r),m=BN(h,c,r.dtype,p,o,u,d,r.shape,s);return n.makeTensorInfo(l,r.dtype,m.values)}var O5={kernelName:Ol,backendName:"cpu",kernelFunc:M5};function L5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;ke([a,s],"gatherV2");let l=w.parseAxisParam(i,a.shape)[0],p=n.data.get(s.dataId).values,u=a.shape[l];for(let v=0;v<p.length;++v){let I=p[v];w.assert(I<=u-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${u-1}]`)}let d=o;o==null&&(d=0);let h=w.sizeFromShape(s.shape),c=T.segment_util.collectGatherOpShapeInfo(a,s,l,d),m=xt({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=xt({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}}),g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],y=n.bufferSync(f),b=n.bufferSync(m),x=WN(b,y,g);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var z5={kernelName:Ml,backendName:"cpu",kernelFunc:L5};function P5(e){let{inputs:t,backend:n}=e,{input:r}=t,a=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=xt({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=S2(o,!0,n),p=xt({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),p}var B5={kernelName:dc,backendName:"cpu",kernelFunc:P5},W5=lt(Mi,e=>Number.isFinite(e)?1:0,"bool"),V5={kernelName:Mi,backendName:"cpu",kernelFunc:W5},U5=lt(Oi,e=>Math.abs(e)===1/0?1:0,"bool"),G5={kernelName:Oi,backendName:"cpu",kernelFunc:U5},H5=lt(Li,e=>Number.isNaN(e)?1:0,"bool"),j5={kernelName:Li,backendName:"cpu",kernelFunc:H5};function q5(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=jN(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var K5={kernelName:Bl,backendName:"cpu",kernelFunc:q5},X5=lt(Bi,e=>Math.log1p(e)),Z5={kernelName:Bi,backendName:"cpu",kernelFunc:X5},J5=At((e,t)=>e&&t),Y5=qt(Wl,J5,null,"bool"),Q5={kernelName:Wl,backendName:"cpu",kernelFunc:Y5},eK=lt(Vl,e=>e?0:1,"bool"),tK={kernelName:Vl,backendName:"cpu",kernelFunc:eK},nK=At((e,t)=>e||t),rK=qt(Ul,nK,null,"bool"),aK={kernelName:Ul,backendName:"cpu",kernelFunc:rK};function sK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;ke(a,"LRN");let p=a.shape[3],u=p-1,d=n.data.get(a.dataId).values,h=w.sizeFromShape(a.shape),c=new Float32Array(h);function m(f){let g=f%p,y=f-g+Math.max(0,g-s),b=f-g+Math.min(g+s,u),x=0;for(;y<=b;y++){let v=d[y];x+=v*v}return x}for(let f=0;f<h;f++){let g=m(f),y=d[f]*Math.pow(i+o*g,-l);c[f]=y}return n.makeTensorInfo(a.shape,a.dtype,c)}var iK={kernelName:Wi,backendName:"cpu",kernelFunc:sK};function oK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:p,beta:u}=r;ke(i,"LRNGrad");let d=w.sizeFromShape(i.shape),h=i.shape[3],c=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let b=0;b<y;b++){let x=b%h,v=b-x+Math.max(0,x-o),I=b-x+Math.min(h,x+o+1),N=0;for(let C=v;C<I;C++)N+=Math.pow(m[C],2);N=p*N+l;for(let C=v;C<I;C++){let E=-2*p*u*m[C]*f[b]/N;b===C&&(E+=Math.pow(N,-u)),E*=c[b],g[C]+=E}}return n.makeTensorInfo(i.shape,a.dtype,g)}var lK={kernelName:Gl,backendName:"cpu",kernelFunc:oK};function N2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,p=l.length,u=w.parseAxisParam(s,l),d=u,h=T.getAxesPermutation(d,p),c=o.data.get(a.dataId).values;if(h!=null){let v=new Array(p);for(let I=0;I<v.length;I++)v[I]=l[h[I]];c=_x(c,l,a.dtype,h,v),d=T.getInnerMostAxes(d.length,p),l=v}ke(a,"max"),T.assertAxesAreInnerMostDims("max",d,p);let[m,f]=T.computeOutAndReduceShapes(l,d),g=w.sizeFromShape(f),y=KN(c,g,m,a.dtype),b=o.write(y,m,a.dtype),x=m;return i&&(x=T.expandShapeToKeepDim(m,u)),{dataId:b,shape:x,dtype:a.dtype}}var uK={kernelName:Vi,backendName:"cpu",kernelFunc:N2};function pK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ke(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,p=1;w.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let u=T.computePool2DInfo(a.shape,s,i,p,o,l),d;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))d=Yr({inputs:{x:a},backend:n});else{let h=n.data.get(a.dataId).values,c=w.computeStrides(a.shape),m=Mx(h,a.shape,a.dtype,c,u,"max");d=n.makeTensorInfo(u.outShape,a.dtype,m.values)}return d}var dK={kernelName:Gi,backendName:"cpu",kernelFunc:pK};function hK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:p}=r;ke(a,"maxPool3d");let u=T.computePool3DInfo(a.shape,s,i,1,o,l,p),d=n.data.get(a.dataId).values,h=w2(d,a.shape,a.dtype,w.computeStrides(a.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}var cK={kernelName:Hl,backendName:"cpu",kernelFunc:hK};function mK(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=r;ke([a,s],"maxPool3DGrad");let u=T.computePool3DInfo(s.shape,i,o,1,l,p),d=n.bufferSync(s),h=nq(d,u),c=u.strideDepth,m=u.strideHeight,f=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,b=u.dilationWidth,x=u.effectiveFilterDepth,v=u.effectiveFilterHeight,I=u.effectiveFilterWidth,N=x-1-u.padInfo.front,C=I-1-u.padInfo.left,E=v-1-u.padInfo.top,A=Ve(s.shape,"float32"),R=n.bufferSync(a);for(let F=0;F<u.batchSize;++F)for(let S=0;S<u.inChannels;++S)for(let D=0;D<u.inDepth;++D)for(let P=0;P<u.inHeight;++P)for(let U=0;U<u.inWidth;++U){let G=D-N,K=P-E,j=U-C,Z=0;for(let ee=0;ee<x;ee+=g){let X=(G+ee)/c;if(!(X<0||X>=u.outDepth||Math.floor(X)!==X))for(let re=0;re<v;re+=y){let te=(K+re)/m;if(!(te<0||te>=u.outHeight||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let oe=(j+ae)/f;if(oe<0||oe>=u.outWidth||Math.floor(oe)!==oe)continue;let we=x*v*I-1-h.get(F,X,te,oe,S),ve=ee*v*I+re*I+ae,ce=we===ve?1:0;if(ce===0)continue;let Te=R.get(F,X,te,oe,S);Z+=Te*ce}}}A.set(Z,F,D,P,U,S)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var fK={kernelName:zp,backendName:"cpu",kernelFunc:mK};function gK(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;ke([s,i],"maxPoolGrad");let{filterSize:l,strides:p,pad:u,dimRoundingMode:d}=r,h=T.computePool2DInfo(o.shape,l,p,1,u,d),c=n.data.get(o.dataId).values,m=Ve(h.outShape,o.dtype,v2(c,o.shape,o.dtype,h).values),f=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,I=v-1-h.padInfo.left,N=x-1-h.padInfo.top,C=Ve(o.shape,"float32"),E=n.data.get(a.dataId).values,A=Ve(a.shape,"float32",E);for(let R=0;R<h.batchSize;++R)for(let F=0;F<h.inChannels;++F)for(let S=0;S<h.inHeight;++S)for(let D=0;D<h.inWidth;++D){let P=S-N,U=D-I,G=0;for(let K=0;K<x;K+=y){let j=(P+K)/f;if(!(j<0||j>=h.outHeight||Math.floor(j)!==j))for(let Z=0;Z<v;Z+=b){let ee=(U+Z)/g;if(ee<0||ee>=h.outWidth||Math.floor(ee)!==ee)continue;let X=x*v-1-m.get(R,j,ee,F),re=K*v+Z,te=X===re?1:0;if(te===0)continue;let ae=A.get(R,j,ee,F);G+=ae*te}}C.set(G,R,S,D,F)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var yK={kernelName:Lp,backendName:"cpu",kernelFunc:gK};function bK(e,t,n,r,a){let s=w.computeStrides(t),i=Mx(e,t,n,s,a,"max"),o=v2(e,t,n,a,!0,r);return[i.values,o.values]}var xK={kernelName:Pp,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ke(r,"MaxPoolWithArgmax");let p=l.data.get(r.dataId).values,u=T.computePool2DInfo(r.shape,a,s,[1,1],i),[d,h]=bK(p,r.shape,r.dtype,o,u),c=l.write(d,u.outShape,r.dtype),m=l.write(h,u.outShape,r.dtype);return[{dataId:c,shape:u.outShape,dtype:r.dtype},{dataId:m,shape:u.outShape,dtype:"int32"}]}};function vK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=w.parseAxisParam(s,a.shape),l=T.computeOutAndReduceShapes(a.shape,o)[1],p=w.sizeFromShape(l),u=[],d=n.makeTensorInfo([],"float32",new Float32Array([p]));u.push(d);let h=Qa({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});u.push(h);let c=Ox({inputs:{a:h,b:d},backend:n});u.push(c);let m=Nd({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var wK={kernelName:Hi,backendName:"cpu",kernelFunc:vK};function kK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ke(a,"min");let o=w.parseAxisParam(s,a.shape),l=o,p=T.getAxesPermutation(l,a.shape.length),u=a;p!=null&&(u=Mn({inputs:{x:a},backend:n,attrs:{perm:p}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",l,u.shape.length);let[d,h]=T.computeOutAndReduceShapes(u.shape,l),c=w.sizeFromShape(h),m=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),f=n.data.get(u.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let v=0;v<c;++v){let I=f[b+v];(Number.isNaN(I)||I<x)&&(x=I)}m[y]=x}p!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,m);if(i){let y=T.expandShapeToKeepDim(d,o),b=xt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var IK={kernelName:ji,backendName:"cpu",kernelFunc:kK};function SK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;ke(a,"mirrorPad");let o=s.map((b,x)=>b[0]+a.shape[x]+b[1]),l=s.map(b=>b[0]),p=s.map((b,x)=>b[0]+a.shape[x]),u=i==="reflect"?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,c=w.computeStrides(a.shape),m=w.sizeFromShape(o),f=o.length,g=w.computeStrides(o),y=w.getTypedArrayFromDType(a.dtype,m);for(let b=0;b<m;b++){let x=w.indexToLoc(b,f,g);for(let I=0;I<f;I++)x[I]<l[I]?x[I]=l[I]*2-x[I]-u:x[I]>=p[I]&&(x[I]=(p[I]-1)*2-x[I]+u);x=x.map((I,N)=>I-l[N]);let v=w.locToIndex(x,h,c);y[b]=d[v]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var NK={kernelName:Ki,backendName:"cpu",kernelFunc:SK},TK=At((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),_K=qt(Xi,TK),CK={kernelName:Xi,backendName:"cpu",kernelFunc:_K},EK=ns(ec());function T2(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=w.parseAxisParam([o],a.shape),p=N2({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=T.expandShapeToKeepDim(p.shape,l),d=xt({inputs:{x:p},backend:n,attrs:{shape:u}}),h=Rx({inputs:{a,b:d},backend:n}),c=ON({inputs:{x:h},backend:n}),m=Nd({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),f=xt({inputs:{x:m},backend:n,attrs:{shape:u}}),g=Ox({inputs:{a:c,b:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var $K={kernelName:xo,backendName:"cpu",kernelFunc:T2};function AK(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;ke(a,"multinomial");let l=o?a:T2({inputs:{logits:a},backend:n,attrs:{dim:-1}}),p=l.shape[0],u=l.shape[1],d=n.data.get(l.dataId).values,h=[p,s],c=w.makeZerosTypedArray(w.sizeFromShape(h),"int32");for(let m=0;m<p;++m){let f=m*u,g=new Float32Array(u-1);g[0]=d[f];for(let x=1;x<g.length;++x)g[x]=g[x-1]+d[f+x];let y=EK.alea(i.toString()),b=m*s;for(let x=0;x<s;++x){let v=y();c[b+x]=g.length;for(let I=0;I<g.length;I++)if(v<g[I]){c[b+x]=I;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",c)}var FK={kernelName:jl,backendName:"cpu",kernelFunc:AK},RK=ta.nonMaxSuppressionV3Impl;function DK(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;ke(a,"NonMaxSuppression");let p=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:d}=RK(p,u,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var MK={kernelName:Xl,backendName:"cpu",kernelFunc:DK},OK=ta.nonMaxSuppressionV4Impl;function LK(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:p}=r;ke(a,"NonMaxSuppressionPadded");let u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:c}=OK(u,d,i,o,l,p);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var zK={kernelName:Zl,backendName:"cpu",kernelFunc:LK},PK=ta.nonMaxSuppressionV5Impl;function BK(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:p}=r;ke(a,"NonMaxSuppressionWithScore");let u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,c=o,m=l,f=p,{selectedIndices:g,selectedScores:y}=PK(u,d,h,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var WK={kernelName:Jl,backendName:"cpu",kernelFunc:BK};function VK(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;ke(a,"oneHot");let p=w.sizeFromShape(a.shape),u=new Float32Array(p*i);u.fill(l);let d=n.data.get(a.dataId).values;for(let h=0;h<p;++h)d[h]>=0&&d[h]<i&&(u[h*i+d[h]]=o);return n.makeTensorInfo([...a.shape,i],s,u)}var UK={kernelName:Ji,backendName:"cpu",kernelFunc:VK};function qh(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let a=Js({inputs:{input:r},backend:n}),s=qh({inputs:{x:a},backend:n}),i=hl({inputs:{input:r},backend:n}),o=qh({inputs:{x:i},backend:n}),l=Vn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Lx({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var GK={kernelName:gu,backendName:"cpu",kernelFunc:qh};function _2(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let a=Js({inputs:{input:r},backend:n}),s=_2({inputs:{x:a},backend:n}),i=hl({inputs:{input:r},backend:n}),o=qh({inputs:{x:i},backend:n}),l=Vn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Lx({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var HK={kernelName:Yl,backendName:"cpu",kernelFunc:_2};function C2(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return jh({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let d=jh({inputs:{input:u},backend:n,attrs:{dim:a}});return o.push(d),d}),p=cl({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(u=>n.disposeIntermediateTensorInfo(u)),p}var jK={kernelName:Ql,backendName:"cpu",kernelFunc:C2};function qK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;ke(a,"pad");let o=s.map((y,b)=>y[0]+a.shape[b]+y[1]),l=s.map(y=>y[0]),p=n.data.get(a.dataId).values,u=w.sizeFromShape(a.shape),d=a.shape.length,h=w.computeStrides(a.shape),c=w.sizeFromShape(o),m=o.length,f=w.computeStrides(o),g=w.getTypedArrayFromDType(a.dtype,c);i!==0&&g.fill(i);for(let y=0;y<u;y++){let b=w.indexToLoc(y,d,h).map((v,I)=>v+l[I]),x=w.locToIndex(b,m,f);g[x]=p[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var E2={kernelName:Yi,backendName:"cpu",kernelFunc:qK},KK=At((e,t)=>Math.pow(e,t)),XK=qt(Qi,KK),ZK={kernelName:Qi,backendName:"cpu",kernelFunc:XK};function JK(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,o=a.map(g=>n.data.get(g.dataId).values),l=a.map(g=>g.shape),p=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[d,h,c]=e2(o,l,p,s.shape,s.dtype,u,i.shape),m=d.map(g=>n.makeTensorInfo([g.length],"int32",g)),f=n.makeTensorInfo(c,s.dtype,h);return m.concat([f])}var YK={kernelName:cc,backendName:"cpu",kernelFunc:JK};function QK(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[p,u]=t2(i,r.shape,r.dtype,o,a.shape,l,s.shape),d=n.makeTensorInfo([p.length],"int32",p),h=n.makeTensorInfo([u.length],r.dtype,u);return[d,h]}var e8={kernelName:mc,backendName:"cpu",kernelFunc:QK};function t8(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,p=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,h=o.map(g=>n.data.get(g.dataId).values),c=o.map(g=>g.shape),[m,f]=n2(p,a.shape,u,s.shape,s.dtype,d,i.shape,h,c,l);return n.makeTensorInfo(m,s.dtype,f)}var n8={kernelName:fc,backendName:"cpu",kernelFunc:t8};function r8(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Cx(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}var a8={kernelName:Bp,backendName:"cpu",kernelFunc:r8},s8=lt(no,e=>1/e),i8={kernelName:no,backendName:"cpu",kernelFunc:s8};function o8(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ke(a,"resizeBilinear");let l=w.computeStrides(a.shape),[p,u]=o,[d,h,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(w.sizeFromShape([d,p,u,m])),y=[s&&p>1?h-1:h,s&&u>1?c-1:c],b=[s&&p>1?p-1:p,s&&u>1?u-1:u],x=0,v=y[0]/b[0],I=y[1]/b[1];for(let N=0;N<d;N++)for(let C=0;C<p;C++){let E;i?E=v*(C+.5)-.5:E=v*C;let A=Math.max(0,Math.floor(E)),R=E-A,F=Math.min(h-1,Math.ceil(E)),S=N*l[0]+A*l[1],D=N*l[0]+F*l[1];for(let P=0;P<u;P++){let U;i?U=I*(P+.5)-.5:U=I*P;let G=Math.max(0,Math.floor(U)),K=U-G,j=Math.min(c-1,Math.ceil(U)),Z=S+G*l[2],ee=D+G*l[2],X=S+j*l[2],re=D+j*l[2];for(let te=0;te<m;te++){let ae=f[Z+te],oe=f[ee+te],we=f[X+te],ve=f[re+te],ce=ae+(we-ae)*K,Te=oe+(ve-oe)*K,Ee=ce+(Te-ce)*R;g[x++]=Ee}}}return n.makeTensorInfo([d,p,u,m],"float32",g)}var l8={kernelName:so,backendName:"cpu",kernelFunc:o8};function u8(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ke([s,a],"resizeBilinearGrad");let o=w.computeStrides(a.shape),[l,p,u,d]=a.shape,[,h,c]=s.shape,m=new Float32Array(l*p*u*d),f=[i&&h>1?p-1:p,i&&c>1?u-1:u],g=[i&&h>1?h-1:h,i&&c>1?c-1:c],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let I=0;I<l;I++){let N=I*o[0];for(let C=0;C<h;C++){let E=C*y,A=Math.floor(E),R=Math.min(Math.ceil(E),p-1),F=N+A*o[1],S=N+R*o[1],D=E-A,P=1-D;for(let U=0;U<c;U++){let G=U*b,K=Math.floor(G),j=Math.min(Math.ceil(G),u-1),Z=G-K,ee=1-Z,X=F+K*o[2],re=F+j*o[2],te=S+K*o[2],ae=S+j*o[2],oe=P*ee,we=P*Z,ve=D*ee,ce=D*Z;for(let Te=0;Te<d;Te++){let Ee=x[v++];m[X+Te]+=Ee*oe,m[re+Te]+=Ee*we,m[te+Te]+=Ee*ve,m[ae+Te]+=Ee*ce}}}}return n.makeTensorInfo([l,u,p,d],"float32",m)}var p8={kernelName:nu,backendName:"cpu",kernelFunc:u8};function d8(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ke(a,"resizeNearestNeighbor");let l=w.computeStrides(a.shape),[p,u]=o,[d,h,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(d*p*u*m),y=[s&&p>1?h-1:h,s&&u>1?c-1:c],b=[s&&p>1?p-1:p,s&&u>1?u-1:u],x=y[0]/b[0],v=y[1]/b[1],I=0;for(let N=0;N<d;N++){let C=N*l[0];for(let E=0;E<p;E++){let A=i?x*(E+.5):x*E,R=Math.min(h-1,s?Math.round(A):Math.floor(A));i&&(R=Math.max(0,R));let F=C+R*l[1];for(let S=0;S<u;S++){let D=i?v*(S+.5):v*S,P=Math.min(c-1,s?Math.round(D):Math.floor(D));i&&(P=Math.max(0,P));let U=F+P*l[2];for(let G=0;G<m;G++){let K=f[U+G];g[I++]=K}}}}return n.makeTensorInfo([d,p,u,m],a.dtype,g)}var h8={kernelName:ao,backendName:"cpu",kernelFunc:d8};function c8(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ke([s,a],"resizeNearestNeighborGrad");let o=w.computeStrides(a.shape),l=w.computeStrides(s.shape),[p,u,d,h]=a.shape,[,c,m]=s.shape,f=new Float32Array(p*u*d*h),g=n.data.get(s.dataId).values,y=[i&&c>1?u-1:u,i&&m>1?d-1:d],b=[i&&c>1?c-1:c,i&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],I=1/x,N=1/v,C=Math.ceil(I)*2+2,E=Math.ceil(N)*2+2;for(let A=0;A<p;A++){let R=A*o[0];for(let F=0;F<u;F++){let S=R+F*o[1],D=Math.floor(F*I),P=Math.floor(D-C/2);for(let U=0;U<d;U++){let G=S+U*o[2],K=Math.floor(U*N),j=Math.floor(K-E/2);for(let Z=0;Z<h;Z++){let ee=0;for(let X=0;X<C;X++){let re=X+P;if(re<0||re>=c)continue;let te=R+re*l[1],ae=re*x,oe=Math.min(u-1,i?Math.round(ae):Math.floor(ae));if(F===oe)for(let we=0;we<E;we++){let ve=we+j;if(ve<0||ve>=m)continue;let ce=te+ve*l[2],Te=ve*v,Ee=Math.min(d-1,i?Math.round(Te):Math.floor(Te));U===Ee&&(ee+=g[ce+Z])}}f[G+Z]=ee}}}}return n.makeTensorInfo(a.shape,a.dtype,f)}var m8={kernelName:tu,backendName:"cpu",kernelFunc:c8};function f8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;ke(a,"reverse");let i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(i===0)return Yr({inputs:{x:a},backend:n});let l=new Ot(a.shape,a.dtype),p=n.bufferSync(a);for(let u=0;u<l.size;u++){let d=l.indexToLoc(u),h=d.slice();o.forEach(c=>h[c]=a.shape[c]-1-h[c]),l.set(p.get(...h),...d)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var g8={kernelName:oo,backendName:"cpu",kernelFunc:f8},y8={kernelName:yu,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[p,u,d,h]=r.shape,[c,m]=T.getImageCenter(i,u,d),f=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<p;x++){let v=x*d*u*h;for(let I=0;I<u;I++){let N=I*(d*h);for(let C=0;C<d;C++){let E=C*h;for(let A=0;A<h;A++){let R=[p,I,C,A],F=R[2],S=R[1],D=(F-c)*y-(S-m)*g,P=(F-c)*g+(S-m)*y;D=Math.round(D+c),P=Math.round(P+m);let U=s;if(typeof s!="number"&&(A===3?U=f:U=s[A]),D>=0&&D<d&&P>=0&&P<u){let K=P*(d*h),j=D*h,Z=v+K+j+A;U=b[Z]}let G=v+N+E+A;l[G]=U}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},b8=lt(lo,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),x8={kernelName:lo,backendName:"cpu",kernelFunc:b8};function v8(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:p,strides:u,outputSize:d}=T.calculateShapes(s,a,i),h=!0,c=n.bufferSync(a),m=n.bufferSync(s),f=Fs(c,m,i,d,p,l,o,u,0,h);return n.makeTensorInfo(i,f.dtype,f.values)}var w8={kernelName:ru,backendName:"cpu",kernelFunc:v8};function k8(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function I8(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}function S8(e,t,n,r,a,s){let i=w.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let l=e.slice(o*r,(o+1)*r),p=o*a;for(let u=0;u<a;++u)i[p+u]=s==="left"?k8(l,t[u+p]):I8(l,t[u+p])}return i}function N8(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,p=S8(o,l,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",p)}var T8={kernelName:su,backendName:"cpu",kernelFunc:N8};function _8(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;ke([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,u=or(a.dtype,s.dtype),d=w.makeZerosTypedArray(w.sizeFromShape(a.shape),u),h=0,c=i===0||i>1||a.shape.length===1?1:w.sizeFromShape(a.shape.slice(1));for(let m=0;m<o.length;m++)for(let f=0;f<c;f++)o[m]===1?d[h++]=l[m]:d[h++]=p[m];return n.makeTensorInfo(a.shape,u,d)}var C8={kernelName:iu,backendName:"cpu",kernelFunc:_8},E8=T.SELU_SCALEALPHA,$8=T.SELU_SCALE,A8=lt(po,e=>e>=0?$8*e:E8*(Math.exp(e)-1)),F8={kernelName:po,backendName:"cpu",kernelFunc:A8},R8=lt(mo,e=>e<0?-1:e>0?1:0),D8={kernelName:mo,backendName:"cpu",kernelFunc:R8},M8=lt(ho,e=>Math.sin(e)),O8={kernelName:ho,backendName:"cpu",kernelFunc:M8},L8=lt(co,e=>Math.sinh(e)),z8={kernelName:co,backendName:"cpu",kernelFunc:L8},P8=11920928955078125e-23,Xw=Math.log(P8)+2,B8=lt(go,e=>{let t=e>-Xw,n=e<Xw,r=Math.exp(e),a;return n?a=r:t?a=e:a=Math.log(1+r),a}),W8={kernelName:go,backendName:"cpu",kernelFunc:B8};function V8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ke([a],"spaceToBatchND");let o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let p=E2.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),u=T.getReshaped(p.shape,s,o,!1),d=T.getPermuted(u.length,s.length,!1),h=T.getReshapedPermuted(p.shape,s,o,!1),c=xt({inputs:{x:p},backend:n,attrs:{shape:u}}),m=Mn({inputs:{x:c},backend:n,attrs:{perm:d}}),f=xt({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}var U8={kernelName:lu,backendName:"cpu",kernelFunc:V8};function G8(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[d,h,c,m,f]=s2(o,r.shape,r.dtype,l,a.dtype,p,u);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var H8={kernelName:Wp,backendName:"cpu",kernelFunc:G8};function j8(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[p,u,d]=i2(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(u,r.dtype,p),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}var q8={kernelName:pu,backendName:"cpu",kernelFunc:j8};function K8(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[p,u]=Ex(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(u,r.dtype,p)}var X8={kernelName:Vp,backendName:"cpu",kernelFunc:K8};function Z8(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[p,u]=Ex(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(u,r.dtype,p)}var J8={kernelName:Up,backendName:"cpu",kernelFunc:Z8};function Y8(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:p,sliceSize:u,strides:d,outputSize:h}=T.calculateShapes(s,a,o),c=!1,m=n.bufferSync(a),f;switch(s.dtype){case"bool":{let g=n.bufferSync(s),y=!!n.data.get(i.dataId).values[0];f=Fs(m,g,o,h,u,p,l,d,y,c);break}case"float32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Fs(m,g,o,h,u,p,l,d,y,c);break}case"int32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Fs(m,g,o,h,u,p,l,d,y,c);break}case"string":{let g=n.bufferSync(s),y=w.decodeString(n.data.get(i.dataId).values[0]);f=Fs(m,g,o,h,u,p,l,d,y,c);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,f.dtype,f.values)}var Q8={kernelName:du,backendName:"cpu",kernelFunc:Y8};function eX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),p=new Array(a.shape.length).fill(0),u=a.shape.slice();return l.map(d=>{let h=[...u];h[o]=d;let c=Ys({inputs:{x:a},backend:n,attrs:{begin:p,size:h}});return p[o]+=d,c})}var tX={kernelName:uu,backendName:"cpu",kernelFunc:eX},nX={kernelName:Gp,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;ke(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let o=a[i];s[i]=o*o}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},rX=lt(is,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),aX={kernelName:is,backendName:"cpu",kernelFunc:rX};function sX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:p,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=r;ke(a,"stridedSlice");let{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Gt.sliceInfo(a.shape,s,i,o,l,p,u,d,h),I;if(f)I=xt({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=Gt.computeOutShape(b,x,v),C=Ys({inputs:{x:a},backend:n,attrs:{begin:b,size:N}});I=xt({inputs:{x:C},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(C)}else{let N=n.bufferSync(a),C=u2(c,N,v,b);I=n.makeTensorInfo(m,C.dtype,C.values)}return I}var iX={kernelName:hu,backendName:"cpu",kernelFunc:sX};function oX(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:p}=r,{data:u,dataSplits:d}=t,h=n.data.get(u.dataId).values,c=n.data.get(d.dataId).values,[m,f]=$x(h,c,a,s,i,o,l,p);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",f)]}var lX={kernelName:jp,backendName:"cpu",kernelFunc:oX};function uX(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[p,u,d]=Ax(o,l,a),h=u.length;return[n.makeTensorInfo([h,2],"int32",p),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var pX={kernelName:qp,backendName:"cpu",kernelFunc:uX};function dX(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(s.dataId).values,o=Fx(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var hX={kernelName:Kp,backendName:"cpu",kernelFunc:dX},cX=lt(ko,e=>Math.tan(e)),mX={kernelName:ko,backendName:"cpu",kernelFunc:cX},fX=lt(Io,e=>Math.tanh(e)),gX={kernelName:Io,backendName:"cpu",kernelFunc:fX};function yX(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:p,outputSize:u}=T.calculateShapes(s,a,r.shape),d=!1,h=n.bufferSync(a),c=n.bufferSync(s),m=n.bufferSync(r),f=Fs(h,c,r.shape,u,l,o,i,p,m,d);return n.makeTensorInfo(r.shape,f.dtype,f.values)}var bX={kernelName:au,backendName:"cpu",kernelFunc:yX};function xX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;ke(a,"tile");let i=d2(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var vX={kernelName:ss,backendName:"cpu",kernelFunc:xX};function wX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;ke(a,"topk");let o=n.data.get(a.dataId).values,[l,p]=c2(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(p.shape,p.dtype,p.values)]}var kX={kernelName:cu,backendName:"cpu",kernelFunc:wX};function IX(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:p}=n,[u,d,h,c]=a.shape,[m,f]=p??[d,h],g=[u,m,f,c],y=w.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],I=w.computeStrides(g),N=I[0],C=I[1],E=I[2],A=w.getTypedArrayFromDType(a.dtype,w.sizeFromShape(g));A.fill(l);let R=r.data.get(a.dataId).values,F=r.data.get(s.dataId).values;for(let S=0;S<u;++S){let D=s.shape[0]===1?F:F.subarray(S*8,S*8+8);for(let P=0;P<m;++P)for(let U=0;U<f;++U)for(let G=0;G<c;++G){let K,j=D[6]*U+D[7]*P+1;if(j===0)continue;let Z=(D[0]*U+D[1]*P+D[2])/j,ee=(D[3]*U+D[4]*P+D[5])/j,X=Zw(Z,h,o),re=Zw(ee,d,o);switch(i){case"nearest":K=EX(R,d,h,b,x,v,S,re,X,G,l);break;case"bilinear":K=$X(R,d,h,b,x,v,S,re,X,G,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let te=S*N+P*C+U*E+G;A[te]=K}return r.makeTensorInfo(g,a.dtype,A)}return{dataId:r.write(A,g,a.dtype),shape:a.shape,dtype:a.dtype}}var SX={kernelName:mu,backendName:"cpu",kernelFunc:IX};function Zw(e,t,n){switch(n){case"reflect":return NX(e,t);case"wrap":return TX(e,t);case"nearest":return CX(e,t);case"constant":default:return _X(e)}}function NX(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return w.clamp(0,n,t-1)}function TX(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{let r=t-1;n-=t*Math.trunc(n/r)}return w.clamp(0,n,t-1)}function _X(e,t){return e}function CX(e,t){return w.clamp(0,e,t-1)}function Ju(e,t,n,r,a,s,i,o,l,p,u){let d=i*r+o*a+l*s+p;return 0<=o&&o<t&&0<=l&&l<n?e[d]:u}function EX(e,t,n,r,a,s,i,o,l,p,u){let d=Math.round(o),h=Math.round(l);return Ju(e,t,n,r,a,s,i,d,h,p,u)}function $X(e,t,n,r,a,s,i,o,l,p,u){let d=Math.floor(o),h=Math.floor(l),c=d+1,m=h+1,f=(m-l)*Ju(e,t,n,r,a,s,i,d,h,p,u)+(l-h)*Ju(e,t,n,r,a,s,i,d,m,p,u),g=(m-l)*Ju(e,t,n,r,a,s,i,c,h,p,u)+(l-h)*Ju(e,t,n,r,a,s,i,c,m,p,u);return(c-o)*f+(o-d)*g}function AX(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;ke(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:p}=Dx(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([p.length],"int32",p)]}var FX={kernelName:Xp,backendName:"cpu",kernelFunc:AX};function RX(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),p=0;for(let c=0;c<i;c++)c!==s&&(l[p++]=a.shape[c]);let u=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let h=new Array(o);for(let c=0;c<h.length;c++){u[s]=c;let m=Ys({inputs:{x:a},backend:n,attrs:{begin:u,size:d}});h[c]=xt({inputs:{x:m},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(m)}return h}var DX={kernelName:fu,backendName:"cpu",kernelFunc:RX};function MX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;ke(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,p=[],u=[],d=o-l,h=s;for(let m=0;m<d;++m){let f=jh({inputs:{input:h},backend:n,attrs:{dim:m+1}});h=f,u.push(f)}for(let m=0;m<i;++m){let f=w.createScalarValue(m,"int32"),g=n.makeTensorInfo([],"int32",f),y=DN({inputs:{a:g,b:h},backend:n}),b=Qa({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=km({inputs:{a:b,b:a},backend:n}),v=Nd({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});p.push(v),u.push(g),u.push(y),u.push(b),u.push(x),u.push(v)}let c=C2({inputs:p,backend:n,attrs:{axis:0}});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var OX={kernelName:Zp,backendName:"cpu",kernelFunc:MX},LX=[$j,u6,Fj,Dj,f6,Oj,zj,Bj,Vj,Gj,jj,Kj,Zj,Qj,tq,aq,iq,lq,pq,Cj,hq,mq,gq,y6,bq,c6,x6,vq,p6,kq,Sq,Nq,_q,Eq,Aq,Rq,Mq,Lq,Pq,Wq,Uq,Hq,qq,Xq,Zq,Yq,e5,n5,r5,a5,s5,o5,p5,wj,h5,v6,v5,w6,w5,I6,_5,C5,$5,N6,_6,F5,D5,O5,z5,E6,A6,d6,B5,Iq,V5,G5,j5,kj,R6,M6,K5,L6,Z5,Q5,tK,aK,iK,lK,uK,P6,dK,cK,fK,yK,xK,wK,IK,W6,NK,CK,FK,U6,H6,MK,zK,WK,q6,UK,HK,jK,E2,ZK,Sj,Z6,YK,e8,n8,a8,h6,Gf,i8,Nj,Tj,_j,l8,p8,h8,m8,g8,y8,x8,sj,w8,T8,C8,F8,oj,D8,O8,z8,lj,$K,W8,U8,H8,q8,X8,J8,Q8,tX,dj,nX,cj,fj,aX,iX,lX,pX,hX,xj,l5,mX,gX,bX,vX,kX,SX,K6,FX,DX,OX,GK];for(let e of LX)Jp(e);var $2={};De($2,{assertNotComplex:()=>$u,bindCanvasToFramebuffer:()=>KX,bindColorTextureToFramebuffer:()=>bh,bindTextureToProgramUniformSampler:()=>j2,bindTextureUnit:()=>U2,bindVertexBufferToProgramAttribute:()=>jf,callAndCheck:()=>me,canBeRepresented:()=>F2,createFragmentShader:()=>M2,createFramebuffer:()=>V2,createProgram:()=>O2,createStaticIndexBuffer:()=>P2,createStaticVertexBuffer:()=>z2,createTexture:()=>B2,createVertexShader:()=>D2,getBatchDim:()=>Qs,getExtensionOrThrow:()=>Yu,getFramebufferErrorMessage:()=>q2,getMaxTexturesInShader:()=>J2,getNumChannels:()=>jX,getProgramUniformLocation:()=>H2,getProgramUniformLocationOrThrow:()=>G2,getRowsCols:()=>ei,getShapeAs3D:()=>ep,getTextureShapeFromLogicalShape:()=>X2,getWebGLDisjointQueryTimerVersion:()=>Y2,getWebGLErrorMessage:()=>R2,getWebGLMaxTextureSize:()=>Z2,hasExtension:()=>ar,isCapableOfRenderingToFloatTexture:()=>Q2,isDownloadFloatTextureEnabled:()=>eT,isReshapeFree:()=>wp,isWebGLFenceEnabled:()=>tT,isWebGLVersionEnabled:()=>Kf,linkProgram:()=>L2,logShaderSourceAndInfoLog:()=>Px,resetMaxTextureSize:()=>XX,resetMaxTexturesInShader:()=>ZX,unbindColorTextureFromFramebuffer:()=>qf,unbindTextureUnit:()=>qX,validateFramebuffer:()=>Qu,validateProgram:()=>yh,validateTextureSize:()=>W2});var $s={},oh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function A2(e,t){$s[e]=t}function Rr(e,t){if(!(e in $s)||t!=null){let r=PX(e,t);if(r!==null)$s[e]=r;else return console.log("Could not get context for WebGL version",e),null}let n=$s[e];return n==null||n.isContextLost()?(delete $s[e],Rr(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),$s[e])}function zX(e){if(!H().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function PX(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t??zX(e);return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete $s[e]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(oh.failIfMajorPerformanceCaveat=!1),e===1?n.getContext("webgl",oh)||n.getContext("experimental-webgl",oh):n.getContext("webgl2",oh)}var vp;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(vp||(vp={}));var rr;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(rr||(rr={}));var un;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(un||(un={}));function Td(e,t){return[t,e]}function BX(e,t){return e*t}function lh(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function Eu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function WX(e,t){let[n,r]=Eu(e,t);return n*r*4}function zx(e,t){let n=e,r,a,s,i,o,l,p,u,d,h;return H().getNumber("WEBGL_VERSION")===2?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,p=4,u=1,d=n.HALF_FLOAT,h=n.FLOAT,l=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,p=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,h=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:p,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:h}}function me(e,t){let n=t();return H().getBool("DEBUG")&&VX(e),n}function VX(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+R2(e,t))}var UX=596e-10,GX=65504;function F2(e){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||UX<Math.abs(e)&&Math.abs(e)<GX)}function R2(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Yu(e,t){return ka(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function D2(e,t){let n=ka(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(me(e,()=>e.shaderSource(n,t)),me(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function M2(e,t){let n=ka(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(me(e,()=>e.shaderSource(n,t)),me(e,()=>e.compileShader(n)),H().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw Px(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var HX=/ERROR: [0-9]+:([0-9]+):/g;function Px(e,t){let n=HX.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],a=e.split(`
`),s=a.length.toString().length+2,i=a.map((d,h)=>w.rightPad((h+1).toString(),s)+d),o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);let l=i.slice(0,r-1),p=i.slice(r-1,r),u=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(p[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function O2(e){return ka(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function L2(e,t){if(me(e,()=>e.linkProgram(t)),!H().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function yh(e,t){if(me(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function z2(e,t){let n=ka(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return me(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),me(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function P2(e,t){let n=ka(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return me(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),me(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function jX(){return H().getNumber("WEBGL_VERSION")===2?1:4}function B2(e){return ka(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function W2(e,t){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function V2(e){return ka(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function jf(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(me(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),me(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),me(e,()=>e.enableVertexAttribArray(o)),!0)}function U2(e,t,n){K2(e,n),me(e,()=>e.activeTexture(e.TEXTURE0+n)),me(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function qX(e,t){K2(e,t),me(e,()=>e.activeTexture(e.TEXTURE0+t)),me(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function G2(e,t,n){return ka(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function H2(e,t,n){return e.getUniformLocation(t,n)}function j2(e,t,n,r){me(e,()=>U2(e,t,r)),me(e,()=>e.uniform1i(n,r))}function KX(e){me(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),me(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),me(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function bh(e,t,n){me(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),me(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function qf(e,t){me(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),me(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Qu(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+q2(e,t))}function q2(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ka(e,t,n){let r=me(e,()=>t());if(r==null)throw new Error(n);return r}function K2(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let a=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${a}.`)}}function Qs(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function ei(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ep(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Qs(e),...ei(e)]),t}function X2(e,t=!1){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n=n*2,r=r*2,e=e.map((o,l)=>l>=e.length-2?w.nearestLargerEven(e[l]):e[l]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let a=w.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:e.length===2&&e[0]<=n&&e[1]<=n?s=e:e.length===3&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=s!=null&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let o=Qs(e),l=2,p=2;e.length&&([l,p]=ei(e)),a=o*(l/2)*(p/2),s=w.sizeToSquarishShape(a).map(u=>u*2)}else s=w.sizeToSquarishShape(a);return s}function uh(e){return e%2===0}function wp(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||uh(n)&&uh(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&uh(e[0])&&uh(t[0])}var xh,vh;function Z2(e){if(xh==null){let t=Rr(e);xh=t.getParameter(t.MAX_TEXTURE_SIZE)}return xh}function XX(){xh=null}function ZX(){vh=null}function J2(e){if(vh==null){let t=Rr(e);vh=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,vh)}function Y2(e){if(e===0)return 0;let t,n=Rr(e);return ar(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:ar(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function ar(e,t){return e.getExtension(t)!=null}function Kf(e){try{if(Rr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Q2(e){if(e===0)return!1;let t=Rr(e);if(e===1){if(!ar(t,"OES_texture_float"))return!1}else if(!ar(t,"EXT_color_buffer_float"))return!1;return Xf(t)}function eT(e){if(e===0)return!1;let t=Rr(e);if(e===1){if(!ar(t,"OES_texture_float")||!ar(t,"WEBGL_color_buffer_float"))return!1}else{if(ar(t,"EXT_color_buffer_float"))return Xf(t);let n="EXT_color_buffer_half_float";if(ar(t,n)){let r=t.getExtension(n);return JX(t,r)}return!1}return Xf(t)}function Xf(e){let t=zx(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function JX(e,t){let n=zx(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}function tT(e){return e!==2?!1:Rr(e).fenceSync!=null}function $u(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ie=H();Ie.registerFlag("HAS_WEBGL",()=>Ie.getNumber("WEBGL_VERSION")>0);Ie.registerFlag("WEBGL_VERSION",()=>Kf(2)?2:Kf(1)?1:0);Ie.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ie.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ie.get("WEBGL_VERSION")===2);Ie.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ie.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ie.registerFlag("WEBGL_PACK",()=>Ie.getBool("HAS_WEBGL"));Ie.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_CLIP",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_REDUCE",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_CONV_IM2COL",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Z2(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>J2(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Ie.getNumber("WEBGL_VERSION");return e===0?0:Y2(e)});Ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ie.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ed.isMobile());Ie.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Q2(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ie.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ie.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ie.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>eT(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_FENCE_API_ENABLED",()=>tT(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ie.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ie.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Ie.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ed.isMobile()?1:-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Ie.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ie.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ie.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ie.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ie.registerFlag("WEBGL_EXP_CONV",()=>!1);Ie.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ie.getBool("IS_TEST"));Ie.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ie.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ie.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ie.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Cn(){let e,t,n,r,a,s,i,o,l,p;return H().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=H().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",p=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,p=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:p}}function Ao(e,t,n="index"){let r=w.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / ${a}`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a}`:`index -= ${e[s]} * ${a}`;return`${i}; ${o};`}).join("")}function Im(e,t,n="index"){let r=w.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function YX(e,t){let n=e.length,r=e.map(s=>`${t}[${s}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}function QX(e,t,n="index"){let r=e.map((s,i)=>i),a=YX(r,t);return a.map((s,i)=>{let o=`int ${e[i]} = ${n} / ${a[i]}`,l=i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`;return`${o}; ${l};`}).join("")}function Bx(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Wx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var nT=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:rT}=T;function e7(e,t,n){let r=[];if(e.forEach(h=>{let c=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${c>1?`[${c}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Vx(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${h.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${h.name}Shape;`);break}r.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{r.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let a=r.join(`
`),s=e.map(h=>t7(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=Cn(),l=a7(o),p,u,d=o7(o);return t.isPacked?(p=n7(t.logicalShape,i,n.enableShapeUniforms),u=i7(o)):(p=r7(t.logicalShape,i,n.enableShapeUniforms),u=s7(o)),n.packedInputs&&(d+=d7),[d,l,u,a,p,s,n.userCode].join(`
`)}function Au(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return I7(e,t);case 1:return N7(e,t);case 2:return _7(e,t);case 3:return E7(e,t);case 4:return A7(e,t);case 5:return F7(e);case 6:return R7(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function aT(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return k7(e);case 1:return S7(e,t);case 2:return T7(e,t);case 3:return C7(e,t);default:return $7(e,t)}}function t7(e,t,n=!1,r){let a="";n?a+=aT(e,r):a+=Au(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(n?a+=D7(e,t):a+=M7(e,t)),a}function n7(e,t,n){switch(e.length){case 0:return sT();case 1:return h7(e,t,n);case 2:return v7(e,t,n);case 3:return m7(e,t,n);default:return g7(e,t,n)}}function r7(e,t,n){switch(e.length){case 0:return sT();case 1:return c7(e,t,n);case 2:return w7(e,t,n);case 3:return f7(e,t,n);case 4:return y7(e,t,n);case 5:return b7(e,t);case 6:return x7(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function a7(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function s7(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function i7(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function o7(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${l7}
    ${u7}
    ${p7}
  `}var l7=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,u7=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,p7=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,d7=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function sT(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function h7(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function c7(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function m7(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function f7(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Im(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=Ao(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function g7(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let p=2;p<e.length-1;p++)i*=e[e.length-p-1],o=`
      int b${p} = index / ${i};
      index -= b${p} * ${i};
    `+o,l=`b${p}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${l});
    }
  `}function y7(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Im(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=Ao(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function b7(e,t){let n=Ao(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function x7(e,t){let n=Ao(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function v7(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function w7(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Fo(e){return`offset${e}`}function k7(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Cn();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function I7(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(a===1&&s===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Fo(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function S7(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=Cn();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${n}, uv);
    }
  `}function N7(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Fu(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(i===1&&s===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Fo(n);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${n}, uv);
      }
    `:s===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function T7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=Cn();if(s!=null&&w.arraysEqual(n,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let p=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${p[0]}, ${p[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function _7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(s!=null&&w.arraysEqual(n,s)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let h=s[0],c=s[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(n),l=i;if(l.length<n.length){let h=Ru(e,l),c=["row","col"];return`
      ${Au(h,t)}
      float ${a}(int row, int col) {
        return ${a}(${Du(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Fu(e)}
      }
    `;let p=s[0],u=s[1],d=Fo(r);return u===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `:p===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${p}, ${u}, index);
    return sampleTexture(${r}, uv);
  }
`}function C7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(n[0]===1){let h=n.slice(1),c=[1,2],m=Ru(e,h),f=["b","row","col"];return`
        ${aT(m,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Du(f,c)});
        }
      `}let o=Cn();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;let l=i[0],p=i[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${p}, ${d}, ${u}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function E7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=w.squeezeShape(n),p=o;if(p.length<n.length){let f=Ru(e,p),g=["row","col","depth"];return`
        ${Au(f,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Du(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Fu(e)}
      }
    `;let u=e.shapeInfo.texShape,d=u[0],h=u[1],c=e.shapeInfo.flatOffset;if(h===s&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(h===i&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;let m=Fo(r);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${m};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${r}, uv);
      }
  `}function $7(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=Cn();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],p=l[0],u=l[1],d=Math.ceil(s[i-1]/2),h=d*Math.ceil(s[i-2]/2),c="int b, int row, int col",m=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let f=2;f<i-1;f++)c=`int b${f}, `+c,h*=s[i-f-1],m=`b${f} * ${h} + `+m;return`
    vec4 ${r}(${c}) {
      int index = ${m};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${p});
      return ${a.texture2D}(${n}, uv);
    }
  `}function A7(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:p}=w.squeezeShape(n);if(l.length<n.length){let b=Ru(e,l),x=["row","col","depth","depth2"];return`
      ${Au(b,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Du(x,p)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${Fu(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],c=d[1],m=`int stride2 = ${r}Shape[3];`,f=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&u==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${m}
        ${f}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===s&&u==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=Fo(r);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${f}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${h}, ${c}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function F7(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:p}=w.squeezeShape(t);if(l.length<t.length){let f=Ru(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${Au(f)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Du(g,p)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${a})) +
          depth3;
        ${Fu(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],c=d[1];if(c===o&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(c===a&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Fo(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${a} + depth3 + ${m};
      vec2 uv = uvFromFlat(${h}, ${c}, index);
      return sampleTexture(${n}, uv);
    }
  `}function R7(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=w.squeezeShape(t);if(a.length<t.length){let g=Ru(e,a),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Au(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Du(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,p=t[2]*l,u=t[1]*p;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${p}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Fu(e)}
      }
    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,c=h[0],m=h[1];if(m===u&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${p}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Fo(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${p} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${f};
      vec2 uv = uvFromFlat(${c}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Fu(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function D7(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=rT(e.shapeInfo.logicalShape,t.logicalShape),l=ct(i),p=i-s,u,d=["x","y","z","w","u","v"];s===0?u="":i<2&&o.length>=1?u="coords = 0;":u=o.map(g=>`coords.${d[g+p]} = 0;`).join(`
`);let h="";i<2&&s>0?h="coords":h=e.shapeInfo.logicalShape.map((g,y)=>`coords.${d[y+p]}`).join(", ");let c="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,f=w.sizeFromShape(t.logicalShape)===1;if(s===1&&!m&&!f)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!f)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${r}(${h});
      ${c}
    }
  `}function M7(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,s))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let p=ct(l),u=rT(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,h,c=["x","y","z","w","u","v"];o===0?h="":l<2&&u.length>=1?h="coords = 0;":h=u.map(f=>`coords.${c[f+d]} = 0;`).join(`
`);let m="";return l<2&&o>0?m="coords":m=e.shapeInfo.logicalShape.map((f,g)=>`coords.${c[g+d]}`).join(", "),`
    float ${a}() {
      ${p} coords = getOutputCoords();
      ${h}
      return get${r}(${m});
    }
  `}function ct(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Vx(e,t,n){let{newShape:r,keptDims:a}=w.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):r,l=!e&&s>1&&!w.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function Ru(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Du(e,t){return t.map(n=>e[n]).join(", ")}function O7(e,t,n,r){let a=n.map((u,d)=>{let h={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(h.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[d],shapeInfo:h}}),s=a.map(u=>u.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=e7(a,i,t),l=M2(e.gl,o),p=e.createProgram(l);return H().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:p,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(p),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:p,inShapeInfos:s,outShapeInfo:i},iT(e,t,p)))}function iT(e,t,n){let r=[],a=[],s,i,o,l=null,p=null;p=e.getUniformLocation(n,"NAN",!1),H().getNumber("WEBGL_VERSION")===1&&(l=e.getUniformLocation(n,"INFINITY",!1));let u=!1;for(let d of t.variableNames){let h={name:d,uniform:e.getUniformLocation(n,d,u),offset:e.getUniformLocation(n,`offset${d}`,u)};t.enableShapeUniforms&&(h.shape=e.getUniformLocation(n,`${d}Shape`,u),h.texShape=e.getUniformLocation(n,`${d}TexShape`,u)),r.push(h)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",u),o=e.getUniformLocation(n,"outShapeStrides",u),i=e.getUniformLocation(n,"outTexShape",u)),t.customUniforms)for(let d of t.customUniforms)a.push(e.getUniformLocation(n,d.name,u));return{variablesLocations:r,customUniformLocations:a,infLoc:l,nanLoc:p,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function Jw(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let a=n.logicalShape,s=t[r],i=s.shape;if(!w.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,l=s.isUniform?null:s.texData.texShape;if(!w.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function L7(e,t,n,r,a){t.program.enableShapeUniforms||(Jw(t.inShapeInfos,n),Jw([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),H().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){let p=n[l],{uniform:u,offset:d,shape:h,texShape:c}=t.variablesLocations[l];if(h){let{uniformShape:m}=Vx(t.program.packedInputs,p.shape,p.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break}}if(c&&e.gl.uniform2i(c,p.texData.texShape[0],p.texData.texShape[1]),u!=null){if(p.isUniform){if(w.sizeFromShape(p.shape)<2)e.gl.uniform1f(u,p.uniformValues[0]);else{let m=p.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(u,m)}continue}p.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,p.texData.slice.flatOffset),e.setInputMatrixTexture(p.texData.texture.texture,u,l)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break}if(t.outShapeStridesLocation){let l=w.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let l=0;l<t.program.customUniforms.length;++l){let p=t.program.customUniforms[l],u=t.customUniformLocations[l],d=a[l];if(p.type==="float")e.gl.uniform1fv(u,d);else if(p.type==="vec2")e.gl.uniform2fv(u,d);else if(p.type==="vec3")e.gl.uniform3fv(u,d);else if(p.type==="vec4")e.gl.uniform4fv(u,d);else if(p.type==="int")e.gl.uniform1iv(u,d);else if(p.type==="ivec2")e.gl.uniform2iv(u,d);else if(p.type==="ivec3")e.gl.uniform3iv(u,d);else if(p.type==="ivec4")e.gl.uniform4iv(u,d);else throw Error(`uniform type ${p.type} is not supported yet.`)}e.executeProgram()}function z7(e,t,n){let r="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:p,uniformShape:u,keptDims:d}=Vx(e.packedInputs,i.shape,l),h="",c="",m="";if(u.length===1&&e.packedInputs){let I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];h=`${I[0]>1}_${I[1]>1}`}else if(u.length===2&&!e.packedInputs)c=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let I=w.computeStrides(u);m=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}let f=i.shape.length,g=u.length===2&&w.arraysEqual(i.shape,l),y=w.sizeFromShape(i.shape)===1,b=T.getBroadcastDims(i.shape,n.shape),x=!e.packedInputs&&f===n.shape.length&&w.arraysEqual(l,n.texData.texShape),v=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${f}_${x}_${p?d:""}_${u.length}_${y}_${b}_${g}_${h}_${c}_${m}_${v}_${o}`}else{let l=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${l}_${o}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${H().getNumber("WEBGL_VERSION")}`,s}function gn(e){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var P7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=vp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Cn();this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Im(["r","c","d"],e):Ao(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},B7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=vp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Cn();this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Im(["r","c","d"],e):Ao(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},W7=class{constructor(e){this.variableNames=["A"],this.outTexUsage=rr.DOWNLOAD;let t=Cn();this.outputShape=e,this.userCode=`
      ${nT}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},V7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=rr.DOWNLOAD;let t=Cn();this.outputShape=e,this.userCode=`
      ${nT}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},U7={R:0,G:1,B:2,A:3},Yw=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=Cn();this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let o=n[i];s+=`
          if(offset == ${i}) {
            result = values[${U7[o]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Wx():Bx(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${s}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}},G7=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Cn();this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Wx():Bx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${a};
        }
    `}},oT={};De(oT,{bindVertexProgramAttributeStreams:()=>gT,createBufferFromOutputTexture:()=>xT,createFloat16MatrixTexture:()=>hT,createFloat16PackedMatrixTexture:()=>fT,createFloat32MatrixTexture:()=>dT,createIndexBuffer:()=>pT,createPackedMatrixTexture:()=>mT,createUnsignedBytesMatrixTexture:()=>cT,createVertexBuffer:()=>uT,createVertexShader:()=>lT,downloadByteEncodedFloatMatrixFromOutputTexture:()=>wT,downloadFloat32MatrixFromBuffer:()=>vT,downloadMatrixFromPackedOutputTexture:()=>IT,downloadPackedMatrixFromBuffer:()=>kT,getInternalFormatForFloat16MatrixTexture:()=>Gx,getInternalFormatForFloat16PackedMatrixTexture:()=>qx,getInternalFormatForFloat32MatrixTexture:()=>Ux,getInternalFormatForPackedMatrixTexture:()=>jx,getInternalFormatForUnsignedBytesMatrixTexture:()=>Hx,uploadDenseMatrixToTexture:()=>yT,uploadPixelDataToTexture:()=>bT});function lT(e){let t=Cn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return D2(e,n)}function uT(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return z2(e,t)}function pT(e){let t=new Uint16Array([0,1,2,2,1,3]);return P2(e,t)}function _d(e,t,n,r,a,s){W2(t,n);let i=B2(e),o=e.TEXTURE_2D;return me(e,()=>e.bindTexture(o,i)),me(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),me(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),me(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),me(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),H().getNumber("WEBGL_VERSION")===1?me(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):me(e,()=>e.texStorage2D(o,1,r,t,n)),me(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function Ux(e){return e.internalFormatFloat}function dT(e,t,n,r){let[a,s]=Td(t,n);return _d(e,a,s,Ux(r),r.textureFormatFloat,e.FLOAT)}function Gx(e){return e.internalFormatHalfFloat}function hT(e,t,n,r){let[a,s]=Td(t,n);return _d(e,a,s,Gx(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Hx(e){return e.downloadTextureFormat}function cT(e,t,n,r){let[a,s]=Td(t,n);return _d(e,a,s,Hx(r),e.RGBA,e.UNSIGNED_BYTE)}function jx(e){return e.internalFormatPackedFloat}function mT(e,t,n,r){let[a,s]=Eu(t,n);return _d(e,a,s,jx(r),e.RGBA,e.FLOAT)}function qx(e){return e.internalFormatPackedHalfFloat}function fT(e,t,n,r){let[a,s]=Eu(t,n);return _d(e,a,s,qx(r),e.RGBA,r.textureTypeHalfFloat)}function gT(e,t,n){return me(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),jf(e,t,"clipSpacePos",n,3,20,0)&&jf(e,t,"uv",n,2,20,12)}function yT(e,t,n,r,a,s){me(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),H().getNumber("WEBGL_VERSION")===2?me(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):me(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),me(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function bT(e,t,n){me(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?H().getNumber("WEBGL_VERSION")===2?me(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):me(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):H().getNumber("WEBGL_VERSION")===2?me(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):me(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),me(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function xT(e,t,n,r){let a=e.createBuffer();me(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=4*4*t*n;return me(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),me(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),me(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function vT(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function wT(e,t,n,r){let[a,s]=Td(t,n),i=4,o=new Uint8Array(BX(t*n,i));return me(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function kT(e,t,n,r,a,s,i,o){let l=e,p=new Float32Array(WX(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,p),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),p}function IT(e,t,n){let r=new Float32Array(t*n*4);return me(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}var wh=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=H().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,A2(t,e)):this.gl=Rr(t),e=this.gl,H().getNumber("WEBGL_VERSION")===2){let a=e;this.createVertexArray=()=>me(a,()=>a.createVertexArray()),this.bindVertexArray=s=>me(a,()=>a.bindVertexArray(s)),this.deleteVertexArray=s=>me(a,()=>a.deleteVertexArray(s)),this.getVertexArray=()=>me(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(e!=null){let a=e.getExtension("OES_vertex_array_object");if(a==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>me(e,()=>a.createVertexArrayOES()),this.bindVertexArray=s=>me(e,()=>a.bindVertexArrayOES(s)),this.deleteVertexArray=s=>me(e,()=>a.deleteVertexArrayOES(s)),this.getVertexArray=()=>me(e,()=>e.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),H().getNumber("WEBGL_VERSION")===1){let a="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=Yu(this.gl,a),ar(this.gl,s))this.textureHalfFloatExtension=Yu(this.gl,s);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ar(this.gl,r))this.colorBufferHalfFloatExtension=Yu(this.gl,r);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ar(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(ar(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=uT(this.gl),this.indexBuffer=pT(this.gl),this.framebuffer=V2(this.gl),this.textureConfig=zx(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;me(e,()=>e.finish()),me(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),me(e,()=>e.deleteFramebuffer(this.framebuffer)),me(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),me(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),me(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),dT(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),hT(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),cT(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),bT(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),yT(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),fT(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),mT(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(qf(this.gl,this.framebuffer),this.outputTexture=null),me(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>wT(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return kT(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return vT(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=xT(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(H().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=r.clientWaitSync(a,0,0);return s===r.ALREADY_SIGNALED||s===r.CONDITION_SATISFIED},t=a}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>IT(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=lT(t));let n=O2(t);me(t,()=>t.attachShader(n,this.vertexShader)),me(t,()=>t.attachShader(n,e)),L2(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&yh(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;me(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),gT(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(me(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&yh(this.gl,this.program),me(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?G2(this.gl,e,t):H2(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),me(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),j2(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=Eu(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&yh(this.gl,this.program),Qu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}me(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),me(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Yu(this.gl,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=H7(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in H().platform&&(n=H().platform.setTimeoutCustom.bind(H().platform)),w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bh(this.gl,e,this.framebuffer),this.debug&&Qu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Qu(this.gl)):qf(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;bh(r,e,this.framebuffer),this.debug&&Qu(r),this.outputTexture=e,me(r,()=>r.viewport(0,0,t,n)),me(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),me(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function H7(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:j7,bincountImpl:ST,bincountReduceImpl:q7,bitwiseAndImpl:K7,castImpl:X7,ceilImpl:Z7,concatImpl:J7,equalImpl:Y7,expImpl:Q7,expm1Impl:eZ,floorImpl:tZ,gatherNdImpl:nZ,gatherV2Impl:rZ,greaterImpl:aZ,greaterEqualImpl:sZ,lessImpl:iZ,lessEqualImpl:oZ,linSpaceImpl:lZ,logImpl:uZ,maxImpl:pZ,maximumImpl:dZ,minimumImpl:hZ,multiplyImpl:cZ,negImpl:mZ,notEqualImpl:fZ,prodImpl:gZ,raggedGatherImpl:yZ,raggedRangeImpl:bZ,raggedTensorToTensorImpl:xZ,rangeImpl:vZ,rsqrtImpl:wZ,scatterImpl:kZ,sigmoidImpl:IZ,simpleAbsImpl:NT,sliceImpl:SZ,sparseFillEmptyRowsImpl:NZ,sparseReshapeImpl:TZ,sparseSegmentReductionImpl:TT,sqrtImpl:_Z,staticRegexReplaceImpl:CZ,stridedSliceImpl:EZ,stringNGramsImpl:$Z,stringSplitImpl:AZ,stringToHashBucketFastImpl:FZ,subImpl:RZ,tileImpl:DZ,topKImpl:MZ,transposeImpl:Kx,uniqueImpl:OZ}=kx;function _T(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function vn(e,t){return t===1?[e]:_T(e,t)}function LZ(e,t){if(e===1)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var zZ=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=gn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=vn("rc",this.rank),n=ct(this.rank),r=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${n===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)a=`${e[e.length-1-s]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},CT=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);let n="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2===1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+=`
        ${a}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${PZ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Wx():Bx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function PZ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?QX(["r","c","d"],"inputShape"):Ao(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var BZ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r=e0(t,n),a=t0(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s=Qw(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[a].pop();return this.usedTextures[a].push(o),o}let i;return r===un.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===un.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===un.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===un.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===un.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(this.freeTextures==null)return;let a=e0(n,r),s=t0(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Qw(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=H().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],p=l&&l.indexOf(e);if(p==null||p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[p]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function WZ(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Qw(e,t,n,r,a){let s=VZ(t,r),i;if(a){let[l,p]=Eu(e[0],e[1]);i=l*p}else{let[l,p]=Td(e[0],e[1]);i=l*p}let o=WZ(n,s);return i*o}function VZ(e,t){switch(e){case un.PACKED_2X2_FLOAT32:return jx(t);case un.PACKED_2X2_FLOAT16:return qx(t);case un.UNPACKED_FLOAT32:return Ux(t);case un.UNPACKED_FLOAT16:return Gx(t);case un.PACKED_4X1_UNSIGNED_BYTE:return Hx(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function UZ(e){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?un.PACKED_2X2_FLOAT32:un.UNPACKED_FLOAT32:e?un.PACKED_2X2_FLOAT16:un.UNPACKED_FLOAT16}function e0(e,t){if(e===rr.UPLOAD)return un.PACKED_2X2_FLOAT32;if(e===rr.RENDER||e==null)return UZ(t);if(e===rr.DOWNLOAD||e===rr.PIXELS)return un.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function t0(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Hr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},kr="if (isnan(x)) return x;",GZ="return x;",n0="return abs(x);",HZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",jZ=kr+`
  return (x < 0.0) ? 0.0 : x;
`,qZ=kr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Fa="return x;",KZ="return 1.0 / (1.0 + exp(-1.0 * x));",XZ="return x;",ZZ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,JZ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,YZ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,QZ="return 1.0 / (1.0 + exp(-1.0 * x));",La=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},eJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);let t=e.length,n=vn("rc",t),r=ct(t),a=LZ(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},tJ=ta.whereImpl,nJ=1e-7,rJ=1e-4,Zm={};function aJ(e){return e in Zm||(Zm[e]={}),Zm[e]}var sJ=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),iJ=600;function oJ(){return H().global.screen==null?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*iJ/1024/1024}var Xx=class ET extends Cp{nextDataId(){return ET.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(t!=null){if(t instanceof wh)n=t;else{let r=Rr(H().getNumber("WEBGL_VERSION"),t);n=new wh(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let r=Rr(H().getNumber("WEBGL_VERSION"));n=new wh(r),this.binaryCache=aJ(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new BZ(this.gpgpu),this.numMBBeforeWarning=oJ(),this.texData=new tc(this,fr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,n,r,a,s,i){let o=this.makeTensorInfo(n,r),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[a,s]},l.texShape=[a,s];let p=ep(n),u=new Yw(p,!1,i),d=this.runWebGLProgram(u,[o],r,[[a,s]]);return d.shape=n,l.texture=null,this.disposeIntermediateTensorInfo(o),d.dataId}write(t,n,r){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(t),r==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:n,dtype:r,values:t,usage:rr.UPLOAD,refCount:1}),a}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){let n=this.texData.get(t);n.refCount++}decRef(t){if(this.texData.has(t)){let n=this.texData.get(t);n.refCount--}}move(t,n,r,a,s){if(H().getBool("DEBUG")&&this.checkNumericalProblems(n),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:r,dtype:a,values:n,usage:rr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let n=this.texData.get(t),{values:r,dtype:a,complexTensorInfos:s,slice:i,shape:o,isPacked:l}=n;if(i!=null){let h;l?h=new La(o,Fa):h=new Hr(o,Fa);let c=this.runWebGLProgram(h,[{dataId:t,shape:o,dtype:a}],a),m=this.readSync(c.dataId);return this.disposeIntermediateTensorInfo(c),m}if(r!=null)return this.convertAndCacheOnCPU(t);if(a==="string")return r;let p=this.activeTimers!=null,u;p&&(u=w.now());let d;if(a==="complex64"){let h=this.readSync(s.real.dataId),c=this.readSync(s.imag.dataId);d=T.mergeRealAndImagArrays(h,c)}else d=this.getValuesFromTexture(t);return p&&(this.downloadWaitMs+=w.now()-u),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){let m=this.pendingRead.get(t);return new Promise(f=>m.push(f))}let n=this.texData.get(t),{values:r,shape:a,slice:s,dtype:i,complexTensorInfos:o,isPacked:l}=n;if(s!=null){let m;l?m=new La(a,Fa):m=new Hr(a,Fa);let f=this.runWebGLProgram(m,[{dataId:t,shape:a,dtype:i}],i),g=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),g}if(r!=null)return this.convertAndCacheOnCPU(t);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&H().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let p=null,u;if(i!=="complex64"&&H().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);let m=this.texData.get(u.dataId);p=this.gpgpu.createBufferFromTexture(m.texture.texture,...lh(a))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(i==="complex64"){let m=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=m[0],g=m[1];d=T.mergeRealAndImagArrays(f,g)}else if(p==null)d=this.getValuesFromTexture(t);else{let m=w.sizeFromShape(a);d=this.gpgpu.downloadFloat32MatrixFromBuffer(p,m)}if(u!=null&&this.disposeIntermediateTensorInfo(u),p!=null){let m=this.gpgpu.gl;me(m,()=>m.deleteBuffer(p))}let h=this.convertAndCacheOnCPU(t,d),c=this.pendingRead.get(t);return this.pendingRead.delete(t),c.forEach(m=>m(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&fr().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,n={}){let r=this.texData.get(t),{values:a,shape:s,slice:i,dtype:o,isPacked:l,texture:p}=r;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let c;l?c=new La(s,Fa):c=new Hr(s,Fa);let m=this.runWebGLProgram(c,[{dataId:t,shape:s,dtype:o}],o),f=this.readToGPU(m,n);return this.disposeIntermediateTensorInfo(m),f}if(p==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(t,n.customTexShape),d=fr().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(t){let n=this.readSync(t.dataId);if(t.dtype==="string")try{let r=n.map(a=>w.decodeString(a));return Ve(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ve(t.shape,t.dtype,n)}checkNumericalProblems(t){if(t!=null)for(let n=0;n<t.length;n++){let r=t[n];if(!F2(r))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:n,dtype:r,isPacked:a}=this.texData.get(t),s=w.sizeFromShape(n);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let h=this.decode(t),c=this.texData.get(h.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(c.texture.texture,...lh(n)).subarray(0,s);return this.disposeIntermediateTensorInfo(h),m}let i=H().getBool("WEBGL_PACK")&&a===!0,o=i?ep(n):n,l=i?new V7(o):new W7(o),p=this.runWebGLProgram(l,[{shape:o,dtype:r,dataId:t}],"float32"),u=this.texData.get(p.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(p),d}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let n=this.activeTimers,r=[],a=!1;this.programTimersStack==null?(this.programTimersStack=r,a=!0):this.activeTimers.push(r),this.activeTimers=r,t();let s=w.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=w.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,a&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(s);o.kernelMs=w.sum(l),o.getExtraProfileInfo=()=>l.map((p,u)=>({name:i[u],ms:p})).map(p=>`${p.name}: ${p.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(t){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=w.now(),t)}async getQueryTime(t){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let n=t;return n.endMs-n.startMs}disposeData(t,n=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(n?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!n&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:r}=this.texData.get(t);return r!=null&&(this.disposeData(r.real.dataId,n),this.disposeData(r.imag.dataId,n)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:n,dtype:r,texShape:a,usage:s,isPacked:i,slice:o}=this.texData.get(t),l=o&&o.origDataId||t,p=this.dataRefCount.get(l);p>1?this.dataRefCount.set(l,p-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(n,a,s,i)));let u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,n=sJ){return H().getBool("WEBGL_CPU_FORWARD")&&t.every(r=>this.texData.get(r.dataId).texture==null&&w.sizeFromShape(r.shape)<n)}getGPGPUContext(){return this.gpgpu}where(t){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let n=t.dataSync();return tJ(t.shape,n)}packedUnaryOp(t,n,r){let a=new La(t.shape,n),s=this.compileAndRun(a,[t],r);return fr().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let a=NT(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,a)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,n0,t.dtype);let n=new Hr(t.shape,n0),r=this.compileAndRun(n,[t]);return fr().makeTensorFromTensorInfo(r)}makeTensorInfo(t,n,r){let a;if(n==="string"&&r!=null&&r.length>0&&w.isString(r[0])){let s=r.map(i=>w.encodeString(i));a=this.write(s,t,n)}else a=this.write(r,t,n);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:n}}makeOutput(t,n,r){return fr().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,r),this)}unpackTensor(t){let n=new eJ(t.shape);return this.runWebGLProgram(n,[t],t.dtype)}packTensor(t){let n=new zZ(t.shape);return this.runWebGLProgram(n,[t],t.dtype,null,!0)}packedReshape(t,n){let r=[Qs(t.shape),...ei(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},s=[Qs(n),...ei(n)],i=new CT(s,r),o=!0,l=[r],p=this.runWebGLProgram(i,[a],t.dtype,l,o);return{dataId:p.dataId,shape:n,dtype:p.dtype}}decode(t,n){let r=this.texData.get(t),{isPacked:a,shape:s,dtype:i}=r;if(n!=null){let h=w.sizeFromShape(s),c=n[0]*n[1]*4;w.assert(h<=c,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=ep(s),l;a?l=new B7(o):l=new P7(o);let p=!0,u=[n??lh(o)],d=this.runWebGLProgram(l,[{shape:o,dtype:i,dataId:t}],i,u,p,n);return{dtype:i,shape:s,dataId:d.dataId}}runWebGLProgram(t,n,r,a,s=!1,i){let o=this.makeTensorInfo(t.outputShape,r),l=this.texData.get(o.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===vp.DENSE){let y=i??lh(t.outputShape);l.texShape=y.map(b=>b*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),w.sizeFromShape(o.shape)===0)return l.values=w.getTypedArrayFromDType(o.dtype,0),o;let p=[],u=n.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!t.packedInputs&&w.sizeFromShape(y.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!t.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),p.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!wp(b.shape,y.shape)){let x=y,v=y.shape;y.shape=b.shape,y=this.packedReshape(y,v),p.push(y),b=this.texData.get(y.dataId),x.shape=v}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(o.dataId);let d={shape:o.shape,texData:l,isUniform:!1},h=z7(t,u,d),c=this.getAndSaveBinary(h,()=>O7(this.gpgpu,t,u,d)),m=this.activeTimers!=null,f;m&&(f=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||L7(this.gpgpu,c,u,d,a),p.forEach(y=>this.disposeIntermediateTensorInfo(y)),m&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));let g=H().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){let y=w.now();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&s===!1){let y=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),y}return o}compileAndRun(t,n,r,a,s=!1){return r=r||n[0].dtype,this.runWebGLProgram(t,n,r,a,s)}getAndSaveBinary(t,n){return t in this.binaryCache||(this.binaryCache[t]=n()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=W(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=H().getBool("DEBUG");H().set("DEBUG",!1);let n=this.abs(Se(1e-8)).dataSync()[0];if(H().set("DEBUG",t),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?nJ:rJ}uploadToGPU(t){let n=this.texData.get(t),{shape:r,dtype:a,values:s,texture:i,usage:o,isPacked:l}=n;if(i!=null)return;let p=this.activeTimers!=null,u;p&&(u=w.now());let d=n.texShape;if(d==null&&(d=X2(r,l),n.texShape=d),s!=null){let h=ep(r),c,m=d[1],f=d[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(l||!g)&&([m,f]=Eu(d[0],d[1])),l?c=new G7(h,g):c=new Yw(h,g);let y=g?[f,m]:d,b=this.makeTensorInfo(y,a),x=this.texData.get(b.dataId);g?x.usage=rr.PIXELS:x.usage=rr.UPLOAD,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),m,f,s);let v=[[f,m]],I=this.runWebGLProgram(c,[b],a,v,!0),N=this.texData.get(I.dataId);n.texShape=N.texShape,n.isPacked=N.isPacked,n.usage=N.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(n.texture=N.texture,n.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(b),p&&(this.uploadWaitMs+=w.now()-u)}else{let h=this.acquireTexture(d,o,a,l);n.texture=h}}convertAndCacheOnCPU(t,n){let r=this.texData.get(t),{dtype:a}=r;return n!=null&&(r.values=lJ(n,a)),r.values}acquireTexture(t,n,r,a){if(this.numBytesInGPU+=this.computeBytes(t,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,n,a)}computeBytes(t,n){return t[0]*t[1]*w.bytesPerElement(n)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,n]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(n));return Promise.all(t)}else{for(let[,n]of Object.entries(this.binaryCache)){let r=new Promise(a=>{try{this.checkCompletion_(n),a(!0)}catch(s){throw s}});t.push(r)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await zy(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Px(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);let{variablesLocations:n,customUniformLocations:r,infLoc:a,nanLoc:s,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:l}=iT(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=n,t.customUniformLocations=r,t.infLoc=a,t.nanLoc=s,t.outShapeLocation=i,t.outShapeStridesLocation=o,t.outTexShapeLocation=l}}createTensorFromGPUData(t,n,r){t.channels=t.channels||"RGBA";let{texture:a,height:s,width:i,channels:o}=t,l=fr().backend;if(!l.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let p=l.writeTexture(a,n,r,s,i,o);return fr().makeTensorFromDataId(p,n,r,l)}};Xx.nextDataId=0;function lJ(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}else throw new Error(`Unknown dtype ${t}`)}var uJ="4.22.0";function $T(){H().set("WEBGL_FORCE_F16_TEXTURES",!0)}ed.isBrowser()&&xc("webgl",()=>new Xx,2);var pJ={forceHalfFloat:$T},Zx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,ti=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Ro=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,Mu=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=gn(a);let s="";if(r)if(a===0||w.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${ct(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=vn("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Kn(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var dJ={kernelName:Di,backendName:"webgl",kernelFunc:Kn};function cs(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Kn({inputs:{x:r},backend:n}),l=Kn({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var hJ={kernelName:ac,backendName:"webgl",kernelFunc:cs},AT="return (a < 0.) ? b * a : a;",FT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Mu(FT,a.shape,i.shape):new ti(AT,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}var mJ={kernelName:zi,backendName:"webgl",kernelFunc:cJ},RT="return (a < 0.) ? b * a : a;",DT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function fJ(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Mu(DT,r.shape,a.shape):new ti(RT,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}var gJ={kernelName:eo,backendName:"webgl",kernelFunc:fJ},Ou="if (isnan(x)) return x;";function et({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let d=o.texData.get(i.dataId),h=n(d.values,l);return o.makeTensorInfo(i.shape,l,h)}let p=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return p?u=new La(i.shape,t):u=new Hr(i.shape,e),o.runWebGLProgram(u,[i],l)}}function dn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:p}=i,u=o;if(r&&l.dtype==="complex64"){let m=u.texData.get(l.dataId),f=u.texData.get(p.dataId),[g,y]=[[m.complexTensorInfos.real,f.complexTensorInfos.real],[m.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(x=>{let[v,I]=x,N={dataId:v.dataId,dtype:v.dtype,shape:l.shape},C={dataId:I.dataId,dtype:I.dtype,shape:p.shape},E=new ti(e,l.shape,p.shape);return u.runWebGLProgram(E,[N,C],or(v.dtype,I.dtype))}),b=cs({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),b}let d=s||or(l.dtype,p.dtype);if((l.dtype==="string"||p.dtype==="string"||u.shouldExecuteOnCPU([l,p]))&&a!=null){let m=u.texData.get(l.dataId).values,f=u.texData.get(p.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(m):m,y=l.dtype==="string"?T.fromUint8ToStringArray(f):f,[b,x]=a(l.shape,p.shape,g,y,d),v=u.makeTensorInfo(x,d),I=u.texData.get(v.dataId);return I.values=b,v}let h=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return h?c=new Mu(t,l.shape,p.shape,n):c=new ti(e,l.shape,p.shape),u.runWebGLProgram(c,[l,p],d)}}function kp(e,t=!1){if(e==="linear")return t?XZ:GZ;if(e==="relu")return t?JZ:jZ;if(e==="elu")return t?ZZ:HZ;if(e==="relu6")return t?YZ:qZ;if(e==="prelu")return t?DT:RT;if(e==="leakyrelu")return t?FT:AT;if(e==="sigmoid")return t?QZ:KZ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var MT=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=gn(this.outputShape.length);let p=r?e[1]:e[2],u=Math.ceil(p/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],f="",g="";i&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:f=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${f}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${x};
        for (int i = 0; i < ${u}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${h});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${m[0]});
          result += (${c[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},r0={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},a0=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},s0="return a * b;";function Jx(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=T.upcastType(r.dtype,a.dtype);if(r.dtype==="complex64"){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),p=new a0(r0.REAL,r.shape,a.shape),u=new a0(r0.IMAG,r.shape,a.shape),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],h=n.runWebGLProgram(p,d,"float32"),c=n.runWebGLProgram(u,d,"float32"),m=cs({inputs:{real:h,imag:c},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),m}if(n.shouldExecuteOnCPU([r,a])){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),[p,u]=cZ(r.shape,a.shape,o.values,l.values,s),d=n.makeTensorInfo(u,s),h=n.texData.get(d.dataId);return h.values=p,d}let i;return H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Mu(s0,r.shape,a.shape):i=new ti(s0,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var yJ={kernelName:Zi,backendName:"webgl",kernelFunc:Jx};function bJ(e,t,n){let r=[Qs(e.shape),...ei(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Qs(t),...ei(t)],i=new CT(s,r),o=!0,l=[r],p=n.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:p.dataId,shape:t,dtype:p.dtype}}function he(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=w.sizeFromShape(a.shape),l=w.inferFromImplicitShape(s,o),p=w.sizeFromShape(l);w.assert(o===p,()=>`The new shape (${l}) has ${p} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let u=i.texData.get(a.dataId);return u.isPacked&&!wp(a.shape,l)&&!(u.texture!==null&&wp(u.shape,l))?bJ(a,l,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype})}var xJ={kernelName:eu,backendName:"webgl",kernelFunc:he},i0=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=Math.floor(n/4)*4,o=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${w.isInt(u)?u.toPrecision(2):u}, ones);`}let p="";a%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},vJ=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,u=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";t==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):t==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${p};
        if (${u===1}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===2}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===3}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function wJ(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],r=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function Do(e,t,n,r){let a=wJ(e.shape),s=e;for(let i=0;i<a.length;i++){let{inSize:o,windowSize:l,outSize:p}=a[i],u,d;n==="mean"?u=i===0?new i0({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:p},o):new i0({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:p}):u=new vJ({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:p},n),d=s,s=r.runWebGLProgram(u,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}var kJ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=ct(this.rank),a=IJ(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}};function IJ(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}var SJ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=ct(this.rank),a=_T("rc",this.rank),s=new Array(this.rank);for(let p=0;p<t.length;p++)s[t[p]]=a[p];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Sm(e,t,n){let r=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SJ(e.shape,t):new kJ(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function NJ(e,t,n,r){let a=t,s=e.shape.length,i=w.parseAxisParam(a,e.shape),o=i,l=T.getAxesPermutation(o,s),p=l!=null,u=e;p&&(u=Sm(e,l,r),o=T.getInnerMostAxes(o.length,s)),T.assertAxesAreInnerMostDims("sum",o,s);let[d,h]=T.computeOutAndReduceShapes(u.shape,o),c=d;n&&(c=T.expandShapeToKeepDim(d,i));let m=w.sizeFromShape(h),f=w.sizeFromShape(e.shape)/m,g=he({inputs:{x:u},attrs:{shape:[f,m]},backend:r}),y=bc(e.dtype),b=Do(g,y,"sum",r),x=he({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),p&&r.disposeIntermediateTensorInfo(u),x}function Nm(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return NJ(a,s,i,n)}var TJ={kernelName:bo,backendName:"webgl",kernelFunc:Nm};function In(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let u=0;u<l.length;u++)l[u]=a.shape[s[u]];let p;if(i.shouldExecuteOnCPU([a])){let u=i.texData.get(a.dataId).values,d=Kx(u,a.shape,a.dtype,s,l);p=i.makeTensorInfo(l,a.dtype);let h=i.texData.get(p.dataId);h.values=d}else p=Sm(a,s,i);return p}var _J={kernelName:pa,backendName:"webgl",kernelFunc:In},OT=1e3;function Kh({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let p=e.shape.length,u=t.shape.length,d=n?e.shape[p-2]:e.shape[p-1],h=r?t.shape[u-1]:t.shape[u-2],c=n?e.shape[p-1]:e.shape[p-2],m=r?t.shape[u-2]:t.shape[u-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(f),b=w.sizeFromShape(g),x=bu.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,m]);w.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let v=n?[y,d,c]:[y,c,d],I=r?[b,m,h]:[b,h,m],N=he({inputs:{x:e},backend:a,attrs:{shape:v}}),C=he({inputs:{x:t},backend:a,attrs:{shape:I}}),E=[N,C],A=Math.max(y,b),R=n?N.shape[1]:N.shape[2],F=s!=null,S=i!=null,D=l==="leakyrelu",P=l!=null?kp(l,!0):null,U=F||S||D||P!=null,G;if((c===1||m===1)&&R>OT&&U===!1){let j=N,Z=C;n&&(j=In({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),E.push(j)),r&&(Z=In({inputs:{x:C},backend:a,attrs:{perm:[0,2,1]}}),E.push(Z));let ee=m!==1,X=m===1,re=j;ee&&(re=he({inputs:{x:j},backend:a,attrs:{shape:[A,R,1]}}),E.push(re));let te=m===1?2:1,ae=Z;X&&(ae=he({inputs:{x:Z},backend:a,attrs:{shape:[A,1,R]}}),E.push(ae));let oe=Jx({inputs:{a:re,b:ae},backend:a});G=Nm({inputs:{x:oe},backend:a,attrs:{axis:te,keepDims:!0}}),E.push(oe)}else{let j=or(e.dtype,t.dtype),Z=new MT(v,I,[A,c,m],n,r,F,P,S,D),ee=[N,C];if(s!=null&&ee.push(s),S&&ee.push(i),D){let X=a.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));ee.push(X),E.push(X)}G=a.runWebGLProgram(Z,ee,j)}let K=he({inputs:{x:G},backend:a,attrs:{shape:x}});E.push(G);for(let j of E)a.disposeIntermediateTensorInfo(j);return K}function CJ(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:p,activation:u,leakyreluAlpha:d}=r;return Kh({a,b:s,transposeA:l,transposeB:p,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:u})}var EJ={kernelName:zs,backendName:"webgl",kernelFunc:CJ},o0="return abs(x);";function $J(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let s=n.texData.get(r.dataId),i=NT(s.values);return n.makeTensorInfo(r.shape,r.dtype,i)}let a;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new La(r.shape,o0):a=new Hr(r.shape,o0),n.runWebGLProgram(a,[r],r.dtype)}var AJ={kernelName:gl,backendName:"webgl",kernelFunc:$J},FJ=kr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,RJ=et({opSnippet:FJ}),DJ={kernelName:si,backendName:"webgl",kernelFunc:RJ},MJ=kr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,OJ=et({opSnippet:MJ}),LJ={kernelName:ii,backendName:"webgl",kernelFunc:OJ},l0="return a + b;",zJ=dn({opSnippet:l0,packedOpSnippet:l0,supportsComplex:!0,cpuKernelImpl:j7}),PJ={kernelName:rs,backendName:"webgl",kernelFunc:zJ},BJ=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`float v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},WJ=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`vec4 v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function kh(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return Kn({inputs:{x:r[0]},backend:n});if(r.length>H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(r.length/2),l=kh({inputs:r.slice(0,o),backend:n}),p=kh({inputs:r.slice(o),backend:n});return kh({inputs:[l,p],backend:n})}let a=r.map(o=>o.dtype).reduce((o,l)=>or(o,l)),s=r.map(o=>o.shape),i=H().getBool("WEBGL_PACK")?new WJ(r[0].shape,s):new BJ(r[0].shape,s);return n.runWebGLProgram(i,r,a)}var VJ={kernelName:oi,backendName:"webgl",kernelFunc:kh};function UJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),p=l,u=T.getAxesPermutation(p,o),d=a;u!=null&&(d=In({inputs:{x:a},backend:n,attrs:{perm:u}}),p=T.getInnerMostAxes(p.length,o)),T.assertAxesAreInnerMostDims("all",p,o);let[h,c]=T.computeOutAndReduceShapes(d.shape,p),m=w.sizeFromShape(c),f=he({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),g=Do(f,f.dtype,"all",n),y;if(i){let b=T.expandShapeToKeepDim(h,l);y=he({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=he({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var GJ={kernelName:yl,backendName:"webgl",kernelFunc:UJ};function HJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),p=l,u=T.getAxesPermutation(p,o),d=a;u!=null&&(d=In({inputs:{x:a},backend:n,attrs:{perm:u}}),p=T.getInnerMostAxes(p.length,o)),T.assertAxesAreInnerMostDims("any",p,o);let[h,c]=T.computeOutAndReduceShapes(d.shape,p),m=w.sizeFromShape(c),f=he({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),g=Do(f,f.dtype,"any",n),y;if(i){let b=T.expandShapeToKeepDim(h,l);y=he({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=he({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var jJ={kernelName:bl,backendName:"webgl",kernelFunc:HJ},qJ=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},KJ=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=ct(o),p=vn("coords",o),u,d;if(s===1){d=o+1;let C=ct(d);u=`
        ${C} sourceLocR = ${C}(${p.join()}, 0);
        ++${p[o-1]};
        ${C} sourceLocG = ${C}(${p.join()}, 0);
        ++${p[o-2]};
        ${C} sourceLocA = ${C}(${p.join()}, 0);
        --${p[o-1]};
        ${C} sourceLocB = ${C}(${p.join()}, 0);
        --${p[o-2]};`}else d=o,u=`
        ${l} sourceLocR = coords;
        ++${p[o-1]};
        ${l} sourceLocG = coords;
        ++${p[o-2]};
        ${l} sourceLocA = coords;
        --${p[o-1]};
        ${l} sourceLocB = coords;
        --${p[o-2]};`;let h=["x","y","z","w","u","v"].slice(0,d),c="."+h[d-1],m=h.map(C=>"int "+C),f=vn("sourceLocR",d-1).concat("inIdx.r"),g=vn("sourceLocG",d-1).concat("inIdx.g"),y=vn("sourceLocB",d-1).concat("inIdx.b"),b=vn("sourceLocA",d-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,I=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,N=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${h.join()}),
                                          vec2(${h.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${h.join()}),
                               vec2(${h.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${p[o-2]} < ${i[o-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function LT(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];r!=null&&(a=r.shape[0],s=r.shape[1]);let i=T.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new qJ(o,n,r==null),p=[t];r!=null&&p.push(r);let u=e.runWebGLProgram(l,p,"int32");if(u.shape[1]===1)return u;let d=LT(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function zT(e,t,n,r=null){let a=r!=null?r.shape:t.shape,s=a[a.length-1],i=T.computeOptimalWindowSize(s),o=new KJ(a,i,n,r==null),l=r==null?[t]:[t,r],p=e.runWebGLProgram(o,l,"int32");if(p.shape.length===t.shape.length){let u=zT(e,t,n,p);return e.disposeIntermediateTensorInfo(p),u}return p}function PT(e,t,n,r){let a=[n];if(T.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,l=t;o&&(l=e.unpackTensor(t),s.push(l));let[p,u]=T.computeOutAndReduceShapes(l.shape,a),d=w.sizeFromShape(u),h=he({inputs:{x:l},backend:e,attrs:{shape:[-1,d]}});s.push(h);let c=LT(e,h,r);s.push(c);let m=he({inputs:{x:c},backend:e,attrs:{shape:p}});return s.forEach(f=>e.disposeIntermediateTensorInfo(f)),m}return zT(e,t,r)}function XJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,p=[];o!=null&&(l=In({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let u=PT(n,l,i[0],"max");return p.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var ZJ={kernelName:xl,backendName:"webgl",kernelFunc:XJ};function JJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,p=[];o!=null&&(l=In({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let u=PT(n,l,i[0],"min");return p.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var YJ={kernelName:vl,backendName:"webgl",kernelFunc:JJ},QJ=kr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,e9=et({opSnippet:QJ}),t9={kernelName:li,backendName:"webgl",kernelFunc:e9},n9=kr+"return log(x + sqrt(x * x + 1.0));",r9=et({opSnippet:n9}),a9={kernelName:ui,backendName:"webgl",kernelFunc:r9},s9=kr+`
  return atan(x);
`,i9=et({opSnippet:s9}),o9={kernelName:pi,backendName:"webgl",kernelFunc:i9},l9=Zx+`
  return atan(a, b);
`,u9=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ro+`
  return result;
`,p9=dn({opSnippet:l9,packedOpSnippet:u9}),d9={kernelName:hi,backendName:"webgl",kernelFunc:p9},h9=kr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,c9=et({opSnippet:h9}),m9={kernelName:di,backendName:"webgl",kernelFunc:c9},Ip=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,p=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let m=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(m||(y="-1.0 / 1e-20"),n){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${h}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?f:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / max(count, 1.0)");let v=Math.floor(s/4)*4,I=s%4,N=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${v};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${x});
      }
    `}},Yx=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,p=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,c=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),n){let A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${f}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");let N=Math.floor(s/4)*4,C=s%4,E=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${N};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
        }
        setOutput(${I});
      }
    `}};function f9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;$u(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,p=1;w.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let u=T.computePool2DInfo(a.shape,s,i,p,o,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Kn({inputs:{x:a},backend:n});let d=new Ip(u,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}var g9={kernelName:ci,backendName:"webgl",kernelFunc:f9};function y9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:p}=r,u=[1,1,1],d=T.computePool3DInfo(a.shape,s,i,u,o,l,p),h=new Yx(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}var b9={kernelName:wl,backendName:"webgl",kernelFunc:y9},x9=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,p=o-1-e.padInfo.top,u=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${u});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},v9=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,c=u-1-e.padInfo.front,m=d-1-e.padInfo.top,f=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${m}, ${f});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function w9(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:p,dimRoundingMode:u}=r,d=[1,1,1],h=T.computePool3DInfo(i.shape,o,l,d,p,u),c=new v9(h);return n.runWebGLProgram(c,[a],i.dtype)}var k9={kernelName:Ap,backendName:"webgl",kernelFunc:w9};function I9(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;$u([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:p}=r,u=T.computePool2DInfo(i.shape,o,l,1,p),d=new x9(u);return n.runWebGLProgram(d,[a],i.dtype)}var S9={kernelName:$p,backendName:"webgl",kernelFunc:I9};function N9(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return Kh({a,b:s,transposeA:i,transposeB:o,backend:n})}var T9={kernelName:mi,backendName:"webgl",kernelFunc:N9},_9=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="0.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},C9=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},E9=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;w.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=[r,a,s],u=null;i!=null&&(u=i.shape,p.push(i));let d=null;o!=null&&(d=o.shape,p.push(o));let h=H().getBool("WEBGL_PACK_NORMALIZATION")?new C9(r.shape,a.shape,s.shape,u,d,l):new _9(r.shape,a.shape,s.shape,u,d,l);return t.runWebGLProgram(h,p,p[0].dtype)},$9={kernelName:Fi,backendName:"webgl",kernelFunc:E9},A9=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ct(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=F9(this.rank),r,a=e.map((s,i)=>`sourceLoc.${Zf[i]} = start[${i}] + coords.${Zf[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},Zf=["x","y","z","w","u","v"];function F9(e){if(e===1)return"sourceLoc";if(e<=6)return Zf.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var R9=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ct(this.rank),n=vn("coords",this.rank),r=vn("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,u)=>`start[${u}]`).join()});`:e.map((p,u)=>`${r[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function D9(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Gt.computeFlatOffset(t,w.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function Lu(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Gt.parseSliceParams(a,s,i);if(Gt.assertParamsValid(a,o,l),w.sizeFromShape(l)===0)return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||a.dtype==="string"){let d=n.texData.get(a.dataId),h=SZ(d.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,h)}let{isPacked:p}=n.texData.get(a.dataId),u=Gt.isSliceContinous(a.shape,o,l);if(p||!u){let d=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new R9(l):new A9(l),h=[o];return n.runWebGLProgram(d,[a],a.dtype,h)}return n.uploadToGPU(a.dataId),D9(a,o,l,n)}var M9={kernelName:ou,backendName:"webgl",kernelFunc:Lu},O9=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;w.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),l=T.getReshaped(a.shape,s,o),p=T.getPermuted(l.length,s.length),u=T.getReshapedPermuted(a.shape,s,o),d=T.getSliceBeginCoords(i,s.length),h=T.getSliceSize(u,i,s.length),c=[],m=he({inputs:{x:a},backend:n,attrs:{shape:l}}),f=In({inputs:{x:m},backend:n,attrs:{perm:p}}),g=he({inputs:{x:f},backend:n,attrs:{shape:u}}),y=Lu({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return c.push(m),c.push(f),c.push(g),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},L9={kernelName:kl,backendName:"webgl",kernelFunc:O9};function z9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),p=ST(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}var P9={kernelName:Il,backendName:"webgl",kernelFunc:z9},B9=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,W9=`
  return float(int(a.r) & int(b.r));
`;function V9(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=H().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||i===1){let l=n.texData.get(r.dataId).values,p=n.texData.get(a.dataId).values,[u,d]=K7(r.shape,a.shape,l,p,r.dtype),h=n.makeTensorInfo(d,r.dtype),c=n.texData.get(h.dataId);return c.values=u,h}let o;return s?o=new Mu(B9,r.shape,a.shape,!1):o=new ti(W9,r.shape,a.shape),n.runWebGLProgram(o,[r,a],r.dtype)}var U9={kernelName:Sl,backendName:"webgl",kernelFunc:V9};function G9(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var H9={kernelName:Fp,backendName:"webgl",kernelFunc:G9},j9="return float(a != b);",BT=dn({opSnippet:j9,cpuKernelImpl:fZ,dtype:"bool"}),q9={kernelName:Kl,backendName:"webgl",kernelFunc:BT};function Cd(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return Kn({inputs:{x:a.complexTensorInfos.real},backend:n})}var K9={kernelName:gc,backendName:"webgl",kernelFunc:Cd},X9="return float(int(x));";function Z9(e,t){let n=new Hr(e.shape,X9),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Jf(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return Kn({inputs:{x:a},backend:n});let i=Nt(a.shape),o=Jf({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=cs({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){let i=Cd({inputs:{input:a},backend:n}),o=Jf({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(a.dtype,s)){let i=Kn({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let i=n.texData.get(a.dataId).values,[o,l,p]=X7(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,p)}if(s==="int32")return Z9(a,n);if(s==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=BT({inputs:{a,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var J9={kernelName:fi,backendName:"webgl",kernelFunc:Jf},u0="return ceil(x);",Y9=et({opSnippet:u0,packedOpSnippet:u0,cpuKernelImpl:Z7}),Q9={kernelName:gi,backendName:"webgl",kernelFunc:Y9},eY=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},tY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function nY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o;H().getBool("WEBGL_PACK_CLIP")?o=new tY(a.shape):o=new eY(a.shape);let l=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}var rY={kernelName:as,backendName:"webgl",kernelFunc:nY},aY=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function p0(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function sY(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new aY(r.shape),i=[p0(r,a.complexTensorInfos.real),p0(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var iY={kernelName:Rp,backendName:"webgl",kernelFunc:sY},oY=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},lY=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=ct(r),s=vn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,f)=>`T${f}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let m=1;m<o.length;m++)o[m]=o[m-1]+e[m][t];let l=i[t],p=i.slice(-2),u=i.join(),d=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${u}), vec2(${p.join()}));
        }`;for(let m=1;m<o.length;m++){let f=o[m-1];d+=`
        if (${l} < ${o[m]}  && ${l} >= ${o[m-1]}) {
          return getChannel(
            getT${m}(${ph(i,l,f)}),
            vec2(${ph(p,l,f)}));
        }`}let h=o.length,c=o[o.length-1];d+=`
        return getChannel(
          getT${h}(${ph(i,l,c)}),
          vec2(${ph(p,l,c)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${n[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${n[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${n[r-2]} &&
            ${s[r-1]} < ${n[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function ph(e,t,n){let r=e.indexOf(t);return e.map((a,s)=>s===r?`${a} - ${n}`:a).join()}function Tm(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return Kn({inputs:{x:a.complexTensorInfos.imag},backend:n})}var uY={kernelName:hc,backendName:"webgl",kernelFunc:Tm};function tp(e,t,n){let r=e[0].dtype;if(r==="complex64"){let c=e.map(b=>Cd({inputs:{input:b},backend:n})),m=e.map(b=>Tm({inputs:{input:b},backend:n})),f=tp(c,t,n),g=tp(m,t,n),y=cs({inputs:{real:f,imag:g},backend:n});return c.forEach(b=>n.disposeIntermediateTensorInfo(b)),m.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}let a=n.shouldExecuteOnCPU(e);if(r==="string"&&(a=!0),a){let c=e.map(v=>{let I=[-1,w.sizeFromShape(v.shape.slice(t))];return he({inputs:{x:v},backend:n,attrs:{shape:I}})}),m=c.map(v=>({vals:n.readSync(v.dataId),shape:v.shape})),f=T.computeOutShape(c.map(v=>v.shape),1),g=c[0].shape[0]===1,y=J7(m,f,r,g),b=T.computeOutShape(e.map(v=>v.shape),t),x=n.makeTensorInfo(b,r,y);return c.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}let s=e.filter(c=>w.sizeFromShape(c.shape)>0),i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let c=i?new Hr(e[0].shape,Fa):new La(e[0].shape,Fa);return n.runWebGLProgram(c,e,r)}let o=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let c=[];for(let f=0;f<s.length;f+=o){let g=s.slice(f,f+o);c.push(tp(g,t,n))}let m=tp(c,t,n);for(let f of c)n.disposeIntermediateTensorInfo(f);return m}if(i){let c=new lY(s.map(m=>m.shape),t);return n.runWebGLProgram(c,s,r)}let{tensors2D:l,outShape:p}=pY(s,t,n),u=new oY(l.map(c=>c.shape)),d=n.runWebGLProgram(u,l,r);l.forEach(c=>n.disposeIntermediateTensorInfo(c));let h=he({inputs:{x:d},attrs:{shape:p},backend:n});return n.disposeIntermediateTensorInfo(d),h}function pY(e,t,n){let r=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>he({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}function WT(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(p=>p.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(p=>p.shape),s);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(p=>w.sizeFromShape(p.shape)>0);return l.length===1?Kn({inputs:{x:l[0]},backend:n}):tp(l,s,n)}var dY={kernelName:Nl,backendName:"webgl",kernelFunc:WT},VT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,p=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,f=e.dataFormat==="channelsLast",g=f?1:2,y=f?2:3,b=f?3:1,x="",v="";n&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,v="result = activation(result);");let I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${v}
        setOutput(result);
      }
    `}},hY=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,h=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},UT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gn(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,p=e.filterWidth,u=p,d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let f=0;f<p;f++)d+=`
           vec4 xTexelC${f*2};
           int xTexelC${f*2}Ready;
           vec4 xTexelC${f*2+1};
           int xTexelC${f*2+1}Ready;
           vec4 xC${f};`;d+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let f=0;f<p;f++)d+=`
           xTexelC${f*2} = vec4(0.0);
           xTexelC${f*2}Ready = 0;
           xTexelC${f*2+1} = vec4(0.0);
           xTexelC${f*2+1}Ready = 0;
           xC${f} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let f=0;f<(u+1)/2;f++){let g=f*2;if(d+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<p&&(s%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?d+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<p)){let y=s%2===0?w.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:d+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?d+=`
                     xC${g+1} = xTexelC${g};
                     `:d+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<p&&(s%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<p&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<p&&(d+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<p&&(d+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<p&&(d+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let h="",c="";n&&(r?h=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:a?h=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:h=`vec4 activation(vec4 x) {
           ${n}
         }`,c="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${h}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${c}
         setOutput(result);
       }
     `}},cY=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);let{dataFormat:n}=t,r=Cn(),a=n==="channelsLast",s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let p=0;p<=1;p++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.z + ${u};
          pos = rc.y + ${p};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+u}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+u}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function Xh(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function GT({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,p=r.texData.get(e.dataId),u=n.inChannels,d=l[0]*l[1]*l[2],h=n.outChannels,c=n.dataFormat==="channelsLast",m=!1,f=!1,g,y=[];if(s!=null){let b=Xh(s.shape,c);b!=null&&(s=he({inputs:{x:s},backend:r,attrs:{shape:b}}),y.push(s))}if(a!=null){let b=Xh(a.shape,c);b!=null&&(a=he({inputs:{x:a},backend:r,attrs:{shape:b}}),y.push(a))}if(!((d===1||h===1)&&u>OT)&&p.isPacked&&c&&p.texture!=null&&l[2]%2!==0&&w.arraysEqual(p.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),x={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},v=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,w.assert(wp(p.shape,x.shape),()=>`packed reshape ${p.shape} to ${x.shape} isn't free`);let I=he({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let N=Kh({a:x,b:I,backend:r,transposeA:m,transposeB:f,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),C=r.texData.get(N.dataId);w.assert(C.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=v,C.shape=n.outShape,g=Kn({inputs:{x:N},backend:r}),g.shape=n.outShape,y.push(N)}else{let b=n.outHeight*n.outWidth,x=he({inputs:{x:e},backend:r,attrs:{shape:c?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),v=he({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=Kh({a:c?x:v,b:c?v:x,transposeA:!c,transposeB:f,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=he({inputs:{x:I},backend:r,attrs:{shape:n.outShape}}),y.push(x),y.push(v),y.push(I)}for(let b of y)r.disposeIntermediateTensorInfo(b);return g}function HT({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:p,inChannels:u,outWidth:d,outHeight:h,dataFormat:c}=n,m=c==="channelsLast",f=l*p*u,g=h*d,y=[n.batchSize,f,g],b=!0,x=!1,v=[];if(s!=null){let j=Xh(s.shape,m);j!=null&&(s=he({inputs:{x:s},backend:r,attrs:{shape:j}}),v.push(s))}if(a!=null){let j=Xh(a.shape,m);j!=null&&(a=he({inputs:{x:a},backend:r,attrs:{shape:j}}),v.push(a))}let I=he({inputs:{x:t},backend:r,attrs:{shape:[1,f,w.sizeFromShape(t.shape)/f]}});v.push(I);let N=new cY(y,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],E=r.runWebGLProgram(N,[e],"float32",C),A=he({inputs:{x:E},backend:r,attrs:{shape:y}});v.push(E),v.push(A);let R=a!=null,F=s!=null,S=o==="leakyrelu",D=o?kp(o,!0):null,P=new MT(m?A.shape:I.shape,m?I.shape:A.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,R,D,F,S),U=m?[A,I]:[I,A];if(a&&U.push(a),F&&U.push(s),S){let j=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));U.push(j),v.push(j)}let G=r.runWebGLProgram(P,U,"float32"),K=he({inputs:{x:G},backend:r,attrs:{shape:n.outShape}});v.push(G);for(let j of v)r.disposeIntermediateTensorInfo(j);return K}function mY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:p,dimRoundingMode:u}=r,d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!1,d),c;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))c=GT({x:a,filter:s,convInfo:h,backend:n});else if(h.strideWidth<=2&&d==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){let f=new UT(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];c=n.runWebGLProgram(f,[a,s],"float32",g)}else if(H().getBool("WEBGL_CONV_IM2COL"))c=HT({x:a,filter:s,convInfo:h,backend:n});else{let f=new VT(h);c=n.runWebGLProgram(f,[a,s],"float32")}let m=he({inputs:{x:c},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(c),m}var fY={kernelName:yi,backendName:"webgl",kernelFunc:mY},gY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},yY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,p=s?2:3,u=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},bY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},xY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,p=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function vY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:p,filterShape:u}=r,d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(a.shape,u,i,1,o,p,!1,d),c=new gY(h);return n.runWebGLProgram(c,[a,s],"float32")}var wY={kernelName:sc,backendName:"webgl",kernelFunc:vY},kY=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=gn(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function IY(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:p,dimRoundingMode:u}=r,d=T.convertConv2DDataFormat(p),h=T.computeConv2DInfo(i,s.shape,o,1,l,u,!1,d);if(H().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){let c=[[h.strideHeight,h.strideWidth]],m=new kY(h);return n.runWebGLProgram(m,[a,s],"float32",c)}else{let c=new yY(h);return n.runWebGLProgram(c,[a,s],"float32")}}var SY={kernelName:bi,backendName:"webgl",kernelFunc:IY};function NY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,p=T.computeConv3DInfo(a.shape,s.shape,i,l,o),u=new hY(p);return n.runWebGLProgram(u,[a,s],"float32")}var TY={kernelName:xi,backendName:"webgl",kernelFunc:NY};function _Y(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,p=T.computeConv3DInfo(a.shape,l,i,1,o),u=new bY(p);return n.runWebGLProgram(u,[a,s],"float32")}var CY={kernelName:Tl,backendName:"webgl",kernelFunc:_Y};function EY(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,p=T.computeConv3DInfo(l,s.shape,o,1,i),u=new xY(p);return n.runWebGLProgram(u,[a,s],"float32")}var $Y={kernelName:_l,backendName:"webgl",kernelFunc:EY},AY=Ou+`
  return cos(x);
`,FY=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Ro}
  return result;
`,RY=et({opSnippet:AY,packedOpSnippet:FY}),DY={kernelName:vi,backendName:"webgl",kernelFunc:RY},MY=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,OY=et({opSnippet:MY}),LY={kernelName:wi,backendName:"webgl",kernelFunc:OY},zY=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[p]=t,[u,d]=n;this.outputShape=[p,u,d,l];let h=r==="bilinear"?1:0,[c,m]=[`${i-1}.0`,`${o-1}.0`],[f,g,y]=u>1?[`${(i-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=d>1?[`${(o-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${h} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},PY=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:p}=r,u=new zY(a.shape,s.shape,o,l,p);return n.runWebGLProgram(u,[a,s,i],"float32")},BY={kernelName:El,backendName:"webgl",kernelFunc:PY},Sp;(function(e){e.Prod="*",e.Sum="+"})(Sp||(Sp={}));var d0=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===Sp.Prod?"1.0":"0.0",i=n?s:`getX(${h0(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",p="";n?(l=r?`end != ${o-1}`:"end != 0",p=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",p=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ct(a)} coords = getOutputCoords();
        int end = ${c0(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${p};
          ${c0(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${h0(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function h0(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function c0(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function jT(e,t,n,r,a,s){let i=t.shape.length,o=T.getAxesPermutation([r],i),l=t;o!=null&&(l=In({inputs:{x:t},backend:n,attrs:{perm:o}}));let p=T.getInnerMostAxes(1,i)[0];if(p!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let u=l.shape[p],d=Kn({inputs:{x:l},backend:n});for(let h=0;h<=Math.ceil(Math.log2(u))-1;h++){let c=new d0(e,l.shape,!1,s),m=[[h]],f=d;d=n.runWebGLProgram(c,[d],d.dtype,m),n.disposeIntermediateTensorInfo(f)}if(a){let h=new d0(e,l.shape,a,s),c=d;d=n.runWebGLProgram(h,[d],d.dtype),n.disposeIntermediateTensorInfo(c)}if(o!=null){let h=T.getUndoAxesPermutation(o),c=In({inputs:{x:d},backend:n,attrs:{perm:h}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),c}return d}function WY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return jT(Sp.Prod,a,n,s,i,o)}var VY={kernelName:Cl,backendName:"webgl",kernelFunc:WY};function UY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return jT(Sp.Sum,a,n,s,i,o)}var GY={kernelName:ki,backendName:"webgl",kernelFunc:UY};function HY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.readSync(a.dataId),p=n.readSync(s.dataId),u=ST(l,p,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}else if(a.shape.length===2){let l=n.bufferSync(a),p=n.bufferSync(s),u=q7(l,p,i,o);return n.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var jY={kernelName:Dp,backendName:"webgl",kernelFunc:HY},qY=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function KY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],p=i==="NHWC"?a.shape[2]:a.shape[3],u=i==="NHWC"?a.shape[3]:a.shape[1],d=l*s,h=p*s,c=u/(s*s),m=i==="NHWC"?[o,d,h,c]:[o,c,d,h],f=new qY(m,s,i);return n.runWebGLProgram(f,[a],a.dtype)}var XY={kernelName:$l,backendName:"webgl",kernelFunc:KY},qT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gn(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",p="";n&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${p}
        setOutput(result);
      }
    `}},KT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gn(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,p=e.filterHeight,u=e.filterWidth,d=u,h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)h+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;h+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let g=0;g<u;g++)h+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let y=g*2;if(h+=`
          xC = xCCorner + ${y*l};
          `,o===1){if(y<u&&(i%2===1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?h+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<u)){let b=i%2===0?w.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1?h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:h+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):b===1?h+=`
                    xC${y+1} = xTexelC${y};
                    `:h+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<u&&(i%2===1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<u&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<u&&(h+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<u&&(h+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<u&&(h+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  `,h+=`
      }
    `;let c="",m="";n&&(r?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`vec4 activation(vec4 x) {
          ${n}
        }`,m="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${f}
        ${m}
        setOutput(result);
      }
    `}};function ZY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:p}=r,u=l;u==null&&(u=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!0),h;H().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new KT(d):h=new qT(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",c)}var JY={kernelName:Ii,backendName:"webgl",kernelFunc:ZY},YY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},QY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function eQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:p,filterShape:u}=r,d=T.computeConv2DInfo(a.shape,u,i,o,l,p,!0),h=new YY(d);return n.runWebGLProgram(h,[a,s],"float32")}var tQ={kernelName:ic,backendName:"webgl",kernelFunc:eQ};function nQ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:p,inputShape:u}=r,d=T.computeConv2DInfo(u,s.shape,i,o,l,p,!0),h=new QY(d);return n.runWebGLProgram(h,[a,s],"float32")}var rQ={kernelName:oc,backendName:"webgl",kernelFunc:nQ},aQ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function sQ(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=w.sizeFromShape(r.shape),i=he({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new aQ(s),l=n.runWebGLProgram(o,[i],i.dtype),p=he({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),p}var iQ={kernelName:Mp,backendName:"webgl",kernelFunc:sQ},oQ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:p}=e,{top:u,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${u}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function lQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,p=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),u,d=new oQ(p);u=n.runWebGLProgram(d,[a,s],"float32");let h=he({inputs:{x:u},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(u),h}var uQ={kernelName:Si,backendName:"webgl",kernelFunc:lQ};function pQ(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:p,steps:u}=T.getEinsumComputePath(o,l),d=u.length,h=null,c=i.length,m=[];for(let f=0;f<d;++f){for(let g of u[f]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=In({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=he({inputs:{x},backend:n,attrs:{shape:v}}),m.push(x)),h===null?h=x:(h=Jx({inputs:{a:x,b:h},backend:n}),m.push(h))}f<d-1&&(p[f]>=0&&(h=Nm({inputs:{x:h},backend:n,attrs:{axis:p[f]-(i.length-c),keepDims:!1}}),m.push(h)),c--)}for(let f of m)f!==h&&n.disposeIntermediateTensorInfo(f);return h}var dQ={kernelName:uc,backendName:"webgl",kernelFunc:pQ},hQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",cQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,mQ=et({opSnippet:hQ,packedOpSnippet:cQ}),fQ={kernelName:Ti,backendName:"webgl",kernelFunc:mQ},gQ="return (b >= 0.0) ? a : a * (b + 1.0);",yQ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,bQ=e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Mu(yQ,r.shape,a.shape):new ti(gQ,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},xQ={kernelName:Al,backendName:"webgl",kernelFunc:bQ},vQ=`
  return vec4(equal(a, b));
`,wQ="return float(a == b);",kQ=dn({opSnippet:wQ,packedOpSnippet:vQ,dtype:"bool",cpuKernelImpl:Y7}),IQ={kernelName:Fl,backendName:"webgl",kernelFunc:kQ},SQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,NQ=et({opSnippet:SQ}),TQ={kernelName:_i,backendName:"webgl",kernelFunc:NQ},_Q=Ou+`
  return exp(x);
`,CQ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,XT=et({opSnippet:_Q,packedOpSnippet:CQ,cpuKernelImpl:Q7,dtype:"float32"}),EQ={kernelName:Ci,backendName:"webgl",kernelFunc:XT};function Yf(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),he({inputs:{x:s},backend:r,attrs:{shape:o}})}var $Q={kernelName:Rl,backendName:"webgl",kernelFunc:Yf},m0="return exp(x) - 1.0;",AQ=et({opSnippet:m0,packedOpSnippet:m0,cpuKernelImpl:eZ}),FQ={kernelName:Ei,backendName:"webgl",kernelFunc:AQ},f0=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function ZT(e,t,n){let r=n.texData.get(e.dataId),a=w.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=he({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,p=new f0("real",l,t),u=new f0("imag",l,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],h=n.runWebGLProgram(p,d,"float32"),c=n.runWebGLProgram(u,d,"float32"),m=cs({inputs:{real:h,imag:c},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c);let f=he({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(m),f}function RQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return ZT(r,!1,n)}var DQ={kernelName:pc,backendName:"webgl",kernelFunc:RQ},MQ=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Ed(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||w.inferDtype(a),s==="string"){let i=w.getArrayFromDType(s,w.sizeFromShape(r));return i.fill(a),t.makeTensorInfo(r,s,i)}else{let i=new MQ(r,a),o=[[a]];return t.runWebGLProgram(i,[],s,o)}}var OQ={kernelName:Op,backendName:"webgl",kernelFunc:Ed},LQ=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},zQ={kernelName:Dl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new LQ(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},g0="return floor(x);",PQ=et({opSnippet:g0,packedOpSnippet:g0,cpuKernelImpl:tZ}),BQ={kernelName:$i,backendName:"webgl",kernelFunc:PQ},WQ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,VQ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,UQ=dn({opSnippet:WQ,packedOpSnippet:VQ,dtype:"int32"}),GQ={kernelName:Ai,backendName:"webgl",kernelFunc:UQ},HQ=class{constructor(e){this.variableNames=["A"];let t=Cn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},jQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Cn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},qQ={kernelName:Th,backendName:"webgl",kernelFunc:KQ},Wo,Jm=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function KQ(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,p]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],u=[p,l],d=[p,l,s];if(o||i){let f=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Wo==null||f!==Jm)&&(Jm=f,Wo=document.createElement("canvas").getContext("2d",{willReadFrequently:Jm})),Wo.canvas.width=l,Wo.canvas.height=p,Wo.drawImage(a,0,0,l,p),a=Wo.canvas}let h=n.makeTensorInfo(u,"int32");n.texData.get(h.dataId).usage=rr.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);let c=H().getBool("WEBGL_PACK")?new jQ(d):new HQ(d),m=n.runWebGLProgram(c,[h],"int32");return n.disposeData(h.dataId),m}function XQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dataFormat:u,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=r,f=T.convertConv2DDataFormat(u),g=T.computeConv2DInfo(a.shape,s.shape,l,d,p,h,!1,f),y,b=[],x=i!=null,v=o!=null,I=c==="leakyrelu",N=()=>{let E=[a,s],A=(R,F)=>{if(F==="NCHW"&&R.shape.length===1&&R.shape[0]!==1){let S=he({inputs:{x:R},backend:n,attrs:{shape:[R.shape[0],1,1]}});return b.push(S),S}return R};if(x&&E.push(A(i,u)),v&&E.push(A(o,u)),I){let R=n.makeTensorInfo([],"float32",w.createScalarValue(m,"float32"));E.push(R),b.push(R)}return E};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=GT({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else if(g.strideWidth<=2&&f==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){let E=c?kp(c,!0):null,A=new UT(g,x,E,v,I),R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=N();y=n.runWebGLProgram(A,F,"float32",R)}else if(H().getBool("WEBGL_CONV_IM2COL"))y=HT({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else{let E=c?kp(c,!1):null,A=new VT(g,x,E,v,I),R=N();y=n.runWebGLProgram(A,R,"float32")}let C=he({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(E=>n.disposeIntermediateTensorInfo(E)),C}var ZQ={kernelName:Ps,backendName:"webgl",kernelFunc:XQ};function JQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dilations:u,dimRoundingMode:d,activation:h,leakyreluAlpha:c}=r,m=[],f=u;f==null&&(f=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=T.computeConv2DInfo(a.shape,s.shape,l,f,p,d,!0),y=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=h?kp(h,y):null,x=[a,s],v=i!=null,I=o!=null,N=h==="leakyrelu";if(v&&x.push(i),I&&x.push(o),N){let R=n.makeTensorInfo([],"float32",w.createScalarValue(c,"float32"));x.push(R),m.push(R)}let C;y?C=new KT(g,v,b,I,N):C=new qT(g,v,b,I,N);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=n.runWebGLProgram(C,x,"float32",E);return m.forEach(R=>n.disposeIntermediateTensorInfo(R)),A}var YQ={kernelName:Bs,backendName:"webgl",kernelFunc:JQ},QQ=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=ct(n.length),s=`
    int index;`;for(let i=0;i<this.sliceDim;i++)s+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function eee(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,p,u,d]=T.prepareAndValidate(r,a),h=he({inputs:{x:a},backend:n,attrs:{shape:[p,i]}}),c=he({inputs:{x:r},backend:n,attrs:{shape:[w.sizeFromShape(r.shape)/u,u]}});if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.readSync(a.dataId),b=n.bufferSync(r),x=nZ(y,b,r.dtype,p,i,u,d,r.shape,o);return n.makeTensorInfo(l,r.dtype,x.values)}let m=new QQ(i,d,[p,u],r.shape),f=n.runWebGLProgram(m,[c,h],c.dtype),g=he({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),g}var tee={kernelName:Ol,backendName:"webgl",kernelFunc:eee},nee=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ct(this.rank),r=ree(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function ree(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)a===2?r.push("index"):r.push(`${n[a]}`);return r.join()}function JT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,a.shape)[0];if(H().get("DEBUG")){let b=n.readSync(s.dataId),x=a.shape[l];for(let v=0;v<b.length;++v){let I=b[v];w.assert(I<=x-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${x-1}]`)}}let p=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),u=w.sizeFromShape(s.shape),d=[],h=he({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),c=he({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,u/p.batchSize]}});d.push(h),d.push(c);let m=[p.batchSize,p.outerSize,u/p.batchSize,p.sliceSize];if(n.shouldExecuteOnCPU([a,s])||a.dtype==="string"){let b=n.bufferSync(c),x=n.bufferSync(h),v=rZ(x,b,m);return d.forEach(I=>n.disposeIntermediateTensorInfo(I)),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}let f=new nee(h.shape,m),g=n.runWebGLProgram(f,[h,c],h.dtype);d.push(g);let y=he({inputs:{x:g},backend:n,attrs:{shape:p.outputShape}});return d.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var aee={kernelName:Ml,backendName:"webgl",kernelFunc:JT},see="return float(a > b);",iee=`
  return vec4(greaterThan(a, b));
`,oee=dn({opSnippet:see,packedOpSnippet:iee,cpuKernelImpl:aZ,dtype:"bool"}),lee={kernelName:Ll,backendName:"webgl",kernelFunc:oee},uee="return float(a >= b);",pee=`
  return vec4(greaterThanEqual(a, b));
`,dee=dn({opSnippet:uee,packedOpSnippet:pee,dtype:"bool",cpuKernelImpl:sZ}),hee={kernelName:Ri,backendName:"webgl",kernelFunc:dee};function cee(e){let{inputs:t,backend:n}=e,{input:r}=t;return ZT(r,!0,n)}var mee={kernelName:dc,backendName:"webgl",kernelFunc:cee},fee="return float(!isnan(x) && !isinf(x));",gee=et({opSnippet:fee,dtype:"bool"}),yee={kernelName:Mi,backendName:"webgl",kernelFunc:gee},bee="return float(isinf(x));",xee=et({opSnippet:bee,dtype:"bool"}),vee={kernelName:Oi,backendName:"webgl",kernelFunc:xee},wee="return float(isnan(x));",kee=et({opSnippet:wee,dtype:"bool"}),Iee={kernelName:Li,backendName:"webgl",kernelFunc:kee},See="return float(a < b);",Nee=`
  return vec4(lessThan(a, b));
`,Tee=dn({opSnippet:See,packedOpSnippet:Nee,cpuKernelImpl:iZ,dtype:"bool"}),_ee={kernelName:zl,backendName:"webgl",kernelFunc:Tee},Cee="return float(a <= b);",Eee=`
  return vec4(lessThanEqual(a, b));
`,$ee=dn({opSnippet:Cee,packedOpSnippet:Eee,cpuKernelImpl:oZ,dtype:"bool"}),Aee={kernelName:Pl,backendName:"webgl",kernelFunc:$ee};function Fee(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=lZ(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var Ree={kernelName:Bl,backendName:"webgl",kernelFunc:Fee},Dee=Ou+`
  return x < 0.0 ? 0./0. : log(x);
`,Mee=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Oee=et({opSnippet:Dee,packedOpSnippet:Mee,cpuKernelImpl:uZ}),Lee={kernelName:Pi,backendName:"webgl",kernelFunc:Oee},zee=Ou+`
  return log(1.0 + x);
`,Pee=et({opSnippet:zee}),Bee={kernelName:Bi,backendName:"webgl",kernelFunc:Pee},Wee="return float(a >= 1.0 && b >= 1.0);",Vee=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Uee=dn({opSnippet:Wee,packedOpSnippet:Vee,dtype:"bool"}),Gee={kernelName:Wl,backendName:"webgl",kernelFunc:Uee},Hee="return float(!(x >= 1.0));",jee=et({opSnippet:Hee}),qee={kernelName:Vl,backendName:"webgl",kernelFunc:jee},Kee="return float(a >= 1.0 || b >= 1.0);",Xee=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Zee=dn({opSnippet:Kee,packedOpSnippet:Xee,dtype:"bool"}),Jee={kernelName:Ul,backendName:"webgl",kernelFunc:Zee},Yee=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},Qee=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},ete=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,p=H().getBool("WEBGL_PACK_NORMALIZATION")?new Qee(a.shape,s,i,o,l):new Yee(a.shape,s,i,o,l);return n.runWebGLProgram(p,[a],a.dtype)},tte={kernelName:Wi,backendName:"webgl",kernelFunc:ete},nte=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},rte=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:p,beta:u}=r,d=new nte(a.shape,o,l,p,u);return n.runWebGLProgram(d,[a,s,i],a.dtype)},ate={kernelName:Gl,backendName:"webgl",kernelFunc:rte};function ste(e,t,n,r){let a=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/a,i=he({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Do(i,e.dtype,"max",r),l=he({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function YT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),p=l,u=T.getAxesPermutation(p,o),d=u!=null,h=n.shouldExecuteOnCPU([a]),c=a;if(d){if(h){let b=n.texData.get(c.dataId).values,x=new Array(o);for(let N=0;N<x.length;N++)x[N]=a.shape[u[N]];let v=Kx(b,a.shape,a.dtype,u,x);c=n.makeTensorInfo(x,a.dtype);let I=n.texData.get(c.dataId);I.values=v}else c=Sm(a,u,n);p=T.getInnerMostAxes(p.length,o)}T.assertAxesAreInnerMostDims("max",p,o);let[m,f]=T.computeOutAndReduceShapes(c.shape,p),g=m;i&&(g=T.expandShapeToKeepDim(m,l));let y;if(h){let b=n.texData.get(c.dataId).values,x=pZ(b,w.sizeFromShape(f),g,a.dtype);y=n.makeTensorInfo(g,a.dtype);let v=n.texData.get(y.dataId);v.values=x}else y=ste(c,f,g,n);return d&&n.disposeIntermediateTensorInfo(c),y}var ite={kernelName:Vi,backendName:"webgl",kernelFunc:YT},ote=Zx+`
  return max(a, b);
`,lte=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ro+`
  return result;
`,ute=dn({opSnippet:ote,packedOpSnippet:lte,cpuKernelImpl:dZ}),pte={kernelName:Ui,backendName:"webgl",kernelFunc:ute};function dte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;$u(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,p=1;w.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let u=T.computePool2DInfo(a.shape,s,i,p,o,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Kn({inputs:{x:a},backend:n});let d=new Ip(u,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}var hte={kernelName:Gi,backendName:"webgl",kernelFunc:dte};function cte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:p}=r,u=[1,1,1],d=T.computePool3DInfo(a.shape,s,i,u,o,p,l),h=new Yx(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}var mte={kernelName:Hl,backendName:"webgl",kernelFunc:cte},fte=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},gte=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,u=o-1-e.padInfo.front,d=l-1-e.padInfo.top,h=p-1-e.padInfo.left,c=o*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function yte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:p,dimRoundingMode:u}=r,d=[1,1,1],h=T.computePool3DInfo(i.shape,o,l,d,p,u),c=new Yx(h,"max",!0),m=n.runWebGLProgram(c,[i],i.dtype),f=new gte(h),g=n.runWebGLProgram(f,[a,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}var bte={kernelName:zp,backendName:"webgl",kernelFunc:yte};function xte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;$u([s,i],"maxPoolGrad");let{filterSize:l,strides:p,pad:u,dimRoundingMode:d}=r,h=T.computePool2DInfo(o.shape,l,p,1,u,d),c=!0,m=new Ip(h,"max",c),f=n.runWebGLProgram(m,[o],o.dtype),g=new fte(h),y=n.runWebGLProgram(g,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}var vte={kernelName:Lp,backendName:"webgl",kernelFunc:xte};function wte(e,t,n,r){let a=new Ip(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");a=new Ip(n,"max",!0,!0,t);let i=r.runWebGLProgram(a,[e],"float32");return[s,i]}var kte={kernelName:Pp,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;w.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let p=[1,1];w.assert(T.eitherStridesOrDilationsAreOne(s,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${p}'`);let u=T.computePool2DInfo(r.shape,a,s,p,i),[d,h]=wte(r,o,u,l);return[d,h]}};function Ite(e,t,n,r){let a=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/a,i=he({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Do(i,"float32","mean",r),l=he({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var Ste={kernelName:Hi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=w.parseAxisParam(s,r.shape),p=l,u=T.getAxesPermutation(p,o),d=u!=null,h=i.shouldExecuteOnCPU([r]),c=[],m=r;if(d){if(h){let x=i.texData.get(m.dataId).values,v=new Array(o);for(let C=0;C<v.length;C++)v[C]=r.shape[u[C]];let I=Kx(x,r.shape,r.dtype,u,v);m=i.makeTensorInfo(v,r.dtype);let N=i.texData.get(m.dataId);N.values=I}else m=Sm(r,u,i);c.push(m),p=T.getInnerMostAxes(p.length,o)}T.assertAxesAreInnerMostDims("sum",p,o);let[f,g]=T.computeOutAndReduceShapes(m.shape,p),y=f;a&&(y=T.expandShapeToKeepDim(f,l));let b=Ite(m,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function Nte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),p=l,u=T.getAxesPermutation(p,o),d=a;u!=null&&(d=In({inputs:{x:a},backend:n,attrs:{perm:u}}),p=T.getInnerMostAxes(p.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",p,o);let[h,c]=T.computeOutAndReduceShapes(d.shape,p),m=w.sizeFromShape(c),f=he({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),g=Do(f,f.dtype,"min",n),y;if(i){let b=T.expandShapeToKeepDim(h,l);y=he({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=he({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var Tte={kernelName:ji,backendName:"webgl",kernelFunc:Nte},_te=Zx+`
  return min(a, b);
`,Cte=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ro+`
  return result;
`,Ete=dn({opSnippet:_te,packedOpSnippet:Cte,cpuKernelImpl:hZ}),$te={kernelName:qi,backendName:"webgl",kernelFunc:Ete},Ate=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((p,u)=>p[0]+e[u]+p[1]);let r=e.length,a=ct(r),s=t.map(p=>p[0]).join(","),i=t.map((p,u)=>p[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=n==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},Fte=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,m)=>c[0]+e[m]+c[1]);let r=e.length,a=ct(r),s=t.map(c=>c[0]).join(","),i=t.map((c,m)=>c[0]+e[m]).join(","),o=vn("rc",r),l=vn("source",r),p=`${o[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${l.slice(-2).join()})`,d=n==="reflect"?0:1,h="";if(r===1){let c=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;h=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[r-1]} += 1;
        if(${p}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let c=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;h=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[r-1]} += 1;
        if(${p}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${c}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${o[r-1]} += 1;
          if(${p}) {
            ${c}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},Rte=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fte(r.shape,a,s):new Ate(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)},Dte={kernelName:Ki,backendName:"webgl",kernelFunc:Rte},Mte=`if (b == 0.0) return NAN;
  return mod(a, b);`,Ote=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ro+`
  return result;
`,Lte=dn({opSnippet:Mte,packedOpSnippet:Ote}),zte={kernelName:Xi,backendName:"webgl",kernelFunc:Lte},Pte=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Bte=`
if (a == b) {
  return 1.0;
};
return a / b;`,Wte=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,QT=dn({opSnippet:Bte,packedOpSnippet:Wte,checkOutOfBounds:!0}),Vte={kernelName:Ni,backendName:"webgl",kernelFunc:QT},y0="return a - b;",e_=dn({opSnippet:y0,packedOpSnippet:y0,supportsComplex:!0,cpuKernelImpl:RZ}),Ute={kernelName:wo,backendName:"webgl",kernelFunc:e_};function t_(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=w.parseAxisParam([s],a.shape),o=YT({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),p=he({inputs:{x:o},backend:n,attrs:{shape:l}}),u=e_({inputs:{a,b:p},backend:n}),d=XT({inputs:{x:u},backend:n}),h=Nm({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),c=he({inputs:{x:h},backend:n,attrs:{shape:l}}),m=QT({inputs:{a:d,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),m}var Gte={kernelName:xo,backendName:"webgl",kernelFunc:t_};function Hte(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:t_({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),p=l.shape[0],u=l.shape[1],d=new Pte(p,u,s),h=[[i]],c=n.runWebGLProgram(d,[l],"int32",h);return o||n.disposeIntermediateTensorInfo(l),c}var jte={kernelName:jl,backendName:"webgl",kernelFunc:Hte},qte=kr+`
  return -x;
`,Kte=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Xte(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let s=n.texData.get(r.dataId),[i,o]=mZ(s.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}let a;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new La(r.shape,Kte):a=new Hr(r.shape,qte),n.runWebGLProgram(a,[r],r.dtype)}var Zte={kernelName:ql,backendName:"webgl",kernelFunc:Xte},Jte=ta.nonMaxSuppressionV3Impl;function Yte(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,p=n.readSync(a.dataId),u=n.readSync(s.dataId),{selectedIndices:d}=Jte(p,u,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Qte={kernelName:Xl,backendName:"webgl",kernelFunc:Yte},ene=ta.nonMaxSuppressionV4Impl;function tne(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:p}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:c}=ene(u,d,i,o,l,p);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var nne={kernelName:Zl,backendName:"webgl",kernelFunc:tne},rne=ta.nonMaxSuppressionV5Impl;function ane(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:p}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,c=o,m=l,f=p,{selectedIndices:g,selectedScores:y}=rne(u,d,h,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var sne={kernelName:Jl,backendName:"webgl",kernelFunc:ane},ine=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}},one=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,p=w.sizeFromShape(a.shape),u=new ine(p,i,o,l),d=he({inputs:{x:a},backend:n,attrs:{shape:[p]}}),h=n.runWebGLProgram(u,[d],s);n.disposeIntermediateTensorInfo(d);let c=[...a.shape,i],m=he({inputs:{x:h},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(h),m},lne={kernelName:Ji,backendName:"webgl",kernelFunc:one};function Zh(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let a=Cd({inputs:{input:r},backend:n}),s=Zh({inputs:{x:a},backend:n}),i=Tm({inputs:{input:r},backend:n}),o=Zh({inputs:{x:i},backend:n}),l=cs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Ed({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var une={kernelName:gu,backendName:"webgl",kernelFunc:Zh};function n_(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let a=Cd({inputs:{input:r},backend:n}),s=n_({inputs:{x:a},backend:n}),i=Tm({inputs:{input:r},backend:n}),o=Zh({inputs:{x:i},backend:n}),l=cs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Ed({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var pne={kernelName:Yl,backendName:"webgl",kernelFunc:n_};function dne(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return Yf({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let d=Yf({inputs:{input:u},backend:n,attrs:{dim:a}});return o.push(d),d}),p=WT({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(u=>n.disposeIntermediateTensorInfo(u)),p}var hne={kernelName:Ql,backendName:"webgl",kernelFunc:dne},cne=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,p)=>l[0]+e[p]+l[1]);let r=e.length,a=ct(r),s=t.map(l=>l[0]).join(","),i=t.map((l,p)=>l[0]+e[p]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},mne=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,f)=>m[0]+e[f]+m[1]);let r=e.length,a=ct(r),s=t.map(m=>m[0]).join(","),i=t.map((m,f)=>m[0]+e[f]).join(","),o=vn("rc",r),l=vn("source",r),p=`${o[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${p}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${o[r-1]} += 1;
         if(${p}) {`],h=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let m=0,f=r===1?2:4;m<f;m++)c+=`
        ${d[m]}
        if (${h}) {
          result[${m}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${u});
        }
      `;c+=r===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},r_=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(w.sizeFromShape(a.shape)===0){let p=s.map((u,d)=>u[0]+a.shape[d]+u[1]);return Ed({backend:n,attrs:{shape:p,value:i,dtype:a.dtype}})}let o=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mne(a.shape,s,i):new cne(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},fne={kernelName:Yi,backendName:"webgl",kernelFunc:r_},gne=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,yne=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ro+`
  return result;
`,bne=dn({opSnippet:gne,packedOpSnippet:yne}),xne={kernelName:Qi,backendName:"webgl",kernelFunc:bne};function vne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=[],p=w.parseAxisParam(s,a.shape),u=p,d=T.getAxesPermutation(u,o),h=a;d!=null&&(h=In({inputs:{x:a},backend:n,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,o),l.push(h)),T.assertAxesAreInnerMostDims("prod",u,o);let c;if(n.shouldExecuteOnCPU([h])){let m=n.texData.get(h.dataId).values,{outVals:f,outShape:g,outDtype:y}=gZ(h.shape,h.dtype,m,u);c=n.makeTensorInfo(g,y,f)}else{let[m,f]=T.computeOutAndReduceShapes(h.shape,u),g=w.sizeFromShape(f),y=he({inputs:{x:h},backend:n,attrs:{shape:[-1,g]}}),b=bc(a.dtype),x=Do(y,b,"prod",n);c=he({inputs:{x},backend:n,attrs:{shape:m}}),l.push(y),l.push(x)}if(i){l.push(c);let m=T.expandShapeToKeepDim(c.shape,p);c=he({inputs:{x:c},backend:n,attrs:{shape:m}})}return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var wne={kernelName:to,backendName:"webgl",kernelFunc:vne};function kne(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(y=>n.readSync(y.dataId)),p=a.map(y=>y.shape),u=n.readSync(s.dataId),d=n.readSync(i.dataId),[h,c,m]=yZ(l,p,u,s.shape,s.dtype,d,i.shape,o),f=h.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}var Ine={kernelName:cc,backendName:"webgl",kernelFunc:kne};function Sne(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[p,u]=bZ(i,r.shape,r.dtype,o,a.shape,l,s.shape),d=n.makeTensorInfo([p.length],"int32",p),h=n.makeTensorInfo([u.length],r.dtype,u);return[d,h]}var Nne={kernelName:mc,backendName:"webgl",kernelFunc:Sne};function Tne(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,p=n.readSync(a.dataId),u=n.readSync(s.dataId),d=n.readSync(i.dataId),h=o.map(g=>n.readSync(g.dataId)),c=o.map(g=>g.shape),[m,f]=xZ(p,a.shape,u,s.shape,s.dtype,d,i.shape,h,c,l);return n.makeTensorInfo(m,s.dtype,f)}var _ne={kernelName:fc,backendName:"webgl",kernelFunc:Tne},a_=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=vZ(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Cne={kernelName:Bp,backendName:"webgl",kernelFunc:a_},Ene="return 1.0 / x;",$ne=et({opSnippet:Ene}),Ane={kernelName:no,backendName:"webgl",kernelFunc:$ne},Fne=kr+`
  return (x < 0.0) ? 0.0 : x;
`,Rne=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Dne=et({opSnippet:Fne,packedOpSnippet:Rne}),Mne={kernelName:ro,backendName:"webgl",kernelFunc:Dne},One=kr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Lne=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zne=et({opSnippet:One,packedOpSnippet:Lne}),Pne={kernelName:io,backendName:"webgl",kernelFunc:zne},Bne=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;a?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/u[0]},
          ${p[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Wne=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;a?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/u[0]},
          ${p[1]/u[1]},
          ${p[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Vne(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,p]=o,u=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Wne(a.shape,l,p,s,i):new Bne(a.shape,l,p,s,i);return n.runWebGLProgram(u,[a],"float32")}var Une={kernelName:so,backendName:"webgl",kernelFunc:Vne},Gne=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],p=o[0]/l[0],u=o[1]/l[1],d=1/p,h=1/u,c=Math.ceil(d)*2+2,m=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Hne(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Gne(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var jne={kernelName:nu,backendName:"webgl",kernelFunc:Hne},qne=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",h;a?h="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/u[0]},
          ${p[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Kne=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",h;a?h="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/u[0]},
          ${p[1]/u[1]},
          ${p[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Xne(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,p]=o,u=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Kne(a.shape,l,p,s,i):new qne(a.shape,l,p,s,i);return n.runWebGLProgram(u,[a],a.dtype)}var Zne={kernelName:ao,backendName:"webgl",kernelFunc:Xne},Jne=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],p=o[0]/l[0],u=o[1]/l[1],d=1/p,h=1/u,c=Math.ceil(d)*2+2,m=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Yne(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Jne(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var Qne={kernelName:tu,backendName:"webgl",kernelFunc:Yne},ere=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,a=e.map((i,o)=>r(o)).join(","),s=ct(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}},tre=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=vn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ct(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${a}){
            result.g = ${l(r.slice())};
          }
          if(${s}) {
            result.b = ${p(r.slice())};
            if(${a}) {
              result.a = ${u(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return d(c)}function l(c){return c[n-1]="("+c[n-1]+" + 1)",d(c)}function p(c){return c[n-2]="("+c[n-2]+" + 1)",d(c)}function u(c){return c[n-1]="("+c[n-1]+" + 1)",c[n-2]="("+c[n-2]+" + 1)",d(c)}function d(c){let m=e.map((y,b)=>h(b,c)),f=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${g}))`}function h(c,m){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${m[c]} - 1`:`${m[c]}`}}};function nre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(i===0)return Kn({inputs:{x:a},backend:n});let l=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tre(a.shape,o):new ere(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}var rre={kernelName:oo,backendName:"webgl",kernelFunc:nre},are=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},sre={kernelName:yu,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new are(r.shape,s),[p,u]=T.getImageCenter(i,r.shape[1],r.shape[2]),d=[[p,u,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,d)}},ire=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,ore=et({opSnippet:ire}),lre={kernelName:lo,backendName:"webgl",kernelFunc:ore},ure="return inversesqrt(x);",pre=et({opSnippet:ure,cpuKernelImpl:wZ}),dre={kernelName:uo,backendName:"webgl",kernelFunc:pre},Qx=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=ct(a.length),p=ct(s.length),u="";n===1?u="i":n===2&&(u="i, j");let d=`getIndices(${u})`,h="";r===1?h="i":r===2&&(h="i, coords[1]");let c=`getUpdates(${h})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${p} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${f}, sum, float(found)));
        }
      `}},hre=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=ct(a.length),p=ct(s.length),u="";n===1?u="i":n===2&&(u="i, j");let d=`getIndices(${u})`,h="";r===1?h="i":r===2&&(h="i, coords[1]");let c=`getUpdates(${h})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${p} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${f}, sum, found));
        }
      `}};function cre(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:p,strides:u,outputSize:d}=T.calculateShapes(s,a,i),h=[d/p,p];if(d===0)return n.makeTensorInfo(i,a.dtype);let c=he({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=he({inputs:{x:s},backend:n,attrs:{shape:[l,p]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g;H().getBool("WEBGL_PACK")?g=new hre(l,o,c.shape.length,m.shape.length,u,h):g=new Qx(l,o,c.shape.length,m.shape.length,u,h);let y=n.runWebGLProgram(g,[m,c,f],m.dtype),b=he({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}var mre={kernelName:ru,backendName:"webgl",kernelFunc:cre},fre=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=H().getNumber("WEBGL_VERSION")===2?a:s,o=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function gre(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new fre(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}var yre={kernelName:su,backendName:"webgl",kernelFunc:gre},bre=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let r,a;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)a="resRC",r="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let p=0;p<t.length;p++)l.push(`${i[p]}`),p<e&&o.push(`${i[p]}`);r=o.join(),a=l.join()}let s=ct(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}};function xre(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new bre(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],or(a.dtype,s.dtype))}var vre={kernelName:iu,backendName:"webgl",kernelFunc:xre},wre=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,kre=et({opSnippet:wre}),Ire={kernelName:po,backendName:"webgl",kernelFunc:kre},Sre=Ou+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Nre=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Tre=et({opSnippet:Sre,packedOpSnippet:Nre,cpuKernelImpl:IZ}),_re={kernelName:fo,backendName:"webgl",kernelFunc:Tre},Cre=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Ere=et({opSnippet:Cre}),$re={kernelName:mo,backendName:"webgl",kernelFunc:Ere},Are=Ou+`
  return sin(x);
`,Fre=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Ro}
  return result;
`,Rre=et({opSnippet:Are,packedOpSnippet:Fre}),Dre={kernelName:ho,backendName:"webgl",kernelFunc:Rre},Mre=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Ore=et({opSnippet:Mre}),Lre={kernelName:co,backendName:"webgl",kernelFunc:Ore},zre=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Pre=et({opSnippet:zre}),Bre={kernelName:go,backendName:"webgl",kernelFunc:Pre},Wre=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;w.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let p=[],u=r_({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,s,o,!1),h=T.getPermuted(d.length,s.length,!1),c=T.getReshapedPermuted(u.shape,s,o,!1),m=he({inputs:{x:u},backend:n,attrs:{shape:d}}),f=In({inputs:{x:m},backend:n,attrs:{perm:h}}),g=he({inputs:{x:f},backend:n,attrs:{shape:c}});return p.push(u),p.push(m),p.push(f),p.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},Vre={kernelName:lu,backendName:"webgl",kernelFunc:Wre};function Ure(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),p=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[d,h,c,m,f]=NZ(o,r.shape,r.dtype,l,a.dtype,p,u);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var Gre={kernelName:Wp,backendName:"webgl",kernelFunc:Ure};function Hre(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[p,u,d]=TZ(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(u,r.dtype,p),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}var jre={kernelName:pu,backendName:"webgl",kernelFunc:Hre};function qre(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[p,u]=TT(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(u,r.dtype,p)}var Kre={kernelName:Vp,backendName:"webgl",kernelFunc:qre};function Xre(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[p,u]=TT(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(u,r.dtype,p)}var Zre={kernelName:Up,backendName:"webgl",kernelFunc:Xre};function Jre(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:p,sliceSize:u,strides:d,outputSize:h}=T.calculateShapes(s,a,o),c=!1;if(s.dtype==="string"){let y=n.bufferSync(a),b=n.bufferSync(s),x=w.decodeString(n.readSync(i.dataId)[0]),v=kZ(y,b,o,h,u,p,l,d,x,c);return n.makeTensorInfo(o,v.dtype,v.values)}let m=new Qx(p,l,a.shape.length,s.shape.length,d,[h,1],c),f=n.runWebGLProgram(m,[s,a,i],s.dtype),g=he({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),g}var Yre={kernelName:du,backendName:"webgl",kernelFunc:Jre};function Qre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),p=a.shape.length,u=new Array(p).fill(0),d=a.shape.slice();return l.map(h=>{let c=[...d];c[o]=h;let m=Lu({inputs:{x:a},backend:n,attrs:{begin:u,size:c}});return u[o]+=h,m})}var eae={kernelName:uu,backendName:"webgl",kernelFunc:Qre},b0="return sqrt(x);",tae=et({opSnippet:b0,packedOpSnippet:b0,cpuKernelImpl:_Z}),nae={kernelName:yo,backendName:"webgl",kernelFunc:tae},rae="return x * x;",aae=et({opSnippet:rae}),sae={kernelName:Gp,backendName:"webgl",kernelFunc:aae},x0="return (a - b) * (a - b);",iae=dn({opSnippet:x0,packedOpSnippet:x0}),oae={kernelName:vo,backendName:"webgl",kernelFunc:iae};function lae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=T.fromUint8ToStringArray(s),o=CZ(i,"string",r);return n.makeTensorInfo(a.shape,"string",o)}var uae={kernelName:Hp,backendName:"webgl",kernelFunc:lae};function pae({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=kr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Hr(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}var dae={kernelName:is,backendName:"webgl",kernelFunc:pae},hae=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=ct(n.length),s=ct(n.length),i="";if(r===1)i="coords * strides + begin";else{let o=0;i=n.map((l,p)=>(o++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${o-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function cae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:p,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Gt.sliceInfo(a.shape,s,i,o,l,p,u,d,h),I;if(f)I=he({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let C=Gt.computeOutShape(b,x,v),E=Lu({inputs:{x:a},backend:n,attrs:{begin:b,size:C}});I=he({inputs:{x:E},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([a])){let C=n.readSync(a.dataId),E=Ve(a.shape,a.dtype,C),A=EZ(c,E,v,b);I=n.makeTensorInfo(m,a.dtype,A.values)}else{let C=new hae(b,v,c);I=n.runWebGLProgram(C,[a],a.dtype)}let N=he({inputs:{x:I},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(I),N}var mae={kernelName:hu,backendName:"webgl",kernelFunc:cae};function fae(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:p}=r,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),c=n.readSync(d.dataId),[m,f]=$Z(h,c,a,s,i,o,l,p);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",f)]}var gae={kernelName:jp,backendName:"webgl",kernelFunc:fae};function yae(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[p,u,d]=AZ(o,l,a),h=u.length;return[n.makeTensorInfo([h,2],"int32",p),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var bae={kernelName:qp,backendName:"webgl",kernelFunc:yae};function xae(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=FZ(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var vae={kernelName:Kp,backendName:"webgl",kernelFunc:xae},wae="return tan(x);",kae=et({opSnippet:wae}),Iae={kernelName:ko,backendName:"webgl",kernelFunc:kae},Sae=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Nae=et({opSnippet:Sae}),Tae={kernelName:Io,backendName:"webgl",kernelFunc:Nae};function _ae(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{sliceRank:o,numUpdates:l,sliceSize:p,strides:u,outputSize:d}=T.calculateShapes(i,s,a.shape),h=[d/p,p];if(d===0)return n.makeTensorInfo(a.shape,s.dtype);let c=he({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=he({inputs:{x:i},backend:n,attrs:{shape:[l,p]}}),f=he({inputs:{x:a},backend:n,attrs:{shape:h}}),g=new Qx(l,o,c.shape.length,m.shape.length,u,h,!1,!0),y=n.runWebGLProgram(g,[m,c,f],f.dtype),b=he({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}var Cae={kernelName:au,backendName:"webgl",kernelFunc:_ae},Eae=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=ct(this.rank),a=$ae(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function $ae(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}function s_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if(a.dtype==="string"||a.shape.length>5){let o=n.readSync(a.dataId),l=a.dtype==="string"?o.map(d=>w.decodeString(d)):o,p=Ve(a.shape,a.dtype,l),u=DZ(p,s);return n.makeTensorInfo(u.shape,u.dtype,u.values)}let i=new Eae(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var Aae={kernelName:ss,backendName:"webgl",kernelFunc:s_},Fae=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Rae=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function ks(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function v0(e){let t=1;for(;t<e;)t*=2;return t}function Dae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),p=a.shape,u=p[p.length-1];if(n.shouldExecuteOnCPU([a])||u<o||s>l){let A=n.readSync(a.dataId),[R,F]=MZ(A,p,a.dtype,s,i);return[n.makeTensorInfo(R.shape,R.dtype,R.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(s===0)return p[p.length-1]=0,[n.makeTensorInfo(p,a.dtype,[]),n.makeTensorInfo(p,"int32",[])];if(u===1)return[a,Ed({attrs:{shape:p,dtype:"int32",value:0},backend:n})];let d=n.texData.get(a.dataId),h=d!==null&&d.isPacked,c=h?n.unpackTensor(a):a,m=w.sizeFromShape(p)/u,f=he({inputs:{x:c},attrs:{shape:[m,u]},backend:n});h&&ks(n,c);let g=v0(s),y=v0(u),b=null,x=()=>b===null?[f,f]:[f,b],v=(A,R,F)=>{let S=x(),D=new Fae(F),P=[[u],[b===null?1:0],[Number.NEGATIVE_INFINITY],[A],[R]],U=b;b=n.runWebGLProgram(D,S,"int32",P),ks(n,U)};for(let A=1;A<g;A*=2){let R=A*2;for(let F=A;F>=1;F/=2)v(R,F,[m,y])}for(let A=y;A>g;A/=2){let R=x(),F=new Rae([m,A/2]),S=[[u],[b===null?1:0],[g]],D=b;b=n.runWebGLProgram(F,R,"int32",S),ks(n,D);let P=g/2,U=P*2;for(let G=P;G>=1;G/=2)v(U,G,b.shape)}let I=b;b=Lu({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,s]}}),ks(n,I);let N=JT({inputs:{x:f,indices:b},backend:n,attrs:{axis:1,batchDims:1}});ks(n,f);let C=p.slice(0,-1);C.push(s),I=b,b=he({inputs:{x:b},attrs:{shape:C},backend:n}),ks(n,I);let E=N;return N=he({inputs:{x:N},attrs:{shape:C},backend:n}),ks(n,E),[N,b]}var Mae={kernelName:cu,backendName:"webgl",kernelFunc:Dae},Oae=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=n==="nearest"?1:2,o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Lae(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:p}=r,[u,d,h,c]=a.shape,[m,f]=p??[d,h],g=[u,m,f,c],y=new Oae(d,h,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}var zae={kernelName:mu,backendName:"webgl",kernelFunc:Lae};function Pae(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;$u(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:p}=OZ(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([p.length],"int32",p)]}var Bae={kernelName:Xp,backendName:"webgl",kernelFunc:Pae};function Wae(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],p=new Array(o-1),u=0;for(let f=0;f<o;f++)f!==s&&(p[u++]=i.shape[f]);let d=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let m=new Array(l);for(let f=0;f<m.length;f++){h[s]=f;let g=Lu({inputs:{x:i},backend:n,attrs:{begin:h,size:c}}),y=he({inputs:{x:g},backend:n,attrs:{shape:p}});m[f]=y,d.push(g)}return d.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var Vae={kernelName:fu,backendName:"webgl",kernelFunc:Wae},Uae=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o="0.0",l="sumValue",p=Math.floor(n/4)*4,u=n%4,d=`
        sumValue += dot(values, segFilter);
    `,h="";a%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${p};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function Gae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],p=0,u=T.getAxesPermutation([p],o),d=a;u!=null&&(d=In({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(d),p=T.getInnerMostAxes(1,o)[0]);let h=T.segment_util.computeOutShape(d.shape,p,i),c=w.sizeFromShape([d.shape[p]]),m=he({inputs:{x:d},backend:n,attrs:{shape:[-1,c]}});l.push(m);let f=bc(a.dtype),g=(v,I,N,C,E)=>{let A=v.shape[0],R=v.shape[1],F=T.segment_util.segOpComputeOptimalWindowSize(R,E),S={windowSize:F,inSize:R,batchSize:A,numSegments:E},D=new Uae(S,I),P=n.compileAndRun(D,[v,N],C);if(l.push(P),P.shape[1]===E)return P;let U=a_({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),G=s_({inputs:{x:U},backend:n,attrs:{reps:[R/F]}});return l.push(U),l.push(G),g(P,I,G,C,E)},y=g(m,"unsortedSegmentSum",s,f,i),b=he({inputs:{x:y},backend:n,attrs:{shape:h}}),x=b;if(u!=null){l.push(b);let v=T.getUndoAxesPermutation(u);x=In({inputs:{x},backend:n,attrs:{perm:v}})}return l.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}var Hae={kernelName:Zp,backendName:"webgl",kernelFunc:Gae},jae=[EJ,AJ,DJ,LJ,PJ,VJ,GJ,jJ,ZJ,YJ,t9,a9,o9,d9,m9,g9,b9,k9,S9,T9,$9,L9,P9,U9,H9,J9,Q9,rY,hJ,iY,dY,fY,wY,SY,TY,CY,$Y,DY,LY,BY,VY,GY,jY,XY,JY,tQ,rQ,iQ,uQ,dQ,fQ,xQ,IQ,TQ,EQ,$Q,FQ,DQ,OQ,zQ,BQ,GQ,qQ,ZQ,YQ,tee,aee,lee,hee,dJ,mee,uY,yee,vee,Iee,mJ,_ee,Aee,Ree,Lee,Bee,Gee,qee,Jee,tte,ate,ite,pte,hte,mte,bte,vte,kte,Ste,Tte,$te,Dte,zte,jte,yJ,Zte,Qte,nne,sne,q9,lne,pne,hne,fne,xne,gJ,wne,Ine,Nne,_ne,Cne,K9,Vte,Ane,Mne,Pne,xJ,Une,jne,Zne,Qne,rre,sre,lre,dre,mre,yre,vre,Ire,_re,$re,Dre,Lre,M9,Gte,Bre,Vre,Gre,jre,Kre,Zre,Yre,eae,nae,sae,oae,uae,dae,mae,gae,bae,vae,Ute,TJ,Iae,Tae,Cae,Aae,Mae,zae,_J,Bae,Vae,Hae,une];for(let e of jae)Jp(e);var nt;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(nt||(nt={}));var Np;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(Np||(Np={}));var i_;function qae(e){i_=e.wasm.cwrap(zs,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Kae(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:p,activation:u,leakyreluAlpha:d}=r,h=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,m=0;if(i!=null){let E=n.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);m=E.id}let f=o==null?0:n.dataIdMap.get(o.dataId).id,g=Np[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=p?s.shape[1]:s.shape[2],x=bu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),I=n.dataIdMap.get(v.dataId).id,N=new Uint8Array(new Int32Array(a.shape).buffer),C=new Uint8Array(new Int32Array(s.shape).buffer);return i_(h,N,a.shape.length,c,C,s.shape.length,l,p,g,m,f,d||0,I),v}var Xae={kernelName:zs,backendName:"wasm",setupFunc:qae,kernelFunc:Kae};function Qe(e,t){let n;function r(s){n=s.wasm.cwrap(e,null,["number","number","number"])}function a(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,p=i.makeOutput(o.shape,t||o.dtype),u=i.dataIdMap.get(p.dataId).id;return w.sizeFromShape(p.shape)===0||n(l,nt[o.dtype],u),p}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Zae=Qe(gl),Jae=Qe(si),Yae=Qe(ii);function Bt(e,t,n){let r;function a(i){r=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:p,b:u}=l,d=o.dataIdMap.get(p.dataId).id,h=o.dataIdMap.get(u.dataId).id,c=n??p.dtype,m=T.assertAndGetBroadcastShape(p.shape,u.shape),f=o.makeOutput(m,c);if(w.sizeFromShape(m)===0)return f;let g=new Uint8Array(new Int32Array(p.shape).buffer),y=new Uint8Array(new Int32Array(u.shape).buffer),b=o.dataIdMap.get(f.dataId).id;return r(d,g,p.shape.length,h,y,u.shape.length,nt[p.dtype],b),f}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var Qae=Bt(rs),o_;function ese(e){o_=e.wasm.cwrap(oi,null,["array","number","number","number"])}function tse(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(r.shape)===0)return r;let a=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return o_(s,a.length,nt[r.dtype],i),r}var nse={kernelName:oi,backendName:"wasm",setupFunc:ese,kernelFunc:tse};function _m(e){let{inputs:{x:t},backend:n}=e;if(t.dtype==="string")return wn(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var rse={kernelName:Di,backendName:"wasm",kernelFunc:_m},l_;function ase(e){l_=e.wasm.cwrap(pa,null,["number","array","number","number","number","array","number"])}function es(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=ise(t.x.shape,r.perm),i=!0;for(let m=0;m<s.length;m++)s[m]!==m&&(i=!1);let o=sse(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let m=_m({inputs:t,backend:n});return m.shape=o,m}let p=n.makeOutput(o,l.dtype),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(p.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return l_(u,c,l.shape.length,nt[l.dtype],d,h,s.length),p}function sse(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function ise(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)e[a]!==1&&n.push(e[a]),e[t[a]]!==1&&r.push(t[a]);for(let a=0;a<r.length;++a){let s=-1;for(let i=0;i<r.length;++i)r[i]>=a&&(s===-1||r[s]>r[i])&&(s=i);r[s]=a}return[n,r]}var ose={kernelName:pa,backendName:"wasm",kernelFunc:es,setupFunc:ase};function ms(e,t,n){let r=e.shape,a=e.shape.length,s=w.parseAxisParam(t,r),i=s,o=T.getAxesPermutation(i,a),l=null,p=!1;if(o!=null){let u=new Array(a);for(let h=0;h<u.length;h++)u[h]=r[o[h]];i=T.getInnerMostAxes(i.length,a),l=es({inputs:{x:e},attrs:{perm:o},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==d&&(p=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:p}}var u_;function lse(e){u_=e.wasm.cwrap(yl,null,["number, number, number"])}function use(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:u,originalAxes:d,inputWasTransposed:h}=ms(i,a,t);if(h){let b=t.dataIdMap.get(p.dataId).id;l=p,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("all",u,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,u),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;u_(o,g,b)}if(h&&t.disposeData(p.dataId),s){let b=T.expandShapeToKeepDim(y.shape,d);y.shape=b}return y}var pse={kernelName:yl,backendName:"wasm",setupFunc:lse,kernelFunc:use},p_;function dse(e){p_=e.wasm.cwrap(bl,null,["number, number, number"])}function hse(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:u,originalAxes:d,inputWasTransposed:h}=ms(i,a,t);if(h){let b=t.dataIdMap.get(p.dataId).id;l=p,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("any",u,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,u),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;p_(o,g,b)}if(h&&t.disposeData(p.dataId),s){let b=T.expandShapeToKeepDim(y.shape,d);y.shape=b}return y}var cse={kernelName:bl,backendName:"wasm",setupFunc:dse,kernelFunc:hse};function d_(e){let t;function n(a){t=a.wasm.cwrap(e,null,["number","number","number","number","number"])}function r(a){let{backend:s,inputs:i,attrs:o}=a,{axis:l}=o,{x:p}=i,u=s.dataIdMap.get(p.dataId).id,d=u,h=p,{transposed:c,axes:m,inputWasTransposed:f}=ms(p,l,s);if(f){let I=s.dataIdMap.get(c.dataId).id;I!==u&&(h=c,d=I)}let g=h.shape.slice(0,-1),y=s.makeOutput(g,"int32"),b=s.dataIdMap.get(y.dataId).id,x=w.sizeFromShape(y.shape),v=h.shape[m[0]];return t(d,nt[h.dtype],x,v,b),f&&s.disposeData(c.dataId),y}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:r}}var mse=d_(xl),fse=d_(vl),gse=Qe(li),yse=Qe(ui),bse=Qe(pi),xse=Bt(hi),vse=Qe(di),h_;function wse(e){h_=e.wasm.cwrap(ci,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function kse(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=n,u=T.computePool2DInfo(a.shape,i,o,1,l,p),d=u.filterHeight,h=u.filterWidth,c=u.padInfo.top,m=u.padInfo.right,f=u.padInfo.bottom,g=u.padInfo.left,y=u.strideHeight,b=u.strideWidth,x=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let v=r.makeOutput(u.outShape,"float32"),I=r.dataIdMap.get(v.dataId).id;return h_(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,m,f,g,y,b,x,I),v}var Ise={kernelName:ci,backendName:"wasm",setupFunc:wse,kernelFunc:kse},c_;function Sse(e){c_=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Nse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:p}=r,u=T.computePool3DInfo(a.shape,s,i,1,o,l,p),d=n.makeOutput(u.outShape,a.dtype);return c_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inDepth,u.inHeight,u.inWidth,u.outDepth,u.outHeight,u.outWidth,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}var Tse={kernelName:wl,backendName:"wasm",setupFunc:Sse,kernelFunc:Nse},m_;function _se(e){m_=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Cse(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=r,u=T.computePool3DInfo(s.shape,i,o,1,l,p),d=n.makeOutput(s.shape,s.dtype);return m_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inDepth,u.inHeight,u.inWidth,u.outDepth,u.outHeight,u.outWidth,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left,u.filterDepth,u.filterHeight,u.filterWidth),d}var Ese={kernelName:Ap,backendName:"wasm",setupFunc:_se,kernelFunc:Cse},f_;function $se(e){f_=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ase(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l}=r,p=T.computePool2DInfo(s.shape,i,o,1,l),u=n.makeOutput(s.shape,s.dtype);return f_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left,p.filterHeight,p.filterWidth),u}var Fse={kernelName:$p,backendName:"wasm",setupFunc:$se,kernelFunc:Ase};function Fn(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(a,s);return w.assert(s===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var Rse={kernelName:eu,backendName:"wasm",kernelFunc:Fn},g_;function Dse(e){g_=e.wasm.cwrap(mi,null,["number","array","number","number","array","number","number","number","number"])}function Mse(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,p=s.shape.length,u=i?a.shape[l-2]:a.shape[l-1],d=o?s.shape[p-1]:s.shape[p-2],h=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[p-2]:s.shape[p-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=w.sizeFromShape(m),y=w.sizeFromShape(f),b=bu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);w.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,u,h]:[g,h,u],v=o?[y,c,d]:[y,d,c],I=Fn({inputs:{x:a},backend:n,attrs:{shape:x}}),N=Fn({inputs:{x:s},backend:n,attrs:{shape:v}}),C=n.dataIdMap.get(I.dataId).id,E=n.dataIdMap.get(N.dataId).id,A=i?I.shape[2]:I.shape[1],R=o?N.shape[1]:N.shape[2],F=Math.max(g,y),S=n.makeOutput([F,A,R],I.dtype),D=n.dataIdMap.get(S.dataId).id,P=new Uint8Array(new Int32Array(I.shape).buffer),U=new Uint8Array(new Int32Array(N.shape).buffer);return g_(C,P,I.shape.length,E,U,N.shape.length,i,o,D),n.disposeData(I.dataId),n.disposeData(N.dataId),S.shape=b,S}var Ose={kernelName:mi,backendName:"wasm",setupFunc:Dse,kernelFunc:Mse};function ni(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Gt.parseSliceParams(t,n,r),o=Gt.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),p=a.makeOutput(i,t.dtype),u=w.computeStrides(t.shape),d=a.dataIdMap.get(p.dataId);if(o){let m=Gt.computeFlatOffset(s,u);return t.dtype==="string"?d.stringBytes=l.slice(m,m+w.sizeFromShape(i)):a.typedArrayFromHeap(p).set(l.subarray(m,m+w.sizeFromShape(i))),p}if(t.dtype==="string"){let m=Gh(l,s,i,t.shape,t.dtype);return d.stringBytes=m,p}let h=a.typedArrayFromHeap(p),c=t.shape.length;if(c===2)Lse(l,u[0],h,s,i);else if(c===3)zse(l,u[0],u[1],h,s,i);else if(c===4)Pse(l,u[0],u[1],u[2],h,s,i);else{let m=Gh(l,s,i,t.shape,t.dtype);h.set(m)}return p}function Lse(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let p=i;p<l;p++){let u=p*t+o;n.set(e.subarray(u,u+a[1]),s),s+=a[1]}}function zse(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],p=a[2],u=o+s[0],d=l+s[1];for(let h=o;h<u;h++)for(let c=l;c<d;c++){let m=h*t+c*n+p;r.set(e.subarray(m,m+s[2]),i),i+=s[2]}}function Pse(e,t,n,r,a,s,i){let o=0,l=s[0],p=s[1],u=s[2],d=l+i[0],h=p+i[1],c=u+i[2],m=s[3];for(let f=l;f<d;f++)for(let g=p;g<h;g++)for(let y=u;y<c;y++){let b=f*t+g*n+y*r+m;a.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var Bse={kernelName:ou,backendName:"wasm",kernelFunc:ni};function Wse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),p=T.getPermuted(l.length,s.length),u=T.getReshapedPermuted(a.shape,s,o),d=T.getSliceBeginCoords(i,s.length),h=T.getSliceSize(u,i,s.length),c=Fn({inputs:{x:a},backend:n,attrs:{shape:l}}),m=es({inputs:{x:c},backend:n,attrs:{perm:p}}),f=Fn({inputs:{x:m},backend:n,attrs:{shape:u}}),g=ni({inputs:{x:f},backend:n,attrs:{begin:d,size:h}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(f.dataId),g}var Vse={kernelName:kl,backendName:"wasm",kernelFunc:Wse},y_;function Use(e){y_=e.wasm.cwrap(Il,null,["number","number","boolean","number","number","number"])}function Gse(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=s.shape.reduce((d,h)=>d*h,1)!==0,l=a.shape.length===1?[i]:[a.shape[0],i],p=t.makeOutput(l,s.dtype);function u(d){return t.dataIdMap.get(d.dataId).id}return y_(u(a),i,o,u(s),nt[s.dtype],u(p)),p}var Hse={kernelName:Il,backendName:"wasm",setupFunc:Use,kernelFunc:Gse},jse=Bt(Sl);function qse(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}var Kse={kernelName:Fp,backendName:"wasm",kernelFunc:qse};function fs(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var Xse={kernelName:fi,backendName:"wasm",kernelFunc:fs},Zse=Qe(gi),b_;function Jse(e){b_=e.wasm.cwrap(as,null,["number","number","number","number"])}function Yse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(l.dataId).id;return b_(o,s,i,p),l}var Qse={kernelName:as,backendName:"wasm",setupFunc:Jse,kernelFunc:Yse};function x_(e){let{inputs:t,backend:n}=e,r=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(c=>c.shape);T.assertParamsConsistent(a,r);let s=T.computeOutShape(t.map(c=>c.shape),r),i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return _m({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(w.sizeFromShape(s)===0)return o;if(i[0].dtype==="string"){let c=i.map(x=>{let v=[-1,w.sizeFromShape(x.shape.slice(r))];return Fn({inputs:{x},backend:n,attrs:{shape:v}})}),m=c.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));s=T.computeOutShape(c.map(x=>x.shape),1);let f=c[0].shape[0]===1,g=Nx(m,s,t[0].dtype,f),y=T.computeOutShape(i.map(x=>x.shape),r);o.shape=y;let b=n.dataIdMap.get(o.dataId);return b.stringBytes=T.fromStringArrayToUint8(g),c.forEach(x=>n.disposeData(x.dataId)),o}let l=w.sizeFromShape(i[0].shape.slice(0,r)),p=0,u=i.map(c=>{let m=w.sizeFromShape(c.shape.slice(r));return p+=m,m}),d=i.map(c=>n.typedArrayFromHeap(c)),h=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let m=c*p;for(let f=0;f<d.length;f++){let g=u[f],y=c*g,b=d[f].subarray(y,y+g);h.set(b,m),m+=g}}return o}var eie={kernelName:Nl,backendName:"wasm",kernelFunc:x_},v_;function tie(e){v_=e.wasm.cwrap(yi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function nie(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:p,pad:u,dimRoundingMode:d,dataFormat:h}=n,c=T.convertConv2DDataFormat(h),m=T.computeConv2DInfo(a.shape,s.shape,l,p,u,d,!1,c),f=m.filterHeight,g=m.filterWidth,y=m.padInfo.top,b=m.padInfo.right,x=m.padInfo.bottom,v=m.padInfo.left,I=m.dilationHeight,N=m.dilationWidth,C=m.strideHeight,E=m.strideWidth,A=m.inChannels,R=m.outChannels,F=m.padInfo.type==="SAME"?1:0;if(m.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);let S=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(S.dataId).id;return v_(i,a.shape[0],a.shape[1],a.shape[2],o,f,g,y,b,x,v,F,I,N,C,E,A,R,D),S}var rie={kernelName:yi,backendName:"wasm",setupFunc:tie,kernelFunc:nie},w_;function aie(e){w_=e.wasm.cwrap(bi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sie(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:p,inputShape:u}=r,d=1,h=T.convertConv2DDataFormat(l),c=T.computeConv2DInfo(u,s.shape,i,d,o,p,!1,h),{batchSize:m,filterHeight:f,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:v,outHeight:I,outWidth:N,strideHeight:C,strideWidth:E}=c,A=f-1-c.padInfo.top,R=g-1-c.padInfo.left,F=c.dataFormat==="channelsLast",S=w.computeStrides(c.inShape),D=w.computeStrides(a.shape),[P,U,G]=w.computeStrides(s.shape),K=S[0],j=F?S[1]:S[2],Z=F?S[2]:1,ee=F?1:S[1],X=D[0],re=F?D[1]:D[2],te=F?D[2]:1,ae=F?1:D[1],oe=t.makeOutput(c.inShape,"float32"),we=t.dataIdMap.get(oe.dataId).id,ve=t.dataIdMap.get(a.dataId).id,ce=t.dataIdMap.get(s.dataId).id;return w_(ve,ce,m,f,g,b,x,y,I,N,v,C,E,A,R,P,U,G,K,j,Z,ee,X,re,te,ae,we),oe}var iie={kernelName:bi,backendName:"wasm",setupFunc:aie,kernelFunc:sie},k_;function oie(e){k_=e.wasm.cwrap(xi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let p=T.computeConv3DInfo(a.shape,s.shape,i,l,o),u=n.makeOutput(p.outShape,a.dtype);return k_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(u.dataId).id,p.batchSize,p.inDepth,p.inHeight,p.inWidth,p.inChannels,p.outDepth,p.outHeight,p.outWidth,p.outChannels,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.filterDepth,p.filterHeight,p.filterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),u}var uie={kernelName:xi,backendName:"wasm",setupFunc:oie,kernelFunc:lie},I_;function pie(e){I_=e.wasm.cwrap(Tl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function die(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let p=T.computeConv3DInfo(a.shape,l,i,1,o),u=n.makeOutput(p.filterShape,s.dtype);return I_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(u.dataId).id,p.batchSize,p.inDepth,p.inHeight,p.inWidth,p.inChannels,p.outDepth,p.outHeight,p.outWidth,p.outChannels,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.filterDepth,p.filterHeight,p.filterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),u}var hie={kernelName:Tl,backendName:"wasm",setupFunc:pie,kernelFunc:die},S_;function cie(e){S_=e.wasm.cwrap(_l,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mie(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let p=T.computeConv3DInfo(l,s.shape,o,1,i),u=n.makeOutput(p.inShape,a.dtype);return S_(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,p.batchSize,p.inDepth,p.inHeight,p.inWidth,p.inChannels,p.outDepth,p.outHeight,p.outWidth,p.outChannels,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.filterDepth,p.filterHeight,p.filterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),u}var fie={kernelName:_l,backendName:"wasm",setupFunc:cie,kernelFunc:mie},gie=Qe(vi),yie=Qe(wi),Qf;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(Qf||(Qf={}));var N_;function bie(e){N_=e.wasm.cwrap(El,null,["number","number","number","number","array","number","number","number","number","number"])}function xie(e){let{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:p}=n,u=l.shape[0],[d,h]=i,c=[u,d,h,o.shape[3]],m=t.dataIdMap.get(o.dataId),f;o.dtype!=="float32"&&(f=fs({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));let g=m.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(p.dataId).id,x=t.makeOutput(c,"float32"),v=t.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(o.shape).buffer);return N_(g,y,b,u,I,d,h,Qf[a],s,v),f!=null&&t.disposeData(f.dataId),x}var vie={kernelName:El,backendName:"wasm",setupFunc:bie,kernelFunc:xie},T_;function wie(e){T_=e.wasm.cwrap(Cl,null,["number","number","number","number","number","number"])}function kie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;w.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let p=T.getAxesPermutation([s],l),u=a;p!==null&&(u=es({inputs:{x:a},attrs:{perm:p},backend:n}));let d=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[d],l);let h=n.makeOutput(u.shape,u.dtype),c=u.shape[d],m=n.dataIdMap.get(u.dataId).id,f=n.dataIdMap.get(h.dataId).id;T_(m,i?1:0,o?1:0,c,f,nt[a.dtype]);let g=h;if(p!==null){let y=T.getUndoAxesPermutation(p);g=es({inputs:{x:h},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(h.dataId)}return g}var Iie={kernelName:Cl,backendName:"wasm",setupFunc:wie,kernelFunc:kie},__;function Sie(e){__=e.wasm.cwrap(ki,null,["number","number","number","number","number","number"])}function Nie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;w.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let p=T.getAxesPermutation([s],l),u=a;p!==null&&(u=es({inputs:{x:a},attrs:{perm:p},backend:n}));let d=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[d],l);let h=n.makeOutput(u.shape,u.dtype),c=u.shape[d],m=n.dataIdMap.get(u.dataId).id,f=n.dataIdMap.get(h.dataId).id;__(m,i?1:0,o?1:0,c,f,nt[a.dtype]);let g=h;if(p!==null){let y=T.getUndoAxesPermutation(p);g=es({inputs:{x:h},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(h.dataId)}return g}var Tie={kernelName:ki,backendName:"wasm",setupFunc:Sie,kernelFunc:Nie},C_;function _ie(e){C_=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function Cie(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,l=s.shape.reduce((h,c)=>h*c,1)!==0,p=a.shape.length===1?[i]:[a.shape[0],i],u=t.makeOutput(p,s.dtype);function d(h){return t.dataIdMap.get(h.dataId).id}return C_(d(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,l,d(s),nt[s.dtype],o,d(u)),u}var Eie={kernelName:Dp,backendName:"wasm",setupFunc:_ie,kernelFunc:Cie},E_;function $ie(e){E_=e.wasm.cwrap($l,null,["number","number","number","array","number","array","array","number","number"])}function Aie(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],p=i==="NHWC"?a.shape[2]:a.shape[3],u=i==="NHWC"?a.shape[3]:a.shape[1],d=l*s,h=p*s,c=u/(s*s),m=i==="NHWC"?[o,d,h,c]:[o,c,d,h],f=t.makeOutput(m,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(m).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer),v=t.dataIdMap.get(f.dataId).id;return E_(g,s,i==="NHWC"?1:0,y,a.shape.length-1,b,x,m.length,v),f}var Fie={kernelName:$l,backendName:"wasm",setupFunc:$ie,kernelFunc:Aie},$_;function Rie(e){$_=e.wasm.cwrap(Ii,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Die(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:p,pad:u,dimRoundingMode:d}=n,h=p??[1,1],c=T.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!0),m=c.filterHeight,f=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,I=c.dilationWidth,N=c.strideHeight,C=c.strideWidth,E=c.inChannels,A=c.outChannels,R=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let F=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(F.dataId).id;return $_(i,a.shape[0],a.shape[1],a.shape[2],o,m,f,g,y,b,x,R,v,I,N,C,E,A,S),F}var Mie={kernelName:Ii,backendName:"wasm",setupFunc:Rie,kernelFunc:Die},A_;function Oie(e){A_=e.wasm.cwrap("Diag",null,["number","number","number","number"])}function Lie(e){let{inputs:t,backend:n}=e,{x:r}=t,a=w.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return A_(n.dataIdMap.get(r.dataId).id,nt[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}var zie={kernelName:Mp,backendName:"wasm",setupFunc:Oie,kernelFunc:Lie},F_;function Pie(e){F_=e.wasm.cwrap(Si,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Bie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let p=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),u=n.makeOutput(p.outShape,a.dtype);return F_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(u.dataId).id,nt[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),u}var Wie={kernelName:Si,backendName:"wasm",setupFunc:Pie,kernelFunc:Bie},R_;function Vie(e){R_=e.wasm.cwrap(Qo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Uie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:p}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let u=T.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",p),d=n.makeOutput(s.shape,s.dtype);return R_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,nt[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}var Gie={kernelName:Qo,backendName:"wasm",setupFunc:Vie,kernelFunc:Uie},D_;function Hie(e){D_=e.wasm.cwrap(Yo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function jie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:p}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let u=T.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",p),d=n.makeOutput(a.shape,a.dtype);return D_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,nt[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}var qie={kernelName:Yo,backendName:"wasm",setupFunc:Hie,kernelFunc:jie},Kie=Qe(Ti),M_;function Xie(e){M_=e.wasm.cwrap(Al,null,["number","number","number"])}function Zie(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=o=>n.dataIdMap.get(o.dataId).id;return M_(i(a),i(r),i(s)),s}var Jie={kernelName:Al,backendName:"wasm",setupFunc:Xie,kernelFunc:Zie},Yie=!1,Qie=Bt(Fl,Yie,"bool"),eoe=Qe(_i),toe=Qe(Ci,"float32");function eg(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Fn({inputs:{x:a},backend:r,attrs:{shape:o}})}var noe={kernelName:Rl,backendName:"wasm",kernelFunc:eg},roe=Qe(Ei,"float32");function O_(e){let{attrs:{shape:t,value:n},backend:r}=e,{attrs:{dtype:a}}=e;a=a||w.inferDtype(n);let s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var aoe={kernelName:Op,backendName:"wasm",kernelFunc:O_},L_;function soe(e){L_=e.wasm.cwrap(Dl,null,["number","number","number","number","number","number"])}function ioe(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,p,u]=r.shape;return L_(s,o,l,p,u,i),a}var ooe={kernelName:Dl,backendName:"wasm",kernelFunc:ioe,setupFunc:soe},loe=Qe($i),uoe=Bt(Ai),z_;function poe(e){z_=e.wasm.cwrap(Fi,null,["number","number","number","number","number","number","number"])}function doe(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:p}=n,u=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,c=l!=null?t.dataIdMap.get(l.dataId).id:0,m=p!=null?t.dataIdMap.get(p.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(w.sizeFromShape(s.shape)===0)return f;let g=t.dataIdMap.get(f.dataId).id;return z_(u,d,h,c,m,a,g),f}var hoe={kernelName:Fi,backendName:"wasm",setupFunc:poe,kernelFunc:doe},P_;function coe(e){P_=e.wasm.cwrap(Ps,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function moe(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dilations:u,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=n,f=T.computeConv2DInfo(a.shape,s.shape,l,u,p,h),g=Np[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);v=te.id}let I=f.filterHeight,N=f.filterWidth,C=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,D=f.strideHeight,P=f.strideWidth,U=f.inChannels,G=f.padInfo.type==="SAME"?1:0,K=f.batchSize,j=f.inHeight,Z=f.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let ee=r.makeOutput(f.outShape,"float32"),X=r.dataIdMap.get(ee.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return P_(y,K,j,Z,b,I,N,v,C,E,A,R,G,F,S,D,P,U,x,g,re,m||0,X),ee}var foe={kernelName:Ps,backendName:"wasm",setupFunc:coe,kernelFunc:moe},B_;function goe(e){B_=e.wasm.cwrap(Bs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yoe(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dilations:u,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=n,f=T.computeConv2DInfo(a.shape,s.shape,l,u,p,h,!0),g=Np[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);v=te.id}let I=f.filterHeight,N=f.filterWidth,C=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,D=f.strideHeight,P=f.strideWidth,U=f.inChannels,G=f.padInfo.type==="SAME"?1:0,K=f.batchSize,j=f.inHeight,Z=f.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let ee=r.makeOutput(f.outShape,"float32"),X=r.dataIdMap.get(ee.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return B_(y,K,j,Z,b,I,N,v,C,E,A,R,G,F,S,D,P,U,x,g,re,m||0,X),ee}var boe={kernelName:Bs,backendName:"wasm",setupFunc:goe,kernelFunc:yoe},W_;function xoe(e){W_=e.wasm.cwrap(Ol,null,["number","number","number","number","number","number","array","number"])}function voe(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Ly.prepareAndValidate(r,a),p=t.makeOutput(s,r.dtype);if(i===0)return p;let u=a.shape,d=u[u.length-1],h=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),f=t.dataIdMap.get(p.dataId).id;return W_(h,nt[r.dtype],c,i,d,o,m,f),p}var woe={kernelName:Ol,backendName:"wasm",setupFunc:xoe,kernelFunc:voe},V_;function koe(e){V_=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Ioe(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,a.shape)[0],p=t.readSync(s.dataId),u=a.shape[l];for(let C=0;C<p.length;++C){let E=p[C];w.assert(E<=u-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${u-1}]`)}let d=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=Fn({inputs:{x:a},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),c=w.sizeFromShape(s.shape),m=Fn({inputs:{x:s},attrs:{shape:[d.batchSize,c/d.batchSize]},backend:t}),f=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],g=t.makeOutput(f,a.dtype);if(w.sizeFromShape(a.shape)===0)return g;let y=h.shape.length-1,b=t.dataIdMap.get(h.dataId).id,x=t.dataIdMap.get(m.dataId).id,v=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(w.computeStrides(h.shape)).buffer),N=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer);return V_(b,nt[a.dtype],I,y,x,d.batchSize,N,v),t.disposeData(h.dataId),t.disposeData(m.dataId),g.shape=d.outputShape,g}var Soe={kernelName:Ml,backendName:"wasm",setupFunc:koe,kernelFunc:Ioe},Noe=!1,Toe=Bt(Ll,Noe,"bool"),_oe=!1,Coe=Bt(Ri,_oe,"bool"),Eoe=Qe(Mi,"bool"),$oe=Qe(Oi,"bool"),Aoe=Qe(Li,"bool"),U_;function Foe(e){U_=e.wasm.cwrap(zi,null,["number","number","number","number"])}function Roe(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=r.dataIdMap.get(s.dataId).id;U_(a,nt[t.dtype],n,i)}return s}var Doe={kernelName:zi,backendName:"wasm",setupFunc:Foe,kernelFunc:Roe},Moe=!1,Ooe=Bt(zl,Moe,"bool"),Loe=!1,zoe=Bt(Pl,Loe,"bool"),G_;function Poe(e){G_=e.wasm.cwrap(Bl,null,["number","number","number","number"])}function Boe(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return G_(n.dataIdMap.get(o.dataId).id,r,a,i),o}var Woe={kernelName:Bl,backendName:"wasm",setupFunc:Poe,kernelFunc:Boe},Voe=Qe(Pi),Uoe=Qe(Bi),Goe=!1,Hoe=Bt(Wl,Goe,"bool"),joe=Qe(Vl),qoe=!1,Koe=Bt(Ul,qoe,"bool"),Xoe=!1,Zoe=Bt(U0,Xoe,"bool"),H_;function Joe(e){H_=e.wasm.cwrap(Wi,null,["number","number","number","number","number","number","number"])}function Yoe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;if(a.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let p=n.makeOutput(a.shape,a.dtype);return H_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,a.shape[3],s,i,o,l),p}var Qoe={kernelName:Wi,backendName:"wasm",setupFunc:Joe,kernelFunc:Yoe},j_;function ele(e){j_=e.wasm.cwrap(Gl,null,["number","number","number","number","number","number","number","number","number"])}function tle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:p,beta:u}=r;if(a.dtype!=="float32"||s.dtype!=="float32"||i.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let d=n.makeOutput(a.shape,a.dtype);return j_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,i.shape[3],o,l,p,u),d}var nle={kernelName:Gl,backendName:"wasm",setupFunc:ele,kernelFunc:tle},q_;function rle(e){q_=e.wasm.cwrap(Vi,null,["number","number","number","number"])}function ale(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:u,originalAxes:d,inputWasTransposed:h}=ms(i,a,t);if(h){let b=t.dataIdMap.get(p.dataId).id;l=p,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("max",u,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,u),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;q_(o,nt[i.dtype],g,b)}if(h&&t.disposeData(p.dataId),s){let b=T.expandShapeToKeepDim(y.shape,d);y.shape=b}return y}var sle={kernelName:Vi,backendName:"wasm",setupFunc:rle,kernelFunc:ale},ile=Bt(Ui),K_;function ole(e){K_=e.wasm.cwrap(Gi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lle(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;w.assert(a.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=n,u=T.computePool2DInfo(a.shape,i,o,1,l,p),d=u.filterHeight,h=u.filterWidth,c=u.padInfo.top,m=u.padInfo.right,f=u.padInfo.bottom,g=u.padInfo.left,y=u.dilationHeight,b=u.dilationWidth,x=u.strideHeight,v=u.strideWidth,I=u.inChannels,N=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(u.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return K_(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,m,f,g,y,b,x,v,I,N,E),C}var ule={kernelName:Gi,backendName:"wasm",setupFunc:ole,kernelFunc:lle},X_;function ple(e){X_=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function dle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:p}=r,u=T.computePool3DInfo(a.shape,s,i,1,o,l,p),d=n.makeOutput(u.outShape,a.dtype);return X_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inDepth,u.inHeight,u.inWidth,u.outDepth,u.outHeight,u.outWidth,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}var hle={kernelName:Hl,backendName:"wasm",setupFunc:ple,kernelFunc:dle},Z_;function cle(e){Z_=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mle(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=r,u=T.computePool3DInfo(s.shape,i,o,1,l,p),d=n.makeOutput(s.shape,s.dtype);return Z_(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inDepth,u.inHeight,u.inWidth,u.outDepth,u.outHeight,u.outWidth,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}var fle={kernelName:zp,backendName:"wasm",setupFunc:cle,kernelFunc:mle},J_;function gle(e){J_=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yle(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=r,u=T.computePool2DInfo(s.shape,i,o,1,l,p),d=n.makeOutput(s.shape,s.dtype);return J_(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left),d}var ble={kernelName:Lp,backendName:"wasm",setupFunc:gle,kernelFunc:yle},Y_;function xle(e){Y_=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=r;w.assert(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let p=[1,1];w.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let u=T.computePool2DInfo(a.shape,s,i,[1,1],o),d=n.makeOutput(u.outShape,a.dtype),h=n.makeOutput(u.outShape,"int32");return Y_(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,n.dataIdMap.get(h.dataId).id,nt[a.dtype],l,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left),[d,h]}var wle={kernelName:Pp,backendName:"wasm",setupFunc:xle,kernelFunc:vle},Q_;function kle(e){Q_=e.wasm.cwrap(Hi,null,["number, number, number"])}function Ile(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,p=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:c}=ms(i,a,t),m=d;if(c){let v=t.dataIdMap.get(u.dataId).id;v!==o&&(p=u,l=v,m=T.getInnerMostAxes(m.length,p.shape.length))}T.assertAxesAreInnerMostDims("mean",m,p.shape.length);let[f,g]=T.computeOutAndReduceShapes(p.shape,m),y=w.sizeFromShape(g),b=p;p.dtype!=="float32"&&(b=fs({backend:t,inputs:{x:p},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(f,"float32");if(w.sizeFromShape(p.shape)!==0){let v=t.dataIdMap.get(x.dataId).id;Q_(l,y,v)}if(c&&t.disposeData(u.dataId),s){let v=T.expandShapeToKeepDim(x.shape,h);x.shape=v}return p.dtype!=="float32"&&t.disposeData(b.dataId),x}var Sle={kernelName:Hi,backendName:"wasm",setupFunc:kle,kernelFunc:Ile},eC;function Nle(e){eC=e.wasm.cwrap(ji,null,["number","number","number","number"])}function Tle(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,p=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:c}=ms(i,a,t);if(c){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(p=u,l=x)}let m=p.shape.length;T.assertAxesAreInnerMostDims("min",d,m);let[f,g]=T.computeOutAndReduceShapes(p.shape,d),y=w.sizeFromShape(g),b=t.makeOutput(f,p.dtype);if(w.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;eC(l,nt[i.dtype],y,x)}if(c&&t.disposeData(u.dataId),s){let x=T.expandShapeToKeepDim(b.shape,h);b.shape=x}return b}var _le={kernelName:ji,backendName:"wasm",setupFunc:Nle,kernelFunc:Tle},Cle=Bt(qi),tg;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(tg||(tg={}));var tC;function Ele(e){tC=e.wasm.cwrap(Ki,null,["number","array","number","number","array","array","number","number"])}function $le(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),u=r.map(m=>m[0]),d=r.map(m=>m[1]),h=new Uint8Array(new Int32Array(u).buffer),c=new Uint8Array(new Int32Array(d).buffer);return tC(i,p,t.shape.length,nt[t.dtype],h,c,tg[a],l),o}var Ale={kernelName:Ki,backendName:"wasm",kernelFunc:$le,setupFunc:Ele},nC;function Fle(e){nC=e.wasm.cwrap(xo,null,["number","number","number","number"])}function rC(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=w.sizeFromShape(n.shape)/o;return w.sizeFromShape(s.shape)===0||nC(a,i,o,l),s}var Rle={kernelName:xo,backendName:"wasm",setupFunc:Fle,kernelFunc:rC},aC;function Dle(e){aC=e.wasm.cwrap(jl,null,["number","number","number","number","number","number"])}function Mle(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if(a.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let l=o?a:rC({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[p,u]=l.shape,d=n.makeOutput([p,s],"int32");return aC(n.dataIdMap.get(l.dataId).id,p,u,s,i,n.dataIdMap.get(d.dataId).id),o||n.disposeData(l.dataId),d}var Ole={kernelName:jl,backendName:"wasm",setupFunc:Dle,kernelFunc:Mle},Lle=Bt(Xi),zle=Bt(Zi),Ple=Qe(ql);function ev(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var sC;function Ble(e){sC=e.wasm.cwrap(Xl,"number",["number","number","number","number","number"])}function Wle(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,p=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(l.dataId).id,d=sC(p,u,s,a,i),{pSelectedIndices:h,selectedSize:c,pSelectedScores:m,pValidOutputs:f}=ev(t,d);return t.wasm._free(m),t.wasm._free(f),t.makeOutput([c],"int32",h)}var Vle={kernelName:Xl,backendName:"wasm",setupFunc:Ble,kernelFunc:Wle},iC;function Ule(e){iC=e.wasm.cwrap(Zl,"number",["number","number","number","number","number","bool"])}function Gle(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:p}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(p.dataId).id,h=iC(u,d,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=ev(t,h);t.wasm._free(f);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var Hle={kernelName:Zl,backendName:"wasm",setupFunc:Ule,kernelFunc:Gle},oC;function jle(e){oC=e.wasm.cwrap(Jl,"number",["number","number","number","number","number","number"])}function qle(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:p}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(p.dataId).id,h=oC(u,d,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=ev(t,h);t.wasm._free(g);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([m],"float32",f);return[y,b]}var Kle={kernelName:Jl,backendName:"wasm",setupFunc:jle,kernelFunc:qle},Xle=!1,Zle=Bt(Kl,Xle,"bool"),lC;function Jle(e){lC=e.wasm.cwrap(Ji,null,["number","number","number","number","number"])}function Yle(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,p=n.makeOutput([...a.shape,i],s),u=n.dataIdMap.get(p.dataId).id,d=n.dataIdMap.get(a.dataId).id;return lC(d,i,o,l,u),p}var Qle={kernelName:Ji,backendName:"wasm",setupFunc:Jle,kernelFunc:Yle};function eue(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var tue={kernelName:Yl,backendName:"wasm",kernelFunc:eue};function nue(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return eg({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let d=eg({inputs:{input:u},backend:n,attrs:{dim:a}});return o.push(d),d}),p=x_({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(u=>n.disposeData(u.dataId)),p}var rue={kernelName:Ql,backendName:"wasm",kernelFunc:nue},uC;function aue(e){uC=e.wasm.cwrap(Yi,null,["number","array","number","number","array","array","number","number"])}function sue(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]);if(w.sizeFromShape(t.shape)===0)return O_({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),u=r.map(m=>m[0]),d=r.map(m=>m[1]),h=new Uint8Array(new Int32Array(u).buffer),c=new Uint8Array(new Int32Array(d).buffer);return uC(i,p,t.shape.length,nt[t.dtype],h,c,a,l),o}var pC={kernelName:Yi,backendName:"wasm",kernelFunc:sue,setupFunc:aue},iue=Bt(Qi),dC;function oue(e){dC=e.wasm.cwrap(eo,null,["number","number","number"])}function lue(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,p=l;l.dtype!=="float32"&&(p=fs({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(p.dataId).id);let u=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(u.dataId).id;return dC(o,i,d),l.dtype!=="float32"&&n.disposeData(p.dataId),u}var uue={kernelName:eo,backendName:"wasm",setupFunc:oue,kernelFunc:lue},hC;function pue(e){hC=e.wasm.cwrap(to,null,["number","number","number","number"])}function due(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,p=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:c}=ms(i,a,t),m=d;if(c){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(p=u,l=x,m=T.getInnerMostAxes(m.length,p.shape.length))}T.assertAxesAreInnerMostDims("prod",m,p.shape.length);let[f,g]=T.computeOutAndReduceShapes(p.shape,m),y=w.sizeFromShape(g),b=t.makeOutput(f,p.dtype);if(w.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;hC(l,y,nt[b.dtype],x)}if(c&&t.disposeData(u.dataId),s){let x=T.expandShapeToKeepDim(b.shape,h);b.shape=x}return b}var hue={kernelName:to,backendName:"wasm",setupFunc:pue,kernelFunc:due},cue=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Cx(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},mue={kernelName:Bp,backendName:"wasm",kernelFunc:cue},fue=Bt(Ni),gue=Qe(no),yue=Qe(ro),bue=Qe(io),cC;function xue(e){cC=e.wasm.cwrap(so,null,["number","number","number","number","number","number","number","number","number","number"])}function vue(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,p]=o,[u,d,h,c]=a.shape,m=[u,l,p,c],f=t.dataIdMap.get(a.dataId),g;f.dtype!=="float32"&&(g=fs({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(g.dataId));let y=f.id,b=t.makeOutput(m,"float32");if(w.sizeFromShape(a.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return cC(y,u,d,h,c,l,p,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var wue={kernelName:so,backendName:"wasm",setupFunc:xue,kernelFunc:vue},mC;function kue(e){mC=e.wasm.cwrap(nu,null,["number","number","number","array","array","boolean"])}function Iue(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId),p;return l.dtype!=="float32"&&(p=fs({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(p.dataId)),mC(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),p!=null&&n.disposeData(p.dataId),o}var Sue={kernelName:nu,backendName:"wasm",setupFunc:kue,kernelFunc:Iue},fC;function Nue(e){fC=e.wasm.cwrap(ao,null,["number","number","number","number","number","number","number","number","number","number"])}function Tue(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,p]=o,[u,d,h,c]=a.shape,m=[u,l,p,c],f=t.makeOutput(m,"float32");if(w.sizeFromShape(a.shape)===0)return f;let g=t.dataIdMap.get(a.dataId),y;g.dtype!=="float32"&&(y=fs({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.dataIdMap.get(f.dataId).id;return fC(b,u,d,h,c,l,p,s?1:0,i?1:0,x),y!=null&&t.disposeData(y.dataId),f}var _ue={kernelName:ao,backendName:"wasm",setupFunc:Nue,kernelFunc:Tue},gC;function Cue(e){gC=e.wasm.cwrap(tu,null,["number","number","number","array","array","boolean"])}function Eue(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId),p;return l.dtype!=="float32"&&(p=fs({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(p.dataId)),gC(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),p!=null&&n.disposeData(p.dataId),o}var $ue={kernelName:tu,backendName:"wasm",setupFunc:Cue,kernelFunc:Eue},yC;function Aue(e){yC=e.wasm.cwrap(oo,null,["number","array","number","array","number","number"])}function Fue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=w.parseAxisParam(s,a.shape);if(a.shape.length===0)return _m({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(a.shape).buffer);yC(l,u,i.length,d,a.shape.length,p);let h=Fn({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),h}var Rue={kernelName:oo,backendName:"wasm",kernelFunc:Fue,setupFunc:Aue},bC;function Due(e){bC=e.wasm.cwrap(yu,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Mue(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(l.dataId).id,[d,h,c,m]=a.shape,[f,g]=T.getImageCenter(o,h,c),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],v=new Uint8Array(new Int32Array(x).buffer);return bC(p,d,h,c,m,s,f,g,v,x.length,u),l}var Oue={kernelName:yu,backendName:"wasm",kernelFunc:Mue,setupFunc:Due},Lue=Qe(lo),zue=Qe(uo),xC;function Pue(e){xC=e.wasm.cwrap(ru,null,["number","number","number","number","number","number","array","number","number"])}function Bue(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:p,sliceSize:u,strides:d,outputSize:h}=Uc.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(o.dataId).id;return xC(c,m,nt[s.dtype],l,p,u,f,h,g),o}var Wue={kernelName:ru,backendName:"wasm",setupFunc:Pue,kernelFunc:Bue},vC;function Vue(e){vC=e.wasm.cwrap(su,null,["number","number","number","number","number","number","bool","number"])}function Uue(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(p){return n.dataIdMap.get(p.dataId).id}return vC(l(a),l(s),a.shape[0],a.shape[1],s.shape[1],nt[a.dtype],i==="left",l(o)),o}var Gue={kernelName:su,backendName:"wasm",setupFunc:Vue,kernelFunc:Uue},wC;function Hue(e){wC=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function jue(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,p=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(p.dataId).id,d=r.shape.length,h=a.shape.length,c=d===0||d>1||h===1?1:w.sizeFromShape(a.shape.slice(1));return wC(i,o,l,c,u),p}var que={kernelName:iu,backendName:"wasm",kernelFunc:jue,setupFunc:Hue},Kue=Qe(po),kC;function Xue(e){kC=e.wasm.cwrap(fo,null,["number","number"])}function Zue(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return w.sizeFromShape(a.shape)===0||kC(r,s),a}var Jue={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Xue,kernelFunc:Zue},Yue=Qe(mo),Que=Qe(ho),epe=Qe(co),tpe=Qe(go);function npe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let p=pC.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),u=T.getReshaped(p.shape,s,o,!1),d=T.getPermuted(u.length,s.length,!1),h=T.getReshapedPermuted(p.shape,s,o,!1),c=Fn({inputs:{x:p},backend:n,attrs:{shape:u}}),m=es({inputs:{x:c},backend:n,attrs:{perm:d}}),f=Fn({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeData(p.dataId),n.disposeData(c.dataId),n.disposeData(m.dataId),f}var rpe={kernelName:lu,backendName:"wasm",kernelFunc:npe},IC;function ape(e){IC=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function spe(e){let{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],p=t.readSync(s.dataId)[0],u=[o+p,l],d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,m=t.makeOutput(u,r.dtype),f=t.dataIdMap.get(m.dataId).id,g=t.makeOutput(u.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([p],"bool"),x=t.dataIdMap.get(b.dataId).id,v=t.makeOutput([o],r.dtype),I=t.dataIdMap.get(v.dataId).id,N=t.makeOutput([4],"int32"),C=t.dataIdMap.get(N.dataId).id,E=IC(d,h,nt[a.dtype],o,p,l,c,f,y,x,I,C),A=t.readSync(N.dataId),R;switch(A[0]){case 1:{R=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(A[1]);break}case 2:{R=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(A[1],A[2]);break}case 3:R=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(A[1],A[2],A[3]);break;default:R=""}if(t.disposeData(N.dataId),R)throw t.disposeData(m.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(v.dataId),new Error(R);let F=m,S=g;return E!==u[0]&&(F=ni({inputs:{x:m},attrs:{begin:0,size:[E,l]},backend:t}),S=ni({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(m.dataId),t.disposeData(g.dataId)),[F,S,b,v]}var ipe={kernelName:Wp,backendName:"wasm",setupFunc:ape,kernelFunc:spe},SC;function ope(e){SC=e.wasm.cwrap(pu,null,["number","number","number","number","number","number","number"])}function lpe(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,p=r.shape[0],u=w.sizeFromShape(s.shape),d=t.makeOutput([p,u],r.dtype),h=t.dataIdMap.get(d.dataId).id,c=t.makeOutput([u],s.dtype),m=t.dataIdMap.get(c.dataId).id,f=t.makeOutput([3],"int32"),g=t.dataIdMap.get(f.dataId).id;SC(i,o,l,p,h,m,g);let y=t.readSync(f.dataId),b;switch(y[0]){case 0:{b=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{b=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:b=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMultipleErrorMessage(x,v);break}case 4:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMismatchErrorMessage(x,v);break}default:b=""}if(t.disposeData(f.dataId),b)throw t.disposeData(d.dataId),t.disposeData(c.dataId),new Error(b);return[d,c]}var upe={kernelName:pu,backendName:"wasm",setupFunc:ope,kernelFunc:lpe},NC;function TC(e){NC=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function _C(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],p=o>0?l+1:0;if(p<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let u=a.shape.slice();u[0]=p;let d=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(u,a.dtype),f=n.dataIdMap.get(m.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;NC(d,nt[a.dtype],a.shape[0],h,c,f,y,t,0);let b=n.readSync(g.dataId),x;switch(b[0]){case 0:{x=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function ppe(e){return _C(e,!0)}var dpe={kernelName:Vp,backendName:"wasm",setupFunc:TC,kernelFunc:ppe};function hpe(e){return _C(e,!1)}var cpe={kernelName:Up,backendName:"wasm",setupFunc:TC,kernelFunc:hpe},CC;function mpe(e){CC=e.wasm.cwrap(du,null,["number","number","number","number","number","number","number","number","array","number","number"])}function fpe(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,l=t.makeOutput(o,i.dtype);if(w.sizeFromShape(o)===0)return l;let{sliceRank:p,numUpdates:u,sliceSize:d,strides:h,outputSize:c}=T.calculateShapes(s,a,o),m=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),b=t.dataIdMap.get(l.dataId).id;return CC(m,f,s.shape.length,g,nt[i.dtype],p,u,d,y,c,b),l}var gpe={kernelName:du,backendName:"wasm",setupFunc:mpe,kernelFunc:fpe};function ype(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=w.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),p=new Array(a.shape.length).fill(0),u=a.shape.slice();return l.map(d=>{let h=[...u];h[o]=d;let c=ni({inputs:{x:a},attrs:{begin:p,size:h},backend:r});return p[o]+=d,c})}var bpe={kernelName:uu,backendName:"wasm",kernelFunc:ype},xpe=Qe(yo),vpe=Qe(Gp),wpe=Bt(vo),EC;function kpe(e){EC=e.wasm.cwrap(is,null,["number","number","number","number"])}function Ipe(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return EC(i,a,nt[s.dtype],l),o}var Spe={kernelName:is,backendName:"wasm",setupFunc:kpe,kernelFunc:Ipe},$C;function Npe(e){$C=e.wasm.cwrap(hu,null,["number","array","number","array","array","array","array","array","number","number"])}function Tpe(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:l,endMask:p,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Gt.sliceInfo(a.shape,s,i,o,l,p,u,d,h),I;if(f)I=Fn({inputs:{x:a},backend:t,attrs:{shape:m}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=Gt.computeOutShape(b,x,v),C=ni({inputs:{x:a},backend:t,attrs:{begin:b,size:N}});I=Fn({inputs:{x:C},backend:t,attrs:{shape:m}}),t.disposeData(C.dataId)}else{let N=t.makeOutput(c,"float32"),C=t.dataIdMap.get(a.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),A=new Uint8Array(new Int32Array(b).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(v).buffer),S=new Uint8Array(new Int32Array(c).buffer),D=new Uint8Array(new Int32Array(w.computeStrides(c)).buffer),P=t.dataIdMap.get(N.dataId).id;$C(C,E,a.shape.length,A,R,F,S,D,c.length,P),I=Fn({inputs:{x:N},backend:t,attrs:{shape:m}}),t.disposeData(N.dataId)}return I}var _pe={kernelName:hu,backendName:"wasm",setupFunc:Npe,kernelFunc:Tpe};function Cpe(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:p,padWidth:u,preserveShortSequences:d}=r,h=t.readSync(a.dataId),c=t.readSync(s.dataId),[m,f]=$x(h,c,i,o,l,p,u,d),g=t.makeOutput([m.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=m;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(f),[g,b]}var Epe={kernelName:jp,backendName:"wasm",kernelFunc:Cpe};function $pe(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[p,u,d]=Ax(o,l[0],i),h=u.length,c=t.makeOutput([h,2],"int32");t.typedArrayFromHeap(c).set(p);let m=t.makeOutput([h],"string"),f=t.dataIdMap.get(m.dataId);f.stringBytes=u;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(d),[c,m,g]}var Ape={kernelName:qp,backendName:"wasm",kernelFunc:$pe};function Fpe(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=Fx(i,s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var Rpe={kernelName:Kp,backendName:"wasm",kernelFunc:Fpe},Dpe=Bt(wo),AC;function Mpe(e){AC=e.wasm.cwrap(bo,null,["number","number","number","number"])}function Ope(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,p=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:c}=ms(i,a,t),m=d;if(c){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(p=u,l=x,m=T.getInnerMostAxes(m.length,p.shape.length))}T.assertAxesAreInnerMostDims("sum",m,p.shape.length);let[f,g]=T.computeOutAndReduceShapes(p.shape,m),y=w.sizeFromShape(g),b=t.makeOutput(f,p.dtype);if(w.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;AC(l,y,nt[b.dtype],x)}if(c&&t.disposeData(u.dataId),s){let x=T.expandShapeToKeepDim(b.shape,h);b.shape=x}return b}var Lpe={kernelName:bo,backendName:"wasm",setupFunc:Mpe,kernelFunc:Ope},zpe=Qe(ko),Ppe=Qe(Io),FC;function Bpe(e){FC=e.wasm.cwrap(au,null,["number","number","number","number","number","number","array","number","number","number"])}function Wpe(e){let{backend:t,inputs:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=n,o=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return o;let{sliceRank:l,numUpdates:p,sliceSize:u,strides:d,outputSize:h}=Uc.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(i.dataId).id,f=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(d).buffer),y=t.dataIdMap.get(o.dataId).id;return FC(c,m,nt[i.dtype],l,p,u,g,h,y,f),o}var Vpe={kernelName:au,backendName:"wasm",setupFunc:Bpe,kernelFunc:Wpe},RC;function Upe(e){RC=e.wasm.cwrap(ss,null,["number","array","number","array","number","number"])}function Gpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let h=0;h<o.length;h++)o[h]=a.shape[h]*i[h];let l=new Uint8Array(new Int32Array(a.shape).buffer),p=new Uint8Array(new Int32Array(o).buffer),u=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(u.dataId).id;return RC(s,l,a.shape.length,p,o.length,nt[u.dtype],d),u}var Hpe={kernelName:ss,backendName:"wasm",setupFunc:Upe,kernelFunc:Gpe},DC;function jpe(e){DC=e.wasm.cwrap(cu,null,["number","array","number","number","number","bool","number","number"])}var qpe=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let p=t.makeOutput(l,r.dtype),u=t.dataIdMap.get(p.dataId).id,d=t.makeOutput(l,"int32"),h=t.dataIdMap.get(d.dataId).id;return DC(i,o,r.shape.length,nt[r.dtype],a,s,u,h),[p,d]},Kpe={kernelName:cu,backendName:"wasm",setupFunc:jpe,kernelFunc:qpe},MC;function Xpe(e){MC=e.wasm.cwrap(mu,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Zpe(e){let{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:p}=r,[u,d,h,c]=a.shape,[m,f]=p??[d,h],g=[u,m,f,c],y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(w.computeStrides(g)).buffer),x=t.makeOutput(g,a.dtype),v=t.dataIdMap.get(x.dataId).id,I=t.dataIdMap.get(a.dataId).id,N=t.dataIdMap.get(s.dataId).id,C=i==="nearest"?1:2,E;switch(o){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return MC(I,N,s.shape[0]>1,u,m,f,c,h,d,y,a.shape.length-1,b,g.length-1,C,E,l,v),x}var Jpe={kernelName:mu,backendName:"wasm",setupFunc:Xpe,kernelFunc:Zpe};function Ype(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=Dx(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([l.length],"int32",void 0,l)]}var Qpe={kernelName:Xp,backendName:"wasm",kernelFunc:Ype};function ede(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),p=0;for(let c=0;c<o;c++)c!==s&&(l[p++]=a.shape[c]);let u=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let c=0;c<u.length;c++)d[s]=c,u[c]=ni({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return u.map(({dataId:c,dtype:m})=>({dataId:c,dtype:m,shape:l}))}var tde={kernelName:fu,backendName:"wasm",kernelFunc:ede};function nde(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var rde={kernelName:gu,backendName:"wasm",kernelFunc:nde},ade=[Xae,Zae,Jae,Yae,Qae,nse,pse,cse,mse,fse,gse,yse,bse,xse,vse,Ise,Fse,Tse,Ese,Ose,Vse,Hse,jse,Kse,Xse,Zse,Qse,eie,rie,iie,uie,hie,fie,gie,yie,vie,Iie,Tie,Eie,Fie,Mie,zie,Wie,Gie,qie,Kie,Jie,Qie,eoe,toe,noe,roe,aoe,ooe,loe,uoe,hoe,foe,boe,woe,Soe,Toe,Coe,rse,Eoe,$oe,Aoe,Doe,Ooe,zoe,Woe,Uoe,Voe,Hoe,joe,Koe,Zoe,Qoe,nle,sle,ile,ule,hle,fle,ble,wle,Sle,_le,Cle,Ale,Ole,Lle,zle,Ple,Vle,Hle,Kle,Zle,Qle,tue,rue,pC,iue,uue,hue,mue,fue,gue,yue,bue,Rse,wue,Sue,_ue,$ue,Rue,Oue,Lue,zue,Wue,Gue,que,Kue,Jue,Yue,Que,epe,Bse,Rle,tpe,rpe,ipe,upe,dpe,cpe,gpe,bpe,xpe,vpe,wpe,Spe,_pe,Epe,Ape,Rpe,Dpe,Lpe,zpe,Ppe,Vpe,Hpe,Kpe,Jpe,ose,Qpe,tde,rde];for(let e of ade)Jp(e);var ng=H();ng.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});ng.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(ng.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var w0=ns(P$()),sde=ns(B$()),k0=ns(W$()),I0=w0.default||w0,ide=k0.default||k0,OC=class extends Cp{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(LC),rg=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new tc(this,fr())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if(r==="string"){let p=t;this.dataIdMap.set(e,{id:s,stringBytes:p,shape:n,dtype:r,memoryOffset:null,refCount:a});return}let i=w.sizeFromShape(n),o=i*w.bytesPerElement(r),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(a==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||w.sizeFromShape(s);let o=w.bytesPerElement(a),l=this.wasm.HEAPU8.slice(r+t*o,r+n*o);return ude(l.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(n==null)a=this.write(r??null,e,t);else{let s=this.dataIdNextNumber++;a={id:s},this.dataIdMap.set(a,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function ode(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(a=>{WebAssembly.instantiate(a,t).then(s=>{n(s.instance,s.module)})})}),{})}function S0(e,t,n){if(Jh!=null)return Jh;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),sp!=null&&sp[r]!=null?sp[r]:n+r}async function lde(){let[e,t]=await Promise.all([H().getAsync("WASM_HAS_SIMD_SUPPORT"),H().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let a={};a.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let p=sde.wasmWorkerContents.replace(/\n/g,"\\n"),u=new Blob([p],{type:"application/javascript"});return URL.createObjectURL(u)}return o.endsWith(".wasm")?S0(e,t,np??l):l+o},tv&&(a.instantiateWasm=ode(S0(e,t,np??"")));let s=!1;a.onAbort=()=>{s||ip||(ip=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&Jh==null?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+I0.toString()],{type:"text/javascript"}),i=I0(a)):i=ide(a),i.then(o=>{s=!0,ip=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},n({wasm:o})}).catch(r)})}function ude(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var pde=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Jh=null,np=null,sp={},ip=!1,tv=!1;function dde(e,t=!1){if(a1("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),ip)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Jh=e,tv=t}function hde(e,t=!1){if(ip)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")np=e;else{sp=e;let n=pde.filter(r=>sp[r]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}tv=t}var LC=-1,rg=-1;function cde(e){LC=e}function mde(){if(rg===-1)throw new Error("WASM backend not initialized.");return rg}var fde="4.22.0",gde=2;xc("wasm",async()=>{let{wasm:e}=await lde();return new OC(e)},gde);var N0="4.22.0",yde="4.22.0",bde="4.22.0",xde="4.22.0",vde="4.22.0",wde={tfjs:N0,"tfjs-core":N0,"tfjs-converter":yde,"tfjs-backend-cpu":bde,"tfjs-backend-webgl":xde,"tfjs-backend-wasm":vde},kde={};ug(kde,{AnchorPosition:()=>YC,DrawBox:()=>tE,DrawBoxOptions:()=>eE,DrawFaceLandmarks:()=>bE,DrawFaceLandmarksOptions:()=>yE,DrawTextField:()=>lv,DrawTextFieldOptions:()=>ov,drawContour:()=>$a,drawDetections:()=>Mde,drawFaceExpressions:()=>Xde,drawFaceLandmarks:()=>Jde});function $a(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:r,y:a},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(r,a)}),n){let r=t[t.length-1],a=t[0];if(!r||!a)return;e.moveTo(r.x,r.y),e.lineTo(a.x,a.y)}e.stroke()}var Ide={};ug(Ide,{computeReshapedDimensions:()=>WC,getCenterPoint:()=>rv,isDimensions:()=>sg,isEven:()=>ag,isFloat:()=>BC,isTensor:()=>zu,isTensor1D:()=>Sde,isTensor2D:()=>PC,isTensor3D:()=>$d,isTensor4D:()=>ha,isValidNumber:()=>Ls,isValidProbablitiy:()=>Nde,range:()=>ml,round:()=>nv});var Os=class zC{constructor(t,n){if(!Ls(t)||!Ls(n))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:t,height:n})}`);this._width=t,this._height=n}get width(){return this._width}get height(){return this._height}reverse(){return new zC(1/this.width,1/this.height)}};function zu(e,t){return e instanceof Ge&&e.shape.length===t}function Sde(e){return zu(e,1)}function PC(e){return zu(e,2)}function $d(e){return zu(e,3)}function ha(e){return zu(e,4)}function BC(e){return e%1!==0}function ag(e){return e%2===0}function nv(e,t=2){let n=10**t;return Math.floor(e*n)/n}function sg(e){return e&&e.width&&e.height}function WC({width:e,height:t},n){let r=n/Math.max(t,e);return new Os(Math.round(e*r),Math.round(t*r))}function rv(e){return e.reduce((t,n)=>t.add(n),new ut(0,0)).div(new ut(e.length,e.length))}function ml(e,t,n){return Array(e).fill(0).map((r,a)=>t+a*n)}function Ls(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||e===0}function Nde(e){return Ls(e)&&e>=0&&e<=1}var ut=class Ns{constructor(t,n){this._x=t,this._y=n}get x(){return this._x}get y(){return this._y}add(t){return new Ns(this.x+t.x,this.y+t.y)}sub(t){return new Ns(this.x-t.x,this.y-t.y)}mul(t){return new Ns(this.x*t.x,this.y*t.y)}div(t){return new Ns(this.x/t.x,this.y/t.y)}abs(){return new Ns(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Ns(Math.floor(this.x),Math.floor(this.y))}},ri=class Nr{static isRect(t){return!!t&&[t.x,t.y,t.width,t.height].every(Ls)}static assertIsValidBox(t,n,r=!1){if(!Nr.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!r&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let r=t||{},a=[r.left,r.top,r.right,r.bottom].every(Ls),s=[r.x,r.y,r.width,r.height].every(Ls);if(!s&&!a)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(r)}`);let[i,o,l,p]=s?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];Nr.assertIsValidBox({x:i,y:o,width:l,height:p},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=p}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new ut(this.left,this.top)}get topRight(){return new ut(this.right,this.top)}get bottomLeft(){return new ut(this.left,this.bottom)}get bottomRight(){return new ut(this.right,this.bottom)}round(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(s=>Math.round(s));return new Nr({x:t,y:n,width:r,height:a})}floor(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(s=>Math.floor(s));return new Nr({x:t,y:n,width:r,height:a})}toSquare(){let{x:t,y:n,width:r,height:a}=this,s=Math.abs(r-a);return r<a&&(t-=s/2,r+=s),a<r&&(n-=s/2,a+=s),new Nr({x:t,y:n,width:r,height:a})}rescale(t){let n=sg(t)?t.width:t,r=sg(t)?t.height:t;return new Nr({x:this.x*n,y:this.y*r,width:this.width*n,height:this.height*r})}pad(t,n){let[r,a,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new Nr({x:r,y:a,width:s,height:i})}clipAtImageBorders(t,n){let{x:r,y:a,right:s,bottom:i}=this,o=Math.max(r,0),l=Math.max(a,0),p=s-o,u=i-l,d=Math.min(p,t-o),h=Math.min(u,n-l);return new Nr({x:o,y:l,width:d,height:h}).floor()}shift(t,n){let{width:r,height:a}=this,s=this.x+t,i=this.y+n;return new Nr({x:s,y:i,width:r,height:a})}padAtBorders(t,n){let r=this.width+1,a=this.height+1,s=1,i=1,o=r,l=a,p=this.left,u=this.top,d=this.right,h=this.bottom;return d>n&&(o=-d+n+r,d=n),h>t&&(l=-h+t+a,h=t),p<1&&(l=2-p,p=1),u<1&&(l=2-u,u=1),{dy:i,edy:l,dx:s,edx:o,y:u,ey:h,x:p,ex:d,w:r,h:a}}calibrate(t){return new Nr({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}},VC=class extends ri{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},UC=class GC{constructor(t,n,r,a,s){this._imageDims=new Os(s.width,s.height),this._score=t,this._classScore=n,this._className=r,this._box=new ri(a).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new ri(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new GC(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}},xr=class HC extends UC{constructor(t,n,r){super(t,t,"",n,r)}forSize(t,n){let{score:r,relativeBox:a,imageDims:s}=super.forSize(t,n);return new HC(r,a,s)}};function Tde(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function _de(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),r=t.reduce((o,l)=>l<o?l:o,1/0),a=n.reduce((o,l)=>l<o?l:o,1/0),s=t.reduce((o,l)=>o<l?l:o,0),i=n.reduce((o,l)=>o<l?l:o,0);return new VC(r,a,s,i)}function Cde(e,t,n,r=!0){let a=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;a.length>0;){let i=a.pop();s.push(i);let o=a,l=[];for(let p=0;p<o.length;p++){let u=o[p],d=e[i],h=e[u];l.push(Tde(d,h,r))}a=a.filter((p,u)=>l[u]<=n)}return s}function Ad(e,t){return W(()=>{let[n,r,a]=t,s=Gn([...e.shape.slice(0,3),1],n,"float32"),i=Gn([...e.shape.slice(0,3),1],r,"float32"),o=Gn([...e.shape.slice(0,3),1],a,"float32"),l=dt([s,i,o],3);return fe(e,l)})}function Ede(e,t=!1){return W(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=d=>{let h=e.shape.slice();return h[i]=d,Gn(h,0,"float32")},l=o(s),p=a-l.shape[i],u=[t&&p?o(p):null,e,l].filter(d=>!!d).map(d=>ie(d,"float32"));return dt(u,i)})}function Ym(e){return 1/(1+Math.exp(-e))}var jC=class extends ri{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},$de=.5,Ade=.43,Fde=.45,Tp=class{constructor(e,t,n=new ut(0,0)){let{width:r,height:a}=t;this._imgDims=new Os(r,a),this._shift=n,this._positions=e.map(s=>s.mul(new ut(r,a)).add(n))}get shift(){return new ut(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new ut(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new ut(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let a=e instanceof xr?e.box.floor():new ri(e);return this.shiftBy(a.x,a.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=u=>r.sub(u).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/Fde),o=rv(e),l=Math.floor(Math.max(0,o.x-$de*i)),p=Math.floor(Math.max(0,o.y-Ade*i));return new jC(l,p,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+p))}alignMinBbox(e){let t=_de(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},qC=class extends Tp{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(rv)}};function _p(e){return e.detection instanceof xr}function ig(e,t){return{...e,detection:t}}function KC(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function av(){return typeof global=="object"&&typeof process<"u"&&process.versions!=null&&process.versions.node!=null}function XC(e){let t="";if(!e&&av())try{e=y$("fs")}catch(n){t=n.toString()}return{readFile:e?n=>new Promise((r,a)=>{e.readFile(n,(s,i)=>s?a(s):r(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function ZC(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},s=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},i=global.fetch,o=XC();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:a,createVideoElement:s,fetch:i,...o}}function JC(){return typeof window=="object"&&typeof document<"u"&&typeof HTMLImageElement<"u"&&typeof HTMLCanvasElement<"u"&&typeof HTMLVideoElement<"u"&&typeof ImageData<"u"&&typeof CanvasRenderingContext2D<"u"}var Xt;function Rde(){if(!Xt)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Xt}function og(e){Xt=e}function sv(){return JC()?og(KC()):av()?og(ZC()):null}function Dde(e){if(Xt||sv(),!Xt)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Xt.Canvas,Image:n=Xt.Image}=e;Xt.Canvas=t,Xt.Image=n,Xt.createCanvasElement=e.createCanvasElement||(()=>new t),Xt.createImageElement=e.createImageElement||(()=>new n),Xt.ImageData=e.ImageData||Xt.ImageData,Xt.Video=e.Video||Xt.Video,Xt.fetch=e.fetch||Xt.fetch,Xt.readFile=e.readFile||Xt.readFile}var On={getEnv:Rde,setEnv:og,initialize:sv,createBrowserEnv:KC,createFileSystem:XC,createNodejsEnv:ZC,monkeyPatch:Dde,isBrowser:JC,isNodejs:av};sv();function iv(e){return!On.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function ts(e){let{Canvas:t,CanvasRenderingContext2D:n}=On.getEnv();if(e instanceof n)return e;let r=iv(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}var YC=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(YC||{}),ov=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},lv=class QC{constructor(t,n,r={}){this.text=typeof t=="string"?[t]:t instanceof QC?t.text:t,this.anchor=n,this.options=new ov(r)}measureWidth(t){let{padding:n}=this.options;return this.text.map(r=>t.measureText(r).width).reduce((r,a)=>r<a?a:r,0)+2*n}measureHeight(){let{fontSize:t,padding:n}=this.options;return this.text.length*t+2*n}getUpperLeft(t,n){let{anchorPosition:r}=this.options,a=r==="BOTTOM_RIGHT"||r==="TOP_RIGHT",s=r==="BOTTOM_LEFT"||r==="BOTTOM_RIGHT",i=this.measureWidth(t),o=this.measureHeight(),l=a?this.anchor.x-i:this.anchor.x,p=s?this.anchor.y-o:this.anchor.y;if(n){let{width:u,height:d}=n,h=Math.max(Math.min(l,u-i),0),c=Math.max(Math.min(p,d-o),0);return{x:h,y:c}}return{x:l,y:p}}draw(t){let n=iv(t),r=ts(n),{backgroundColor:a,fontColor:s,fontSize:i,fontStyle:o,padding:l}=this.options;r.font=`${i}px ${o}`;let p=this.measureWidth(r),u=this.measureHeight();r.fillStyle=a;let d=this.getUpperLeft(r,n);r.fillRect(d.x,d.y,p,u),r.fillStyle=s,this.text.forEach((h,c)=>{let m=l+d.x,f=l+d.y+(c+1)*i;r.fillText(h,m,f)})}},eE=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new ov({...s,...a})}},tE=class{constructor(e,t={}){this.box=new ri(e),this.options=new eE(t)}draw(e){let t=ts(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new lv([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function Mde(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof xr?n.score:_p(n)?n.detection.score:void 0,a=n instanceof xr?n.box:_p(n)?n.detection.box:new ri(n),s=r?`${nv(r)}`:void 0;new tE(a,{label:s}).draw(e)})}function nE(e){let{Image:t,Video:n}=On.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Ode(e){return new Promise((t,n)=>{if(e instanceof On.getEnv().Canvas||nE(e)){t(null);return}function r(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),n(s))}function a(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),t(s))}e.addEventListener("load",a),e.addEventListener("error",r)})}function rE(e){let{Image:t,Video:n}=On.getEnv();return e instanceof t?new Os(e.naturalWidth,e.naturalHeight):e instanceof n?new Os(e.videoWidth,e.videoHeight):new Os(e.width,e.height)}function Yh({width:e,height:t}){let{createCanvasElement:n}=On.getEnv(),r=n();return r.width=e,r.height=t,r}function aE(e,t){let{ImageData:n}=On.getEnv();if(!(e instanceof n)&&!nE(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||rE(e),s=Yh({width:r,height:a});return e instanceof n?ts(s).putImageData(e,0,0):ts(s).drawImage(e,0,0,r,a),s}async function Lde(e,t){let n=t||On.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(ha(e)?1:0),i=W(()=>e.as3D(r,a,s).toInt());return await gd.toPixels(i,n),i.dispose(),n}function T0(e){let{Image:t,Canvas:n,Video:r}=On.getEnv();return e instanceof t||e instanceof n||e instanceof r}function zde(e,t,n=!1){let{Image:r,Canvas:a}=On.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Yh({width:1,height:1});let s=rE(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,p=Yh({width:t,height:t}),u=e instanceof a?e:aE(e),d=Math.abs(o-l)/2,h=n&&o<l?d:0,c=n&&l<o?d:0;return u.width>0&&u.height>0&&ts(p).drawImage(u,h,c,o,l),p}var Qh=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((n,r)=>{if($d(n)){this._imageTensors[r]=n,this._inputDimensions[r]=n.shape;return}if(ha(n)){let s=n.shape[0];if(s!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${s} passed, but not supported in input array`);this._imageTensors[r]=n,this._inputDimensions[r]=n.shape.slice(1);return}let a=n instanceof On.getEnv().Canvas?n:aE(n);this._canvases[r]=a,this._inputDimensions[r]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return ml(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),n=this.getInputHeight(e);return WC({width:t,height:n},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,W(()=>{let n=ml(this.batchSize,0,1).map(r=>{let a=this.getInput(r);if(a instanceof Ge){let s=ha(a)?a:Qt(a);return s=Ede(s,t),(s.shape[1]!==e||s.shape[2]!==e)&&(s=nr.resizeBilinear(s,[e,e],!1,!1)),s.as3D(e,e,3)}if(a instanceof On.getEnv().Canvas)return gd.fromPixels(zde(a,e,t));throw new Error(`toBatchTensor - at batchIdx ${r}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${a}`)});return Lt(n.map(r=>ie(r,"float32"))).as4D(this.batchSize,e,e,3)})}};async function Sn(e){if(e instanceof Qh)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=a=>Array.isArray(e)?` at input index ${a}:`:"",r=t.map(iv);return r.forEach((a,s)=>{if(!T0(a)&&!$d(a)&&!ha(a))throw typeof t[s]=="string"?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(ha(a)){let i=a.shape[0];if(i!==1)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),await Promise.all(r.map(a=>T0(a)&&Ode(a))),new Qh(r,Array.isArray(e))}async function sE(e,t){let{Canvas:n}=On.getEnv(),r=e;if(!(e instanceof n)){let s=await Sn(e);if(s.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let i=s.getInput(0);r=i instanceof n?i:await Lde(i)}let a=ts(r);return t.map(s=>s instanceof xr?s.forSize(r.width,r.height).box.floor():s).map(s=>s.clipAtImageBorders(r.width,r.height)).map(({x:s,y:i,width:o,height:l})=>{let p=Yh({width:o,height:l});return o>0&&l>0&&ts(p).putImageData(a.getImageData(s,i,o,l),0,0),p})}async function iE(e,t){if(!$d(e)&&!ha(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(ha(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return W(()=>{let[n,r,a]=e.shape.slice(ha(e)?1:0);return t.map(s=>s instanceof xr?s.forSize(r,n).box:s).map(s=>s.clipAtImageBorders(r,n)).filter(s=>s.width>0&&s.height>0).map(({x:s,y:i,width:o,height:l})=>Su(e.as3D(n,r,a),[i,s,0],[l,o,a]))})}async function Pde(e,t){let{fetch:n}=On.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function Bde(e){return(await Pde(e)).json()}function oE(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let a=e.split("/").filter(o=>o),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}async function Wde(e,t){let{manifestUri:n,modelBaseUri:r}=oE(e,t),a=await Bde(n);return pn.loadWeights(a,r)}var gs=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof Ws)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof Ws))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=wn(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){if(e instanceof Float32Array){this.extractWeights(e);return}await this.loadFromUri(e)}async loadFromUri(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await Wde(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=On.getEnv(),{manifestUri:n,modelBaseUri:r}=oE(e,this.getDefaultModelName()),a=l=>Promise.all(l.map(p=>t(p).then(u=>typeof u=="string"?Buffer.from(u):u.buffer))),s=pn.weightsLoaderFactory(a),i=JSON.parse((await t(n)).toString()),o=await s(i,r);this.loadFromWeightMap(o)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((a,s)=>{if(!a.nextObj.hasOwnProperty(s))throw new Error(`traversePropertyPath - object does not have property ${s}, for path ${e}`);return{obj:a.nextObj,objProp:s,nextObj:a.nextObj[s]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof Ge))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function sr(e,t,n){return W(()=>{let r=Iu(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=J(r,t.bias),r})}function Qm(e,t,n=!1){return W(()=>{let r=it(n?J(kn(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):sr(e,t.conv0,[2,2])),a=sr(r,t.conv1,[1,1]),s=it(J(r,a)),i=sr(s,t.conv2,[1,1]);return it(J(r,J(a,i)))})}function dh(e,t,n=!1,r=!0){return W(()=>{let a=it(n?J(kn(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):sr(e,t.conv0,r?[2,2]:[1,1])),s=sr(a,t.conv1,[1,1]),i=it(J(a,s)),o=sr(i,t.conv2,[1,1]),l=it(J(a,J(s,o))),p=sr(l,t.conv3,[1,1]);return it(J(a,J(s,J(o,p))))})}function op(e,t,n="same",r=!1){return W(()=>{let a=J(kn(e,t.filters,[1,1],n),t.bias);return r?it(a):a})}function ys(e,t){Object.keys(e).forEach(n=>{t.some(r=>r.originalPath===n)||e[n].dispose()})}function uv(e,t){return(n,r,a,s)=>{let i=Ka(e(n*r*a*a),[a,a,n,r]),o=at(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function lE(e,t){return(n,r,a)=>{let s=qr(e(n*r),[n,r]),i=at(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var uE=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function pv(e,t){return(n,r,a)=>{let s=Ka(e(9*n),[3,3,n,1]),i=Ka(e(n*r),[1,1,n,r]),o=at(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new uE(s,i,o)}}function dv(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new uE(n,r,a)}}function Mo(e,t){return(n,r,a)=>{let s=e[n];if(!zu(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function bs(e){let t=e;function n(a){let s=t.slice(0,a);return t=t.slice(a),s}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function pE(e,t){let n=uv(e,t),r=pv(e,t);function a(i,o,l,p=!1){let u=p?n(i,o,3,`${l}/conv0`):r(i,o,`${l}/conv0`),d=r(o,o,`${l}/conv1`),h=r(o,o,`${l}/conv2`);return{conv0:u,conv1:d,conv2:h}}function s(i,o,l,p=!1){let{conv0:u,conv1:d,conv2:h}=a(i,o,l,p),c=r(o,o,`${l}/conv3`);return{conv0:u,conv1:d,conv2:h,conv3:c}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function Vde(e){let t=[],{extractWeights:n,getRemainingWeights:r}=bs(e),{extractDenseBlock4Params:a}=pE(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function dE(e){return t=>{let n=e(`${t}/filters`,4),r=e(`${t}/bias`,1);return{filters:n,bias:r}}}function hE(e,t){let n=Mo(e,t),r=dE(n),a=dv(n);function s(o,l=!1){let p=l?r(`${o}/conv0`):a(`${o}/conv0`),u=a(`${o}/conv1`),d=a(`${o}/conv2`);return{conv0:p,conv1:u,conv2:d}}function i(o,l=!1){let p=l?r(`${o}/conv0`):a(`${o}/conv0`),u=a(`${o}/conv1`),d=a(`${o}/conv2`),h=a(`${o}/conv3`);return{conv0:p,conv1:u,conv2:d,conv3:h}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function Ude(e){let t=[],{extractDenseBlock4Params:n}=hE(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return ys(e,t),{params:r,paramMappings:t}}var cE=class extends gs{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return W(()=>{let n=ie(e.toBatchTensor(112,!0),"float32"),r=Ad(n,[122.782,117.001,104.298]).div(255),a=dh(r,t.dense0,!0);return a=dh(a,t.dense1),a=dh(a,t.dense2),a=dh(a,t.dense3),a=ya(a,[7,7],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await Sn(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return Ude(e)}extractParams(e){return Vde(e)}};function lg(e,t){return W(()=>J(Be(e,t.weights),t.bias))}function Gde(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=bs(e),i=lE(a,r)(t,n,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}function Hde(e){let t=[],n=Mo(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:r("fc")};return ys(e,t),{params:a,paramMappings:t}}function mE(e){let t={},n={};return Object.keys(e).forEach(r=>{let a=r.startsWith("fc")?n:t;a[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var fE=class extends gs{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof Qh?this.faceFeatureExtractor.forwardInput(e):e;return lg(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Gde(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=mE(e);return this.faceFeatureExtractor.loadFromWeightMap(t),Hde(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},_0=["neutral","happy","sad","angry","fearful","disgusted","surprised"],hv=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,e.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);_0.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return _0.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},jde=class extends fE{constructor(e=new cE){super("FaceExpressionNet",e)}forwardInput(e){return W(()=>ps(this.runNet(e)))}async forward(e){return this.forwardInput(await Sn(e))}async predictExpressions(e){let t=await Sn(e),n=await this.forwardInput(t),r=await Promise.all(Et(n).map(async s=>{let i=s.dataSync();return s.dispose(),i}));n.dispose();let a=r.map(s=>new hv(s));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function qde(e){return e.expressions instanceof hv}function Kde(e,t){return{...e,expressions:t}}function Xde(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(a=>{let s=a instanceof hv?a:qde(a)?a.expressions:void 0;if(!s)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let i=s.asSortedArray().filter(l=>l.probability>n),o=_p(a)?a.detection.box.bottomLeft:r||new ut(0,0);new lv(i.map(l=>`${l.expression} (${nv(l.probability)})`),o).draw(e)})}function cv(e){return _p(e)&&e.landmarks instanceof Tp&&e.unshiftedLandmarks instanceof Tp&&e.alignedRect instanceof xr}function Zde(e){let t=l=>l*180/Math.PI,n=(l,p)=>Math.sqrt((l.x-p.x)**2+(l.y-p.y)**2),r={roll:void 0,pitch:void 0,yaw:void 0},a=(l,p,u)=>{let d=Math.floor(l.x-p.x),h=Math.floor(p.x-u.x);return d-h},s=(l,p)=>{let u=Math.hypot(p.x-l.x,p.y-l.y),d=p.y-l.y,h=Math.asin(d/u),c=t(h),m=Math.floor(90-c),f=p.x-l.x<0?-1:1;return m*f},i=(l,p,u)=>{let d=n(l,u),h=new ut((l.x+u.x)/2,(l.y+u.y)/2),c=n(p,h),m=Math.atan(c/d),f=Math.floor(t(m)),g=h.y-p.y<0?-1:1;return f*g};if(!e||!e.positions||e.positions.length!==68)return r;let o=e.positions;return r.roll=s(o[27],o[66]),r.pitch=i(o[14],o[30],o[2]),r.yaw=a(o[14],o[33],o[2]),r}function gE(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new xr(e.detection.score,a.rescale(s.reverse()),s),o=Zde(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var yE=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},bE=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new yE(t)}draw(e){let t=ts(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof qC&&(t.strokeStyle=s,t.lineWidth=a,$a(t,this.faceLandmarks.getJawOutline()),$a(t,this.faceLandmarks.getLeftEyeBrow()),$a(t,this.faceLandmarks.getRightEyeBrow()),$a(t,this.faceLandmarks.getNose()),$a(t,this.faceLandmarks.getLeftEye(),!0),$a(t,this.faceLandmarks.getRightEye(),!0),$a(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let l=p=>{t.beginPath(),t.arc(p.x,p.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(l)}}};function Jde(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof Tp?n:cv(n)?n.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new bE(r).draw(e)})}function Yde(e,t){let n=uv(e,t),r=pv(e,t);function a(i,o,l){let p=r(i,o,`${l}/separable_conv0`),u=r(o,o,`${l}/separable_conv1`),d=n(i,o,1,`${l}/expansion_conv`);return{separable_conv0:p,separable_conv1:u,expansion_conv:d}}function s(i,o){let l=r(i,i,`${o}/separable_conv0`),p=r(i,i,`${o}/separable_conv1`),u=r(i,i,`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:p,separable_conv2:u}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:a,extractMainBlockParams:s}}function Qde(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=bs(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=Yde(r,n),p=s(3,32,3,"entry_flow/conv_in"),u=o(32,64,"entry_flow/reduction_block_0"),d=o(64,128,"entry_flow/reduction_block_1"),h={conv_in:p,reduction_block_0:u,reduction_block_1:d},c={};ml(t,0,1).forEach(y=>{c[`main_block_${y}`]=l(128,`middle_flow/main_block_${y}`)});let m=o(128,256,"exit_flow/reduction_block"),f=i(256,512,"exit_flow/separable_conv"),g={reduction_block:m,separable_conv:f};if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:h,middle_flow:c,exit_flow:g}}}function ehe(e,t){let n=Mo(e,t),r=dE(n),a=dv(n);function s(o){let l=a(`${o}/separable_conv0`),p=a(`${o}/separable_conv1`),u=r(`${o}/expansion_conv`);return{separable_conv0:l,separable_conv1:p,expansion_conv:u}}function i(o){let l=a(`${o}/separable_conv0`),p=a(`${o}/separable_conv1`),u=a(`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:p,separable_conv2:u}}return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function the(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=ehe(e,n),o=r("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),p=s("entry_flow/reduction_block_1"),u={conv_in:o,reduction_block_0:l,reduction_block_1:p},d={};ml(t,0,1).forEach(f=>{d[`main_block_${f}`]=i(`middle_flow/main_block_${f}`)});let h=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),m={reduction_block:h,separable_conv:c};return ys(e,n),{params:{entry_flow:u,middle_flow:d,exit_flow:m},paramMappings:n}}function xE(e,t,n){return J(kn(e,t.filters,n,"same"),t.bias)}function ef(e,t,n=!0){let r=n?it(e):e;return r=sr(r,t.separable_conv0,[1,1]),r=sr(it(r),t.separable_conv1,[1,1]),r=Zt(r,[3,3],[2,2],"same"),r=J(r,xE(e,t.expansion_conv,[2,2])),r}function nhe(e,t){let n=sr(it(e),t.separable_conv0,[1,1]);return n=sr(it(n),t.separable_conv1,[1,1]),n=sr(it(n),t.separable_conv2,[1,1]),n=J(n,e),n}var rhe=class extends gs{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return W(()=>{let n=ie(e.toBatchTensor(112,!0),"float32"),r=Ad(n,[122.782,117.001,104.298]).div(255),a=it(xE(r,t.entry_flow.conv_in,[2,2]));return a=ef(a,t.entry_flow.reduction_block_0,!1),a=ef(a,t.entry_flow.reduction_block_1),ml(this._numMainBlocks,0,1).forEach(s=>{a=nhe(a,t.middle_flow[`main_block_${s}`])}),a=ef(a,t.exit_flow.reduction_block),a=it(sr(a,t.exit_flow.separable_conv,[1,1])),a})}async forward(e){return this.forwardInput(await Sn(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return the(e,this._numMainBlocks)}extractParams(e){return Qde(e,this._numMainBlocks)}};function ahe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=bs(e),a=lE(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function she(e){let t=[],n=Mo(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return ys(e,t),{params:a,paramMappings:t}}var ihe=(e=>(e.FEMALE="female",e.MALE="male",e))(ihe||{}),ohe=class extends gs{constructor(e=new rhe(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof Qh?this.faceFeatureExtractor.forwardInput(e):e,r=ya(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1),a=lg(r,t.fc.age).as1D(),s=lg(r,t.fc.gender);return{age:a,gender:s}})}forwardInput(e){return W(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:ps(n)}})}async forward(e){return this.forwardInput(await Sn(e))}async predictAgeAndGender(e){let t=await Sn(e),n=await this.forwardInput(t),r=Et(n.age),a=Et(n.gender),s=r.map((o,l)=>({ageTensor:o,genderTensor:a[l]})),i=await Promise.all(s.map(async({ageTensor:o,genderTensor:l})=>{let p=o.dataSync()[0],u=l.dataSync()[0],d=u>.5,h=d?"male":"female",c=d?u:1-u;return o.dispose(),l.dispose(),{age:p,gender:h,genderProbability:c}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return ahe(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=mE(e);return this.faceFeatureExtractor.loadFromWeightMap(t),she(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},vE=class extends fE{postProcess(e,t,n){let r=n.map(({width:s,height:i})=>{let o=t/Math.max(i,s);return{width:s*o,height:i*o}}),a=r.length;return W(()=>{let s=(p,u)=>Lt([Gn([68],p,"float32"),Gn([68],u,"float32")],1).as2D(1,136).as1D(),i=(p,u)=>{let{width:d,height:h}=r[p];return u(d,h)?Math.abs(d-h)/2:0},o=p=>i(p,(u,d)=>u<d),l=p=>i(p,(u,d)=>d<u);return e.mul(Gn([a,136],t,"float32")).sub(Lt(Array.from(Array(a),(p,u)=>s(o(u),l(u))))).div(Lt(Array.from(Array(a),(p,u)=>s(r[u].width,r[u].height))))})}forwardInput(e){return W(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([n,r])=>({height:n,width:r})))})}async forward(e){return this.forwardInput(await Sn(e))}async detectLandmarks(e){let t=await Sn(e),n=W(()=>Et(this.forwardInput(t))),r=await Promise.all(n.map(async(a,s)=>{let i=Array.from(a.dataSync()),o=i.filter((p,u)=>ag(u)),l=i.filter((p,u)=>!ag(u));return new qC(Array(68).fill(0).map((p,u)=>new ut(o[u],l[u])),{height:t.getInputHeight(s),width:t.getInputWidth(s)})}));return n.forEach(a=>a.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},lhe=class extends vE{constructor(e=new cE){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function uhe(e){let t=[],{extractDenseBlock3Params:n}=hE(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return ys(e,t),{params:r,paramMappings:t}}function phe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=bs(e),{extractDenseBlock3Params:a}=pE(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var dhe=class extends gs{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return W(()=>{let n=ie(e.toBatchTensor(112,!0),"float32"),r=Ad(n,[122.782,117.001,104.298]).div(255),a=Qm(r,t.dense0,!0);return a=Qm(a,t.dense1),a=Qm(a,t.dense2),a=ya(a,[14,14],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await Sn(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return uhe(e)}extractParams(e){return phe(e)}},hhe=class extends vE{constructor(e=new dhe){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};function che(e,t){return J(z(e,t.weights),t.biases)}function mv(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=kn(e,s,n,a);return o=J(o,i),o=che(o,t.scale),r?it(o):o}function mhe(e,t){return mv(e,t,[1,1],!0)}function wE(e,t){return mv(e,t,[1,1],!1)}function kE(e,t){return mv(e,t,[2,2],!0,"valid")}function fhe(e,t){function n(o,l,p){let u=e(o),d=u.length/(l*p*p);if(BC(d))throw new Error(`depth has to be an integer: ${d}, weights.length: ${u.length}, numFilters: ${l}, filterSize: ${p}`);return W(()=>We(Ka(u,[l,d,p,p]),[2,3,1,0]))}function r(o,l,p,u){let d=n(o,l,p),h=at(e(l));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/bias`}),{filters:d,bias:h}}function a(o,l){let p=at(e(o)),u=at(e(o));return t.push({paramPath:`${l}/weights`},{paramPath:`${l}/biases`}),{weights:p,biases:u}}function s(o,l,p,u){let d=r(o,l,p,`${u}/conv`),h=a(l,`${u}/scale`);return{conv:d,scale:h}}function i(o,l,p,u,d=!1){let h=s((d?.5:1)*o,l,p,`${u}/conv1`),c=s(o,l,p,`${u}/conv2`);return{conv1:h,conv2:c}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function ghe(e){let{extractWeights:t,getRemainingWeights:n}=bs(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=fhe(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),p=s(9216,32,3,"conv32_3"),u=s(36864,64,3,"conv64_down",!0),d=s(36864,64,3,"conv64_1"),h=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),m=s(147456,128,3,"conv128_down",!0),f=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),I=W(()=>We(qr(t(256*128),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:p,conv64_down:u,conv64_1:d,conv64_2:h,conv64_3:c,conv128_down:m,conv128_1:f,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:I},paramMappings:r}}function yhe(e,t){let n=Mo(e,t);function r(i){let o=n(`${i}/scale/weights`,1),l=n(`${i}/scale/biases`,1);return{weights:o,biases:l}}function a(i){let o=n(`${i}/conv/filters`,4),l=n(`${i}/conv/bias`,1),p=r(i);return{conv:{filters:o,bias:l},scale:p}}function s(i){return{conv1:a(`${i}/conv1`),conv2:a(`${i}/conv2`)}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function bhe(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=yhe(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),p=r("conv64_1"),u=r("conv64_2"),d=r("conv64_3"),h=r("conv128_down"),c=r("conv128_1"),m=r("conv128_2"),f=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!PC(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:p,conv64_2:u,conv64_3:d,conv128_down:h,conv128_1:c,conv128_2:m,conv256_down:f,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return ys(e,t),{params:v,paramMappings:t}}function Lr(e,t){let n=mhe(e,t.conv1);return n=wE(n,t.conv2),n=J(n,e),n=it(n),n}function hh(e,t){let n=kE(e,t.conv1);n=wE(n,t.conv2);let r=ya(e,2,2,"valid"),a=Nt(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let i=[...n.shape];i[1]=1;let o=Nt(i);n=dt([n,o],1);let l=[...n.shape];l[2]=1;let p=Nt(l);n=dt([n,p],2)}return r=s?dt([r,a],3):r,n=J(r,n),n=it(n),n}var xhe=class extends gs{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return W(()=>{let n=ie(e.toBatchTensor(150,!0),"float32"),r=Ad(n,[122.782,117.001,104.298]).div(255),a=kE(r,t.conv32_down);a=Zt(a,3,2,"valid"),a=Lr(a,t.conv32_1),a=Lr(a,t.conv32_2),a=Lr(a,t.conv32_3),a=hh(a,t.conv64_down),a=Lr(a,t.conv64_1),a=Lr(a,t.conv64_2),a=Lr(a,t.conv64_3),a=hh(a,t.conv128_down),a=Lr(a,t.conv128_1),a=Lr(a,t.conv128_2),a=hh(a,t.conv256_down),a=Lr(a,t.conv256_1),a=Lr(a,t.conv256_2),a=hh(a,t.conv256_down_out);let s=a.mean([1,2]);return Be(s,t.fc)})}async forward(e){return this.forwardInput(await Sn(e))}async computeFaceDescriptor(e){var t;if((t=e==null?void 0:e.shape)!=null&&t.some(s=>s<=0))return new Float32Array(128);let n=await Sn(e),r=W(()=>Et(this.forwardInput(n))),a=await Promise.all(r.map(s=>s.data()));return r.forEach(s=>s.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return bhe(e)}extractParams(e){return ghe(e)}};function vhe(e,t){return{...e,descriptor:t}}function whe(e,t){return{...e,age:t}}function khe(e,t,n){return{...e,gender:t,genderProbability:n}}function Ihe(e,t){function n(l,p){let u=Ka(e(9*l),[3,3,l,1]),d=at(e(l)),h=at(e(l)),c=at(e(l)),m=at(e(l));return t.push({paramPath:`${p}/filters`},{paramPath:`${p}/batch_norm_scale`},{paramPath:`${p}/batch_norm_offset`},{paramPath:`${p}/batch_norm_mean`},{paramPath:`${p}/batch_norm_variance`}),{filters:u,batch_norm_scale:d,batch_norm_offset:h,batch_norm_mean:c,batch_norm_variance:m}}function r(l,p,u,d,h){let c=Ka(e(l*p*u*u),[u,u,l,p]),m=at(e(p));return t.push({paramPath:`${d}/filters`},{paramPath:`${d}/${h?"batch_norm_offset":"bias"}`}),{filters:c,bias:m}}function a(l,p,u,d){let{filters:h,bias:c}=r(l,p,u,d,!0);return{filters:h,batch_norm_offset:c}}function s(l,p,u){let d=n(l,`${u}/depthwise_conv`),h=a(l,p,1,`${u}/pointwise_conv`);return{depthwise_conv:d,pointwise_conv:h}}function i(){let l=a(3,32,3,"mobilenetv1/conv_0"),p=s(32,64,"mobilenetv1/conv_1"),u=s(64,128,"mobilenetv1/conv_2"),d=s(128,128,"mobilenetv1/conv_3"),h=s(128,256,"mobilenetv1/conv_4"),c=s(256,256,"mobilenetv1/conv_5"),m=s(256,512,"mobilenetv1/conv_6"),f=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),v=s(512,1024,"mobilenetv1/conv_12"),I=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:l,conv_1:p,conv_2:u,conv_3:d,conv_4:h,conv_5:c,conv_6:m,conv_7:f,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:v,conv_13:I}}function o(){let l=a(1024,256,1,"prediction_layer/conv_0"),p=a(256,512,3,"prediction_layer/conv_1"),u=a(512,128,1,"prediction_layer/conv_2"),d=a(128,256,3,"prediction_layer/conv_3"),h=a(256,128,1,"prediction_layer/conv_4"),c=a(128,256,3,"prediction_layer/conv_5"),m=a(256,64,1,"prediction_layer/conv_6"),f=a(64,128,3,"prediction_layer/conv_7"),g=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),v=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),I=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),N=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),C=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),E=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),A=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),R=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),F=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:l,conv_1:p,conv_2:u,conv_3:d,conv_4:h,conv_5:c,conv_6:m,conv_7:f,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:v,class_predictor:I},box_predictor_3:{box_encoding_predictor:N,class_predictor:C},box_predictor_4:{box_encoding_predictor:E,class_predictor:A},box_predictor_5:{box_encoding_predictor:R,class_predictor:F}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function She(e){let t=[],{extractWeights:n,getRemainingWeights:r}=bs(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=Ihe(n,t),i=a(),o=s(),l={extra_dim:Vc(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}function Nhe(e,t){let n=Mo(e,t);function r(p,u,d){let h=n(`${p}/Conv2d_${u}_pointwise/weights`,4,`${d}/filters`),c=n(`${p}/Conv2d_${u}_pointwise/convolution_bn_offset`,1,`${d}/batch_norm_offset`);return{filters:h,batch_norm_offset:c}}function a(p){let u=`mobilenetv1/conv_${p}`,d=`MobilenetV1/Conv2d_${p}_depthwise`,h=`${u}/depthwise_conv`,c=`${u}/pointwise_conv`,m=n(`${d}/depthwise_weights`,4,`${h}/filters`),f=n(`${d}/BatchNorm/gamma`,1,`${h}/batch_norm_scale`),g=n(`${d}/BatchNorm/beta`,1,`${h}/batch_norm_offset`),y=n(`${d}/BatchNorm/moving_mean`,1,`${h}/batch_norm_mean`),b=n(`${d}/BatchNorm/moving_variance`,1,`${h}/batch_norm_variance`);return{depthwise_conv:{filters:m,batch_norm_scale:f,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:r("MobilenetV1",p,c)}}function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(p,u){let d=n(`${p}/weights`,4,`${u}/filters`),h=n(`${p}/biases`,1,`${u}/bias`);return{filters:d,bias:h}}function o(p){let u=i(`Prediction/BoxPredictor_${p}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${p}/box_encoding_predictor`),d=i(`Prediction/BoxPredictor_${p}/ClassPredictor`,`prediction_layer/box_predictor_${p}/class_predictor`);return{box_encoding_predictor:u,class_predictor:d}}function l(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function The(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=Nhe(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!$d(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return ys(e,t),{params:s,paramMappings:t}}function Br(e,t,n){return W(()=>{let r=kn(e,t.filters,n,"same");return r=J(r,t.batch_norm_offset),cn(r,0,6)})}var _he=.0010000000474974513;function Che(e,t,n){return W(()=>{let r=No(e,t.filters,n,"same");return r=So(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,_he),cn(r,0,6)})}function Ehe(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function $he(e,t){return W(()=>{let n,r=Br(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,s)=>{let i=s+1,o=Ehe(i);r=Che(r,a.depthwise_conv,o),r=Br(r,a.pointwise_conv,[1,1]),i===11&&(n=r)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function Ahe(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),p=Math.min(r[n][1],r[n][3]),u=Math.max(r[n][0],r[n][2]),d=Math.max(r[n][1],r[n][3]),h=(i-a)*(o-s),c=(u-l)*(d-p);if(h<=0||c<=0)return 0;let m=Math.max(a,l),f=Math.max(s,p),g=Math.min(i,u),y=Math.min(o,d),b=Math.max(g-m,0)*Math.max(y-f,0);return b/(h+c-b)}function Fhe(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map((u,d)=>({score:u,boxIndex:d})).filter(u=>u.score>a).sort((u,d)=>d.score-u.score),l=u=>u<=r?1:0,p=[];return o.forEach(u=>{if(p.length>=i)return;let d=u.score;for(let h=p.length-1;h>=0;--h){let c=Ahe(e,u.boxIndex,p[h]);if(c!==0&&(u.score*=l(c),u.score<=a))break}d===u.score&&p.push(u.boxIndex)}),p}function Rhe(e){let t=Et(We(e,[1,0])),n=[fe(t[2],t[0]),fe(t[3],t[1])],r=[J(t[0],ye(n[0],2)),J(t[1],ye(n[1],2))];return{sizes:n,centers:r}}function Dhe(e,t){let{sizes:n,centers:r}=Rhe(e),a=Et(We(t,[1,0])),s=ye(z(mn(ye(a[2],5)),n[0]),2),i=J(z(ye(a[0],10),n[0]),r[0]),o=ye(z(mn(ye(a[3],5)),n[1]),2),l=J(z(ye(a[1],10),n[1]),r[1]);return We(Lt([fe(i,s),fe(l,o),J(i,s),J(l,o)]),[1,0])}function Mhe(e,t,n){return W(()=>{let r=e.shape[0],a=Dhe(B(Un(n.extra_dim,[r,1,1]),[-1,4]),B(e,[-1,4]));a=B(a,[r,a.shape[0]/r,4]);let s=yr(Ze(t,[0,0,1],[-1,-1,-1])),i=Ze(s,[0,0,0],[-1,-1,1]);i=B(i,[r,i.shape[1]]);let o=Et(a),l=Et(i);return{boxes:o,scores:l}})}function Vo(e,t){return W(()=>{let n=e.shape[0],r=B(op(e,t.box_encoding_predictor),[n,-1,1,4]),a=B(op(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:a}})}function Ohe(e,t,n){return W(()=>{let r=Br(e,n.conv_0,[1,1]),a=Br(r,n.conv_1,[2,2]),s=Br(a,n.conv_2,[1,1]),i=Br(s,n.conv_3,[2,2]),o=Br(i,n.conv_4,[1,1]),l=Br(o,n.conv_5,[2,2]),p=Br(l,n.conv_6,[1,1]),u=Br(p,n.conv_7,[2,2]),d=Vo(t,n.box_predictor_0),h=Vo(e,n.box_predictor_1),c=Vo(a,n.box_predictor_2),m=Vo(i,n.box_predictor_3),f=Vo(l,n.box_predictor_4),g=Vo(u,n.box_predictor_5),y=dt([d.boxPredictionEncoding,h.boxPredictionEncoding,c.boxPredictionEncoding,m.boxPredictionEncoding,f.boxPredictionEncoding,g.boxPredictionEncoding],1),b=dt([d.classPrediction,h.classPrediction,c.classPrediction,m.classPrediction,f.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var Cm=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Lhe=class extends gs{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return W(()=>{let n=ie(e.toBatchTensor(512,!1),"float32"),r=fe(ye(n,127.5),1),a=$he(r,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=Ohe(a.out,a.conv11,t.prediction_layer);return Mhe(s,i,t.output_layer)})}async forward(e){return this.forwardInput(await Sn(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new Cm(t),a=await Sn(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let p=Array.from(l.dataSync()),u=Fhe(o,p,n,.5,r),d=a.getReshapedInputDimensions(0),h=a.inputSize,c=h/d.width,m=h/d.height,f=o.arraySync(),g=u.map(y=>{let[b,x]=[Math.max(0,f[y][0]),Math.min(1,f[y][2])].map(N=>N*m),[v,I]=[Math.max(0,f[y][1]),Math.min(1,f[y][3])].map(N=>N*c);return new xr(p[y],new jC(v,b,I-v,x-b),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return The(e)}extractParams(e){return She(e)}},zhe=.4,Phe=[new ut(.738768,.874946),new ut(2.42204,2.65704),new ut(4.30971,7.04493),new ut(10.246,4.59428),new ut(12.6868,11.8741)],Bhe=[new ut(1.603231,2.094468),new ut(6.041143,7.080126),new ut(2.882459,3.518061),new ut(4.266906,5.178857),new ut(9.041765,10.66308)],Whe=[117.001,114.697,97.404],Vhe="tiny_yolov2_model",Uhe="tiny_yolov2_separable_conv_model",ch=e=>typeof e=="number";function Ghe(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!ch(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>ch(t.x)&&ch(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(ch)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function fv(e){return W(()=>{let t=z(e,Se(.10000000149011612));return J(it(fe(e,t)),t)})}function Ta(e,t){return W(()=>{let n=Dr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=kn(n,t.conv.filters,[1,1],"valid"),n=fe(n,t.bn.sub),n=z(n,t.bn.truediv),n=J(n,t.conv.bias),fv(n)})}function _a(e,t){return W(()=>{let n=Dr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Iu(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=J(n,t.bias),fv(n)})}function Hhe(e,t){let n=uv(e,t);function r(i,o){let l=at(e(i)),p=at(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:l,truediv:p}}function a(i,o,l){let p=n(i,o,3,`${l}/conv`),u=r(o,`${l}/bn`);return{conv:p,bn:u}}let s=pv(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function jhe(e,t,n,r){let{extractWeights:a,getRemainingWeights:s}=bs(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:l,extractSeparableConvParams:p}=Hhe(a,i),u;if(t.withSeparableConvs){let[d,h,c,m,f,g,y,b,x]=r,v=t.isFirstLayerConv2d?o(d,h,3,"conv0"):p(d,h,"conv0"),I=p(h,c,"conv1"),N=p(c,m,"conv2"),C=p(m,f,"conv3"),E=p(f,g,"conv4"),A=p(g,y,"conv5"),R=b?p(y,b,"conv6"):void 0,F=x?p(b,x,"conv7"):void 0,S=o(x||b||y,5*n,1,"conv8");u={conv0:v,conv1:I,conv2:N,conv3:C,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}else{let[d,h,c,m,f,g,y,b,x]=r,v=l(d,h,"conv0"),I=l(h,c,"conv1"),N=l(c,m,"conv2"),C=l(m,f,"conv3"),E=l(f,g,"conv4"),A=l(g,y,"conv5"),R=l(y,b,"conv6"),F=l(b,x,"conv7"),S=o(x,5*n,1,"conv8");u={conv0:v,conv1:I,conv2:N,conv3:C,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:u,paramMappings:i}}function qhe(e,t){let n=Mo(e,t);function r(o){let l=n(`${o}/sub`,1),p=n(`${o}/truediv`,1);return{sub:l,truediv:p}}function a(o){let l=n(`${o}/filters`,4),p=n(`${o}/bias`,1);return{filters:l,bias:p}}function s(o){let l=a(`${o}/conv`),p=r(`${o}/bn`);return{conv:l,bn:p}}let i=dv(n);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function Khe(e,t){let n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=qhe(e,n),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return ys(e,n),{params:i,paramMappings:n}}var gv=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,typeof this._inputSize!="number"||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},IE=class SE extends gs{constructor(t){super("TinyYolov2"),Ghe(t),this._config=t}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(t,n){let r=Ta(t,n.conv0);return r=Zt(r,[2,2],[2,2],"same"),r=Ta(r,n.conv1),r=Zt(r,[2,2],[2,2],"same"),r=Ta(r,n.conv2),r=Zt(r,[2,2],[2,2],"same"),r=Ta(r,n.conv3),r=Zt(r,[2,2],[2,2],"same"),r=Ta(r,n.conv4),r=Zt(r,[2,2],[2,2],"same"),r=Ta(r,n.conv5),r=Zt(r,[2,2],[1,1],"same"),r=Ta(r,n.conv6),r=Ta(r,n.conv7),op(r,n.conv8,"valid",!1)}runMobilenet(t,n){let r=this.config.isFirstLayerConv2d?fv(op(t,n.conv0,"valid",!1)):_a(t,n.conv0);return r=Zt(r,[2,2],[2,2],"same"),r=_a(r,n.conv1),r=Zt(r,[2,2],[2,2],"same"),r=_a(r,n.conv2),r=Zt(r,[2,2],[2,2],"same"),r=_a(r,n.conv3),r=Zt(r,[2,2],[2,2],"same"),r=_a(r,n.conv4),r=Zt(r,[2,2],[2,2],"same"),r=_a(r,n.conv5),r=Zt(r,[2,2],[1,1],"same"),r=n.conv6?_a(r,n.conv6):r,r=n.conv7?_a(r,n.conv7):r,op(r,n.conv8,"valid",!1)}forwardInput(t,n){let{params:r}=this;if(!r)throw new Error("TinyYolov2 - load model before inference");return W(()=>{let a=ie(t.toBatchTensor(n,!1),"float32");return a=this.config.meanRgb?Ad(a,this.config.meanRgb):a,a=a.div(255),this.config.withSeparableConvs?this.runMobilenet(a,r):this.runTinyYolov2(a,r)})}async forward(t,n){return this.forwardInput(await Sn(t),n)}async detect(t,n={}){let{inputSize:r,scoreThreshold:a}=new gv(n),s=await Sn(t),i=await this.forwardInput(s,r),o=W(()=>Et(i)[0].expandDims()),l={width:s.getInputWidth(0),height:s.getInputHeight(0)},p=await this.extractBoxes(o,s.getReshapedInputDimensions(0),a);i.dispose(),o.dispose();let u=p.map(m=>m.box),d=p.map(m=>m.score),h=p.map(m=>m.classScore),c=p.map(m=>this.config.classes[m.label]);return Cde(u.map(m=>m.rescale(r)),d,this.config.iouThreshold,!0).map(m=>new UC(d[m],h[m],c[m],u[m],l))}getDefaultModelName(){return""}extractParamsFromWeightMap(t){return Khe(t,this.config)}extractParams(t){let n=this.config.filterSizes||SE.DEFAULT_FILTER_SIZES,r=n?n.length:void 0;if(r!==7&&r!==8&&r!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${r} filterSizes in config`);return jhe(t,this.config,this.boxEncodingSize,n)}async extractBoxes(t,n,r){let{width:a,height:s}=n,i=Math.max(a,s),o=i/a,l=i/s,p=t.shape[1],u=this.config.anchors.length,[d,h,c]=W(()=>{let y=t.reshape([p,p,u,this.boxEncodingSize]),b=y.slice([0,0,0,0],[p,p,u,4]),x=y.slice([0,0,0,4],[p,p,u,1]),v=this.withClassScores?ps(y.slice([0,0,0,5],[p,p,u,this.config.classes.length]),3):Se(0);return[b,x,v]}),m=[],f=await h.array(),g=await d.array();for(let y=0;y<p;y++)for(let b=0;b<p;b++)for(let x=0;x<u;x++){let v=Ym(f[y][b][x][0]);if(!r||v>r){let I=(b+Ym(g[y][b][x][0]))/p*o,N=(y+Ym(g[y][b][x][1]))/p*l,C=Math.exp(g[y][b][x][2])*this.config.anchors[x].x/p*o,E=Math.exp(g[y][b][x][3])*this.config.anchors[x].y/p*l,A=I-C/2,R=N-E/2,F={row:y,col:b,anchor:x},{classScore:S,label:D}=this.withClassScores?await this.extractPredictedClass(c,F):{classScore:1,label:0};m.push({box:new VC(A,R,A+C,R+E),score:v,classScore:v*S,label:D,...F})}}return d.dispose(),h.dispose(),c.dispose(),m}async extractPredictedClass(t,n){let{row:r,col:a,anchor:s}=n,i=await t.array();return Array(this.config.classes.length).fill(0).map((o,l)=>i[r][a][s][l]).map((o,l)=>({classScore:o,label:l})).reduce((o,l)=>o.classScore>l.classScore?o:l)}};IE.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var NE=IE,Xhe=class extends NE{constructor(e=!0){let t={withSeparableConvs:e,iouThreshold:zhe,classes:["face"],...e?{anchors:Bhe,meanRgb:Whe}:{anchors:Phe,withClassScores:!0}};super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new xr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?Uhe:Vhe}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},TE=class extends gv{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},Fd=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function yv(e,t,n,r,a=({alignedRect:s})=>s){let s=e.map(l=>cv(l)?a(l):l.detection),i=r||(t instanceof Ge?await iE(t,s):await sE(t,s)),o=await n(i);return i.forEach(l=>l instanceof Ge&&l.dispose()),o}var Zhe=.4,Jhe=[new ut(1.603231,2.094468),new ut(6.041143,7.080126),new ut(2.882459,3.518061),new ut(4.266906,5.178857),new ut(9.041765,10.66308)],Yhe=[117.001,114.697,97.404],Qhe=class extends NE{constructor(){let e={withSeparableConvs:!0,iouThreshold:Zhe,classes:["face"],anchors:Jhe,meanRgb:Yhe,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new xr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},tr={ssdMobilenetv1:new Lhe,tinyFaceDetector:new Qhe,tinyYolov2:new Xhe,faceLandmark68Net:new lhe,faceLandmark68TinyNet:new hhe,faceRecognitionNet:new xhe,faceExpressionNet:new jde,ageGenderNet:new ohe},ece=class extends Fd{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},bv=class extends ece{async run(){let e=await this.parentTask,t=await yv(e,this.input,async n=>Promise.all(n.map(r=>tr.faceExpressionNet.predictExpressions(r))),this.extractedFaces);return e.map((n,r)=>Kde(n,t[r]))}withAgeAndGender(){return new vv(this,this.input)}},xv=class extends bv{withAgeAndGender(){return new wv(this,this.input)}withFaceDescriptors(){return new kv(this,this.input)}},tce=class extends Fd{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},vv=class extends tce{async run(){let e=await this.parentTask,t=await yv(e,this.input,async n=>Promise.all(n.map(r=>tr.ageGenderNet.predictAgeAndGender(r))),this.extractedFaces);return e.map((n,r)=>{let{age:a,gender:s,genderProbability:i}=t[r];return whe(khe(n,s,i),a)})}withFaceExpressions(){return new bv(this,this.input)}},wv=class extends vv{withFaceExpressions(){return new xv(this,this.input)}withFaceDescriptors(){return new kv(this,this.input)}},nce=class extends Fd{constructor(e,t){super(),this.parentTask=e,this.input=t}},kv=class extends nce{async run(){let e=await this.parentTask;return(await yv(e,this.input,t=>Promise.all(t.map(n=>tr.faceRecognitionNet.computeFaceDescriptor(n))),null,t=>t.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>vhe(e[n],t))}withFaceExpressions(){return new xv(this,this.input)}withAgeAndGender(){return new wv(this,this.input)}},rce=class extends Fd{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?tr.faceLandmark68TinyNet:tr.faceLandmark68Net}},ace=class extends rce{async run(){let e=await this.parentTask,t=e.map(a=>a.detection),n=this.input instanceof Ge?await iE(this.input,t):await sE(this.input,t),r=await Promise.all(n.map(a=>this.landmarkNet.detectLandmarks(a)));return n.forEach(a=>a instanceof Ge&&a.dispose()),e.filter((a,s)=>r[s]).map((a,s)=>gE(a,r[s]))}withFaceExpressions(){return new xv(this,this.input)}withAgeAndGender(){return new wv(this,this.input)}withFaceDescriptors(){return new kv(this,this.input)}},sce=class extends Fd{constructor(e,t=new Cm){super(),this.input=e,this.options=t}},ice=class extends sce{async run(){let{input:e,options:t}=this,n;if(t instanceof TE)n=tr.tinyFaceDetector.locateFaces(e,t);else if(t instanceof Cm)n=tr.ssdMobilenetv1.locateFaces(e,t);else if(t instanceof gv)n=tr.tinyYolov2.locateFaces(e,t);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return n}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(n=>e(n.map(r=>ig({},r)))).catch(n=>t(n))})}withFaceLandmarks(e=!1){return new ace(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new bv(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new vv(this.runAndExtendWithFaceDetections(),this.input)}};function oce(e,t=new Cm){return new ice(e,t)}function _E(e,t){let{width:n,height:r}=new Os(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map(a=>_E(a,{width:n,height:r}));if(cv(e)){let a=e.detection.forSize(n,r),s=e.unshiftedLandmarks.forSize(a.box.width,a.box.height);return gE(ig(e,a),s)}return _p(e)?ig(e,e.detection.forSize(n,r)):e instanceof Tp||e instanceof xr?e.forSize(n,r):e}const CE=e=>(r$("data-v-6b330e57"),e=e(),a$(),e),lce={class:"app-container bg-[#f8f8f8] min-h-screen flex flex-col"},uce={class:"bg-red-500 text-white py-4",role:"banner"},pce={class:"container mx-auto flex items-center justify-between px-4"},dce=CE(()=>mt("div",{class:"flex items-center"},[mt("img",{src:s$,alt:"Panadero Logo",class:"mx-2",width:"45"}),mt("b",{class:"font-black text-2xl"},"Panadero")],-1)),hce={class:"text-right"},cce={class:"text-3xl font-bold"},mce={class:"text-sm"},fce={class:"flex-1 flex flex-col md:flex-row"},gce={class:"bg-white rounded shadow p-4 h-full"},yce={class:"flex items-center gap-2"},bce={class:"w-full md:w-1/3 p-4"},xce={class:"relative w-full mb-4",style:{"padding-top":"75%"}},vce={class:"flex justify-center mt-2"},wce={class:"text-xl font-semibold"},kce={class:"flex justify-center mt-2"},Ice=["disabled"],Sce={key:0,class:"spinner mr-2"},Nce={key:0,class:"p-4"},Tce={class:"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4"},_ce=CE(()=>mt("strong",{class:"font-bold"},"Match Found!",-1)),Cce={class:"block"},Ece={class:"block"},$ce={__name:"DailyTimeRecordView",setup(e){const t=i$(),n=Rt(1),r=Rt(""),a=Rt(""),s=Rt("time_in"),i=Rt(null),o=Rt(0),l=Rt([]),p=Rt(null),u=JE.useLoading(),d=Rt(null);Lv(()=>t.isLoading,se=>{se?!d.value&&p.value&&(d.value=u.show({container:p.value,canCancel:!1,isFullPage:!1,color:"#3b82f6",opacity:.8})):d.value&&(d.value.hide(),d.value=null)},{immediate:!0}),YE(()=>{d.value&&(d.value.hide(),d.value=null)});const h=Rt(""),c=Rt("idle"),m=Rt(0),f=Rt(0),g=Rt(null),y=Rt(0),b=[{instruction:"Please turn your head to the left",condition:(se,ue)=>ue&&se&&se.yaw<ue.yaw-60},{instruction:"Please turn your head to the right",condition:(se,ue)=>ue&&se&&se.yaw>ue.yaw+60},{instruction:"Please nod your head",condition:(se,ue)=>ue&&se&&se.pitch>ue.pitch+10}];function x(se,ue){if(!ue||!se)return!1;const Le=10,Me=5;return Math.abs(se.yaw-ue.yaw)<Le&&Math.abs(se.pitch-ue.pitch)<Me}let v;if(window.Worker){const se=new Blob([`
    self.onmessage = function(e) {
      setTimeout(() => {
        self.postMessage({ processed: true });
      }, 50);
    }
  `],{type:"application/javascript"});v=new Worker(URL.createObjectURL(se))}function I(){const se=Rt(null),ue=Rt(null),Le=Rt(null);let Me=0;function qe(){se.value&&se.value.setAttribute("crossOrigin","anonymous"),navigator.mediaDevices.getUserMedia({video:!0}).then(Xe=>{se.value&&(se.value.srcObject=Xe,se.value.play())}).catch(Xe=>{h.value="Error accessing camera.",console.error("Error accessing camera:",Xe)})}function Fe(){if(se.value&&ue.value){const Xe=se.value.parentElement;Xe&&(ue.value.width=Xe.clientWidth,ue.value.height=Xe.clientHeight)}}async function Ye(){if(!se.value||se.value.paused||se.value.ended){requestAnimationFrame(Ye);return}const Xe=performance.now();if(Xe-Me>200){Me=Xe,v&&(v.postMessage({timestamp:Xe}),await new Promise(rt=>{v.onmessage=()=>rt()}));let Kt=[];try{Kt=await oce(se.value,new TE).withFaceLandmarks().withFaceExpressions().withAgeAndGender()}catch(rt){h.value="Face detection error.",console.error(rt)}Fe();const Ne=ue.value,de=Ne.getContext("2d");de.clearRect(0,0,Ne.width,Ne.height);const Wt={width:Ne.width,height:Ne.height},hn=_E(Kt,Wt);for(const rt of hn){const Ue=rt.detection.box;de.lineWidth=3,de.strokeStyle="deepskyblue",de.fillStyle="deepskyblue",de.globalAlpha=.6,de.beginPath(),de.rect(Ue.x,Ue.y,Ue.width,Ue.height),de.stroke(),de.globalAlpha=1;const sn=Object.entries(rt.expressions).sort((Ln,hr)=>hr[1]-Ln[1])[0],Jn=`Gender: ${Math.round(rt.genderProbability*100)}% ${rt.gender}`,Or=`Expression: ${Math.round(sn[1]*100)}% ${sn[0]}`,dr=`Age: ${Math.round(rt.age)} years`,Ia=`roll: ${rt.angle.roll}° pitch: ${rt.angle.pitch}° yaw: ${rt.angle.yaw}°`;de.fillStyle="black",de.font='16px "Segoe UI"',de.fillText(Jn,Ue.x,Ue.y-59),de.fillText(Or,Ue.x,Ue.y-41),de.fillText(dr,Ue.x,Ue.y-23),de.fillStyle="lightblue",de.fillText(Jn,Ue.x,Ue.y-60),de.fillText(Or,Ue.x,Ue.y-42),de.fillText(dr,Ue.x,Ue.y-24),de.fillStyle="black",de.fillText(Ia,Ue.x,Ue.y+Ue.height+20),de.fillStyle="lightblue",de.fillText(Ia,Ue.x,Ue.y+Ue.height+19),de.globalAlpha=.8,de.fillStyle="lightblue",rt.landmarks.positions.forEach(({x:Ln,y:hr})=>{de.beginPath(),de.arc(Ln,hr,2,0,2*Math.PI),de.fill()})}if(document.fullscreenElement===Le.value&&!S.value&&!P.value)if(Kt.length>0){const rt=Kt[0];if(c.value==="idle"&&(c.value="challenge",m.value=0,f.value=Date.now(),g.value=rt.angle),c.value==="challenge"){const Ct=(Date.now()-f.value)/1e3,sn=Math.max(0,Math.ceil(5-Ct)),Jn=Math.min(Ct/5*100,100),Or=Ne.width*(Jn/100);de.fillStyle="rgba(59,130,246,0.8)",de.fillRect(0,Ne.height-10,Or,10),de.fillStyle="rgba(0,0,0,0.5)",de.fillRect(0,0,Ne.width,Ne.height),de.fillStyle="white",de.font="24px Arial",de.textAlign="center",de.fillText(b[m.value].instruction,Ne.width/2,Ne.height/2-20),de.font="48px Arial",de.fillText(sn.toString(),Ne.width/2,Ne.height/2+30),b[m.value].condition(rt.angle,g.value)?(c.value="neutral",y.value=Date.now()):Ct>=5&&(c.value="failed",de.fillStyle="rgba(128,0,0,0.5)",de.fillRect(0,0,Ne.width,Ne.height),de.fillStyle="white",de.font="32px Arial",de.textAlign="center",de.fillText("Challenge Failed",Ne.width/2,Ne.height/2),setTimeout(()=>{c.value="idle",m.value=0,f.value=0,g.value=null,P.value=!0,setTimeout(()=>{P.value=!1},1e4)},1500))}else if(c.value==="neutral")if(x(rt.angle,g.value)){y.value===0&&(y.value=Date.now());const Ue=(Date.now()-y.value)/1e3;de.fillStyle="rgba(0,0,0,0.5)",de.fillRect(0,0,Ne.width,Ne.height),de.fillStyle="white",de.font="28px Arial",de.textAlign="center",de.fillText("Neutral Position Achieved",Ne.width/2,Ne.height/2-10),de.font="24px Arial",de.fillText(`Hold for ${Math.ceil(1-Ue)}s`,Ne.width/2,Ne.height/2+30),Ue>=1&&(m.value++,m.value>=b.length?c.value="complete":(c.value="challenge",f.value=Date.now(),g.value=rt.angle,y.value=0))}else y.value=0,de.fillStyle="rgba(0,0,0,0.5)",de.fillRect(0,0,Ne.width,Ne.height),de.fillStyle="white",de.font="28px Arial",de.textAlign="center",de.fillText("Please return to neutral position",Ne.width/2,Ne.height/2);else c.value==="complete"&&(S.value=!0,we().then(()=>{D.value="Attendance successfully recorded!",S.value=!1,c.value="idle",m.value=0,f.value=0,g.value=null,P.value=!0,document.fullscreenElement&&document.exitFullscreen(),setTimeout(()=>{D.value=""},3e3),setTimeout(()=>{P.value=!1},1e4)}))}else c.value="idle",m.value=0,f.value=0,g.value=null;else c.value="idle",m.value=0,f.value=0,g.value=null;S.value&&(de.fillStyle="rgba(0, 0, 0, 0.5)",de.fillRect(0,0,Ne.width,Ne.height),de.fillStyle="white",de.font="32px Arial",de.textAlign="center",de.fillText("Processing attendance...",Ne.width/2,Ne.height/2)),D.value&&(de.fillStyle="rgba(0, 0, 0, 0.5)",de.fillRect(0,0,Ne.width,Ne.height),de.fillStyle="white",de.font="32px Arial",de.textAlign="center",de.fillText(D.value,Ne.width/2,Ne.height/2))}requestAnimationFrame(Ye)}return{videoRef:se,canvasRef:ue,cameraContainerRef:Le,startCamera:qe,detectFacesLoop:Ye,updateCanvasDimensions:Fe}}const{videoRef:N,canvasRef:C,cameraContainerRef:E,startCamera:A,detectFacesLoop:R,updateCanvasDimensions:F}=I(),S=Rt(!1),D=Rt(""),P=Rt(!1),U=[{key:"employee_id",label:"Employee's Name",sortable:!0,formatter:(se,ue)=>ue.employee?ue.employee.first_name+" "+ue.employee.last_name:""},{key:"type",label:"Type",sortable:!0},{key:"log_time",label:"Log Time",sortable:!0,formatter:se=>te(se)}],G=zv(()=>{var se,ue,Le,Me,qe;return{total:((se=t.items)==null?void 0:se.total)||0,totalPages:((ue=t.items)==null?void 0:ue.totalPages)||1,currentPage:((Le=t.items)==null?void 0:Le.currentPage)||1,pageSize:((Me=t.items)==null?void 0:Me.pageSize)||5,data:((qe=t.items)==null?void 0:qe.data)||[]}});QE(async()=>{ae(),setInterval(ae,1e3),re(),X(),await tr.tinyFaceDetector.loadFromUri("/models/tiny_face_detector"),await tr.faceLandmark68Net.loadFromUri("/models/face_landmark_68"),await tr.faceExpressionNet.loadFromUri("/models/face_expression"),await tr.ageGenderNet.loadFromUri("/models/age_gender_model"),await tr.faceRecognitionNet.loadFromUri("/models/face_recognition"),console.log("face-api.js models loaded (client-side)."),await e$(),A(),N.value&&(N.value.onloadedmetadata=()=>{C.value&&F&&F(),R()}),window.addEventListener("resize",()=>{F&&F()})}),t$(()=>{window.removeEventListener("resize",F)}),Lv(i,se=>{se&&setTimeout(()=>{i.value=null,o.value=0},1e4)});const K=async se=>{await t.getDailyLogs(n.value,{...se,date:new Date},!0)},j=se=>{l.value=se},Z=se=>{console.log("Edit timelog:",se)};async function ee(){l.value.length&&alert(`Deleting ${l.value.length} selected timelogs`)}async function X(){await t.getDailyLogs(n.value,{page:1,limit:5,date:new Date},!0)}function re(){const se=new Date,ue=se.getHours()*60+se.getMinutes();ue===0?s.value="time_in":ue>=1&&ue<=30?s.value="time_out":ue>=31&&ue<480||ue>=480&&ue<=720?s.value="time_in":ue>=721&&ue<=750?s.value="time_out":ue>=751&&ue<=1020?s.value="time_in":ue>=1021&&ue<=1050?s.value="time_out":(ue>=1051&&ue<1440,s.value="time_in")}function te(se){return new Date(se).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}function ae(){const se=new Date;r.value=se.toLocaleTimeString([],{hour12:!0}),a.value=se.toLocaleDateString([],{weekday:"long",month:"long",day:"numeric",year:"numeric"})}async function oe(){const se=document.createElement("canvas");if(!N.value)throw new Error("Video element not available");se.width=N.value.videoWidth,se.height=N.value.videoHeight,se.getContext("2d").drawImage(N.value,0,0);const Le=se.toDataURL("image/jpeg");if(!Le||!Le.startsWith("data:image/jpeg;base64,"))throw new Error("Invalid image data captured.");return Le}async function we(){let se;try{se=await oe()}catch(Le){console.error("Error capturing image:",Le);return}const ue=await t.faceVerifyTimeLog(se,s.value);t.error?(i.value=null,o.value=0):(ue.message==="Match found"?(i.value=ue.employee,o.value=ue.distance,n.value=ue.employee.id):(i.value=null,o.value=0),X())}async function ve(){s.value="time_in",await we(),D.value="Manual Time In recorded!",setTimeout(()=>{D.value=""},3e3),X()}async function ce(){s.value="time_out",await we(),D.value="Manual Time Out recorded!",setTimeout(()=>{D.value=""},3e3),X()}function Te(){E.value&&(E.value.requestFullscreen?E.value.requestFullscreen():E.value.webkitRequestFullscreen?E.value.webkitRequestFullscreen():E.value.msRequestFullscreen&&E.value.msRequestFullscreen())}const Ee=zv(()=>s.value==="time_in"?"Time In":"Time Out");return(se,ue)=>(Wu(),Mm("div",lce,[mt("header",uce,[mt("div",pce,[dce,mt("div",hce,[mt("div",cce,Na(r.value),1),mt("div",mce,Na(a.value),1)])])]),mt("div",fce,[mt("div",{class:"w-full md:w-2/3 p-4",ref_key:"tableContainer",ref:p},[mt("div",gce,[Po(t).error?(Wu(),Pv(l$,{key:0,icon:Po(h$),color:"danger"},{default:Kd(()=>[Bv(Na(Po(t).error),1)]),_:1},8,["icon"])):Xd("",!0),Zd(u$,{icon:Po(m$),title:"Timelogs",main:""},{default:Kd(()=>[mt("div",yce,[l.value.length?(Wu(),Pv(d$,{key:0,icon:Po(c$),color:"danger",label:"Delete",onClick:ee,"aria-label":"Delete selected timelogs"},null,8,["icon"])):Xd("",!0)])]),_:1},8,["icon"]),Zd(p$,{class:"mb-6"},{default:Kd(()=>[Zd(o$,{columns:U,data:G.value,loading:Po(t).isLoading,checkable:"","show-action":!1,onQueryChange:K,onSelected:j,onEdit:Z},null,8,["data","loading"])]),_:1})])],512),mt("div",bce,[mt("div",{ref_key:"cameraContainerRef",ref:E,class:"bg-white rounded shadow p-4 h-full flex flex-col",role:"region","aria-label":"Camera Feed"},[mt("div",xce,[mt("video",{ref_key:"videoRef",ref:N,class:"absolute inset-0 w-full h-full border border-gray-300 rounded",autoplay:"",playsinline:""},null,512),mt("canvas",{ref_key:"canvasRef",ref:C,class:"absolute inset-0 w-full h-full pointer-events-none"},null,512)]),mt("div",vce,[mt("div",wce,Na(Ee.value),1)]),mt("div",kce,[mt("button",{onClick:Te,disabled:S.value,"aria-label":"Verify My Attendance",class:"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded transition duration-300 flex items-center"},[S.value?(Wu(),Mm("span",Sce)):Xd("",!0),Bv(" Verify My Attendance ")],8,Ice)]),mt("div",{class:"flex justify-center mt-4 space-x-2"},[mt("button",{onClick:ve,class:"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded transition duration-300","aria-label":"Manual Time In"}," Manual Time In "),mt("button",{onClick:ce,class:"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded transition duration-300","aria-label":"Manual Time Out"}," Manual Time Out ")])],512)])]),Zd(n$,{name:"fade"},{default:Kd(()=>[i.value?(Wu(),Mm("div",Nce,[mt("div",Tce,[_ce,mt("span",Cce," Employee: "+Na(i.value.first_name)+" "+Na(i.value.last_name)+" (ID: "+Na(i.value.id)+") ",1),mt("span",Ece,"Distance: "+Na(o.value.toFixed(2)),1)])])):Xd("",!0)]),_:1})]))}},jce=f$($ce,[["__scopeId","data-v-6b330e57"]]);export{jce as default};
