import{J as c,K as p,a as u}from"./index.a2c9f28c.js";const i={async create(t){try{return(await c.post("/customer",t)).data}catch(a){throw new Error(`Error creating customer: ${a.message}`)}},async getById(t){try{return(await c.get(`/customer/${t}`)).data}catch(a){throw new Error(`Error fetching customer: ${a.message}`)}},async updateById(t,a){try{return(await c.put(`/customer/${t}`,a)).data}catch(s){throw new Error(`Error updating customer: ${s.message}`)}},async delete(t){try{return(await c.delete(`/customer/${t}`)).data}catch(a){throw new Error(`Error deleting customer: ${a.message}`)}},async list(t){try{return(await c.get("/customer",{params:t})).data}catch(a){throw new Error(`Error fetching customer list: ${a.message}`)}}},S=p("customer",()=>{const t=u({total:0,totalPages:1,currentPage:1,pageSize:10,data:[]}),a=u(null),s=u(!1),l=u(null),d=u(!1);return{items:t,item:a,isLoading:s,error:l,isLoaded:d,fetchItems:async(r={},n=!1)=>{var e;if(l.value=null,!(!n&&d.value))try{s.value=!0;const o=await i.list(r);Object.assign(t.value,{total:o.total||0,totalPages:o.totalPages||1,currentPage:r.page||1,pageSize:r.limit||10,data:o.data||[]}),d.value=!0}catch(o){l.value=((e=o==null?void 0:o.response)==null?void 0:e.message)||"Failed to fetch customers"}finally{s.value=!1}},fetchItemById:async r=>{var n;l.value=null;try{s.value=!0;const e=await i.getById(r);a.value=e}catch(e){l.value=((n=e==null?void 0:e.response)==null?void 0:n.message)||"Failed to fetch customer"}finally{s.value=!1}},createItem:async r=>{var n;l.value=null;try{s.value=!0;const e=await i.create(r);t.value.data.push(e),t.value.total+=1}catch(e){l.value=((n=e==null?void 0:e.response)==null?void 0:n.message)||"Failed to create customer"}finally{s.value=!1}},updateItem:async(r,n)=>{var e;l.value=null;try{s.value=!0;const o=await i.updateById(r,n),m=t.value.data.findIndex(v=>v.id===r);m!==-1&&(t.value.data[m]=o)}catch(o){l.value=((e=o==null?void 0:o.response)==null?void 0:e.message)||"Failed to update customer"}finally{s.value=!1}},deleteItem:async r=>{var n;l.value=null;try{s.value=!0,await i.delete(r),t.value.data=t.value.data.filter(e=>e.id!==r),t.value.total-=1}catch(e){l.value=((n=e==null?void 0:e.response)==null?void 0:n.message)||"Failed to delete customer"}finally{s.value=!1}},resetStore:()=>{t.value={total:0,totalPages:1,currentPage:1,pageSize:10,data:[]},a.value=null,d.value=!1,s.value=!1,l.value=null}}});export{S as u};
